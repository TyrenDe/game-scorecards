{"version":3,"sources":["Theme.tsx","Header.tsx","Split/CardRank.tsx","BasePage.tsx","Home.tsx","Split/BoardRow.tsx","Split/SplitBoard.tsx","Split/Split.tsx","About.tsx","Main.tsx","App.tsx","index.tsx"],"names":["DarkTheme","PrimaryBackgroundColor","SecondaryBackgroundColor","InverseBackgroundColor","PrimaryColor","InverseColor","LinkColor","LinkHoverColor","styledComponents","styled","default","createGlobalStyle","css","ThemeProvider","keyframes","CardRank","StyledHeader","div","_templateObject","props","theme","Header","react","Link","to","React","BasePage","document","title","this","getPageName","Home","SquareHeader","button","BoardRow_templateObject","Square","_templateObject2","isSelected","BoardRow","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","event","onClick","index","selected","values","_this","className","handleClick","rank","renderValue","ScoreHeader","SplitBoard_templateObject","Score","SplitBoard_templateObject2","ScoreValue","_templateObject3","ScoreButton","_templateObject4","Split","state","negatives","A","K","Q","J","10","9","8","7","6","5","4","3","2","getRankValues","Ace","King","Queen","Jack","Ten","Nine","Eight","Seven","Six","Five","Four","Three","Two","_this2","Split_BoardRow","addOne","newState","copyState","setState","_this3","subNegative","addNegative","calculateScore","renderRow","SplitBoard","About","MainWindow","Main_templateObject","Main","Switch","Route","exact","path","component","GlobalStyle","App_templateObject","App","src_Header","src_Main","ReactDOM","HashRouter","src_App","getElementById"],"mappings":"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","file":"static/js/main.e89ba431.chunk.js","sourcesContent":["import * as styledComponents from \"styled-components\";\r\nimport { ThemedStyledComponentsModule } from \"styled-components\";\r\n\r\ninterface IScorecardTheme {\r\n  readonly PrimaryBackgroundColor: string;\r\n  readonly SecondaryBackgroundColor: string;\r\n  readonly InverseBackgroundColor: string;\r\n  readonly PrimaryColor: string;\r\n  readonly InverseColor: string;\r\n  readonly LinkColor: string;\r\n  readonly LinkHoverColor: string;\r\n}\r\n\r\nexport const DarkTheme: IScorecardTheme = {\r\n  PrimaryBackgroundColor: \"#41464e\",\r\n  SecondaryBackgroundColor: \"#282c34\",\r\n  InverseBackgroundColor: \"#EEE9E1\",\r\n  \r\n  PrimaryColor: \"white\",\r\n  InverseColor: \"black\",\r\n  \r\n  LinkColor: \"#61dafb\",\r\n  LinkHoverColor: \"#acf1ff\",\r\n}\r\n\r\nexport const LightTheme: IScorecardTheme = {\r\n  PrimaryBackgroundColor: \"#CEC9C1\",\r\n  SecondaryBackgroundColor: \"#EEE9E1\",\r\n  InverseBackgroundColor: \"#41464e\",\r\n  \r\n  PrimaryColor: \"black\",\r\n  InverseColor: \"black\",\r\n  \r\n  LinkColor: \"#219acb\",\r\n  LinkHoverColor: \"#1156aa\",\r\n}\r\n\r\nconst {\r\n  default: styled,\r\n  css,\r\n  createGlobalStyle,\r\n  keyframes,\r\n  ThemeProvider\r\n} = styledComponents as ThemedStyledComponentsModule<IScorecardTheme>;\r\n\r\nexport { css, createGlobalStyle, keyframes, ThemeProvider };\r\nexport default styled;","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport styled from \"./Theme\";\r\n\r\nconst StyledHeader = styled.div`\r\n  background-color: ${ props => props.theme.SecondaryBackgroundColor };\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: calc(10px + 1vmin);\r\n  color: ${ props => props.theme.PrimaryColor };\r\n`;\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <StyledHeader>\r\n        <nav>\r\n          <ul>\r\n            <li><Link to='/'>Home</Link></li>\r\n            <li><Link to='/split'>Split</Link></li>\r\n            <li><Link to='/about'>About</Link></li>\r\n          </ul>\r\n        </nav>\r\n      </StyledHeader>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","export enum CardRank {\r\n  Ace = 'A',\r\n  King = 'K',\r\n  Queen = 'Q',\r\n  Jack = 'J',\r\n  Ten = '10',\r\n  Nine = '9',\r\n  Eight = '8',\r\n  Seven = '7',\r\n  Six = '6',\r\n  Five = '5',\r\n  Four = '4',\r\n  Three = '3',\r\n  Two = '2',\r\n}\r\n\r\nexport default CardRank;","import * as React from \"react\";\r\n\r\nabstract class BasePage<P = {}, S = {}, SS = any> extends React.Component<P, S, SS> {\r\n  public abstract getPageName(): string;\r\n\r\n  componentDidMount() {\r\n    document.title=\"Game Scorecards: \" + this.getPageName();\r\n  }\r\n}\r\n\r\nexport default BasePage;","import * as React from \"react\";\r\n\r\nimport BasePage from \"./BasePage\";\r\n\r\nclass Home extends BasePage {\r\n  public getPageName(): string {\r\n    return \"Home\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>This is the home page where we provide useful details.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import * as React from \"react\";\r\n\r\nimport styled from \"../Theme\";\r\nimport { CardRank } from \"./CardRank\";\r\n\r\nconst SquareHeader = styled.button`\r\n  background: ${ props => props.theme.SecondaryBackgroundColor };\r\n  color: ${ props => props.theme.PrimaryColor };\r\n  border: 1px solid ${ props => props.theme.InverseBackgroundColor };\r\n  float: left;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  line-height: 34px;\r\n  height: 34px;\r\n  margin-right: -1px;\r\n  margin-top: -1px;\r\n  padding: 0;\r\n  text-align: center;\r\n  width: 55px;\r\n`;\r\n\r\nconst Square = styled<{isSelected: boolean}, \"div\">(\"div\")`\r\n  background: ${ props => props.isSelected ? props.theme.PrimaryBackgroundColor : props.theme.InverseBackgroundColor };\r\n  border: 1px solid ${ props => props.isSelected ? props.theme.PrimaryColor : props.theme.SecondaryBackgroundColor };\r\n  float: left;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  line-height: 34px;\r\n  height: 34px;\r\n  margin-right: -1px;\r\n  margin-top: -1px;\r\n  padding: 0;\r\n  text-align: center;\r\n  width: 55px;\r\n  color: ${ props => props.isSelected ? props.theme.PrimaryColor : props.theme.InverseColor };\r\n\r\n  ::after {\r\n    clear: both;\r\n    content: \"\";\r\n    display: table;\r\n  }\r\n`;\r\n\r\ninterface IRowProp {\r\n  rank: CardRank;\r\n  values: number[];\r\n  selected: number;\r\n  onClick(event: React.MouseEvent<HTMLButtonElement>): void;\r\n}\r\n\r\nclass BoardRow extends React.Component<IRowProp> {\r\n  constructor(props: IRowProp) {\r\n    super(props);\r\n  }\r\n\r\n  private handleClick(event: React.MouseEvent<HTMLButtonElement>): void {\r\n    this.props.onClick(event);\r\n  }\r\n\r\n  renderValue(index: number) {\r\n    return (\r\n      <Square isSelected={(this.props.selected == index)}>{this.props.values[index]}</Square>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (<div className=\"splitRow\">\r\n      <SquareHeader onClick={(event) => { this.handleClick(event); }}>{this.props.rank}</SquareHeader>\r\n      {this.renderValue(0)}\r\n      {this.renderValue(1)}\r\n      {this.renderValue(2)}\r\n      {this.renderValue(3)}\r\n      {this.renderValue(4)}\r\n      {this.renderValue(5)}\r\n    </div>);\r\n  }\r\n}\r\n\r\nexport default BoardRow;\r\n","import * as React from \"react\";\r\n\r\nimport styled from \"../Theme\";\r\nimport CardRank from \"./CardRank\";\r\nimport BoardRow from \"./BoardRow\";\r\n\r\ntype CardRankMap = {[TKey in CardRank]: number};\r\n\r\nconst ScoreHeader = styled.div`\r\n  width: ${55 * 7}px;\r\n  margin-bottom: 10px;\r\n\r\n   ::after {\r\n    clear: both;\r\n    content: \"\";\r\n    display: table;\r\n  }\r\n`;\r\n\r\nconst Score = styled.div`\r\n  float: left;\r\n  margin: 0px 20px 0px 20px;\r\n`;\r\n\r\nconst ScoreValue = styled(Score)`\r\n  margin: 0px 0px 0px 40px;\r\n`;\r\n\r\nconst ScoreButton = styled.button`\r\n  float: left;\r\n`;\r\n\r\nexport interface IBoardState {\r\n  negatives: number,\r\n  values: CardRankMap,\r\n}\r\n\r\nclass Split extends React.Component<{}, IBoardState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      negatives: 0,\r\n      values: {\r\n        \"A\": 0,\r\n        \"K\": 0,\r\n        \"Q\": 0,\r\n        \"J\": 0,\r\n        \"10\": 0,\r\n        \"9\": 0,\r\n        \"8\": 0,\r\n        \"7\": 0,\r\n        \"6\": 0,\r\n        \"5\": 0,\r\n        \"4\": 0,\r\n        \"3\": 0,\r\n        \"2\": 0,\r\n      },\r\n    };\r\n  }\r\n\r\n  private static getRankValues(rank: CardRank): number[] {\r\n    switch (rank) {\r\n      case CardRank.Ace: return [0, 30, 70, 120, 180, 200];\r\n      case CardRank.King:\r\n      case CardRank.Queen:\r\n      case CardRank.Jack:\r\n        return [0, 20, 50, 90, 140, 200];\r\n      case CardRank.Ten:\r\n      case CardRank.Nine:\r\n      case CardRank.Eight:\r\n      case CardRank.Seven:\r\n      case CardRank.Six:\r\n      case CardRank.Five:\r\n      case CardRank.Four:\r\n      case CardRank.Three:\r\n        return [0, 10, 30, 60, 100, 200];\r\n      case CardRank.Two: return [0, 5, 20, 40, 70, 200];\r\n      default: return [];\r\n    }\r\n  }\r\n\r\n  private calculateScore(): number {\r\n    return this.state.negatives * -5 + \r\n      Split.getRankValues(CardRank.Ace)[this.state.values[CardRank.Ace]] +\r\n      Split.getRankValues(CardRank.King)[this.state.values[CardRank.King]] +\r\n      Split.getRankValues(CardRank.Queen)[this.state.values[CardRank.Queen]] +\r\n      Split.getRankValues(CardRank.Jack)[this.state.values[CardRank.Jack]] +\r\n      Split.getRankValues(CardRank.Ten)[this.state.values[CardRank.Ten]] +\r\n      Split.getRankValues(CardRank.Nine)[this.state.values[CardRank.Nine]] +\r\n      Split.getRankValues(CardRank.Eight)[this.state.values[CardRank.Eight]] +\r\n      Split.getRankValues(CardRank.Seven)[this.state.values[CardRank.Seven]] +\r\n      Split.getRankValues(CardRank.Six)[this.state.values[CardRank.Six]] +\r\n      Split.getRankValues(CardRank.Five)[this.state.values[CardRank.Five]] +\r\n      Split.getRankValues(CardRank.Four)[this.state.values[CardRank.Four]] +\r\n      Split.getRankValues(CardRank.Three)[this.state.values[CardRank.Three]] +\r\n      Split.getRankValues(CardRank.Two)[this.state.values[CardRank.Two]];\r\n  }\r\n\r\n  renderRow(rank: CardRank) {\r\n    return (\r\n      <BoardRow rank={rank} values={Split.getRankValues(rank)} selected={this.state.values[rank]} onClick={event => { this.addOne(rank); }}/>\r\n    );\r\n  }\r\n\r\n  private copyState(): IBoardState {\r\n    return {\r\n      negatives: this.state.negatives,\r\n      values: {\r\n        \"A\": this.state.values[CardRank.Ace],\r\n        \"K\": this.state.values[CardRank.King],\r\n        \"Q\": this.state.values[CardRank.Queen],\r\n        \"J\": this.state.values[CardRank.Jack],\r\n        \"10\": this.state.values[CardRank.Ten],\r\n        \"9\": this.state.values[CardRank.Nine],\r\n        \"8\": this.state.values[CardRank.Eight],\r\n        \"7\": this.state.values[CardRank.Seven],\r\n        \"6\": this.state.values[CardRank.Six],\r\n        \"5\": this.state.values[CardRank.Five],\r\n        \"4\": this.state.values[CardRank.Four],\r\n        \"3\": this.state.values[CardRank.Three],\r\n        \"2\": this.state.values[CardRank.Two],\r\n      },\r\n    };\r\n  }\r\n\r\n  private addOne(rank: CardRank) {\r\n    let newState = this.copyState();\r\n\r\n    newState.values[rank] = (newState.values[rank] + 1) % 6;\r\n\r\n    this.setState(newState);\r\n  }\r\n\r\n  private addNegative() {\r\n    let newState = this.copyState();\r\n\r\n    newState.negatives++;\r\n\r\n    this.setState(newState);\r\n  }\r\n\r\n  private subNegative() {\r\n    let newState = this.copyState();\r\n\r\n    newState.negatives--;\r\n    if (newState.negatives < 0) {\r\n      newState.negatives = 0;\r\n    }\r\n\r\n    this.setState(newState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ScoreHeader>\r\n          <ScoreButton onClick={() => this.subNegative()}>+5</ScoreButton>\r\n          <Score>Negative: {this.state.negatives * -5}</Score>\r\n          <ScoreButton onClick={() => this.addNegative()}>-5</ScoreButton>\r\n          <ScoreValue>Score: {this.calculateScore()}</ScoreValue>\r\n        </ScoreHeader>\r\n        { this.renderRow(CardRank.Ace) }\r\n        { this.renderRow(CardRank.King) }\r\n        { this.renderRow(CardRank.Queen) }\r\n        { this.renderRow(CardRank.Jack) }\r\n        { this.renderRow(CardRank.Ten) }\r\n        { this.renderRow(CardRank.Nine) }\r\n        { this.renderRow(CardRank.Eight) }\r\n        { this.renderRow(CardRank.Seven) }\r\n        { this.renderRow(CardRank.Six) }\r\n        { this.renderRow(CardRank.Five) }\r\n        { this.renderRow(CardRank.Four) }\r\n        { this.renderRow(CardRank.Three) }\r\n        { this.renderRow(CardRank.Two) }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Split;","import * as React from \"react\";\r\n\r\nimport BasePage from \"../BasePage\";\r\nimport SplitBoard from \"./SplitBoard\";\r\n\r\nclass Split extends BasePage {\r\n  public getPageName(): string {\r\n    return \"Split\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <SplitBoard/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Split;","import * as React from \"react\";\r\n\r\nimport BasePage from \"./BasePage\";\r\n\r\nclass About extends BasePage {\r\n  public getPageName(): string {\r\n    return \"About\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        This site was created by Shane DeSeranno and Donald Gill to aid in game scoring.\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;","import * as React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport styled from \"./Theme\";\r\nimport Home from \"./Home\";\r\nimport Split from \"./Split/Split\";\r\nimport About from \"./About\";\r\n\r\nconst MainWindow = styled.div`\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: calc(10px + 1vmin);\r\n  color: ${ props => props.theme.PrimaryColor };\r\n  padding: 5px;\r\n`;\r\n\r\nclass Main extends React.Component {\r\n  render() {\r\n    return (\r\n      <MainWindow>\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route path='/split' component={Split} />\r\n          <Route path='/about' component={About} />\r\n        </Switch>\r\n      </MainWindow>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;","import * as React from \"react\";\r\n\r\nimport { createGlobalStyle, DarkTheme, LightTheme, ThemeProvider } from \"./Theme\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    background-color: ${ props => props.theme.PrimaryBackgroundColor };\r\n  }\r\n\r\n  nav ul {\r\n    list-style: none;\r\n    overflow: hidden;\r\n    position: relative;\r\n  }\r\n\r\n  nav ul li {\r\n    float: left;\r\n    margin: 0 20px 0 0;\r\n  }\r\n\r\n  a, a:visited {\r\n    color: ${ props => props.theme.LinkColor };\r\n  }\r\n\r\n  a:hover {\r\n    color: ${ props => props.theme.LinkHoverColor };\r\n  }\r\n`;\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={DarkTheme}>\r\n        <React.Fragment>\r\n          <GlobalStyle />\r\n          <Header />\r\n          <Main />\r\n        </React.Fragment>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render((\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>\r\n), document.getElementById('root'));\r\n"],"sourceRoot":""}