{"version":3,"sources":["Store/Generic/Types.ts","Store/Generic/Reducers.ts","Store/MilleBornes/Types.ts","Store/MilleBornes/Reducers.ts","Store/Mu/Types.ts","Store/Split/Types.ts","Store/Mu/Reducers.ts","Store/System/Types.ts","Store/Split/Reducers.ts","Store/System/Reducers.ts","Store/index.ts","Theme.tsx","Components/Header/index.tsx","Components/Footer/index.tsx","Store/System/Actions.ts","Components/Home/index.tsx","Components/About/About.tsx","Components/Generic/ScoreCard.tsx","Store/Generic/Actions.ts","Components/Generic/index.tsx","Components/MilleBornes/SafetyRow.tsx","Components/MilleBornes/ScoreCard.tsx","Store/MilleBornes/Actions.ts","Components/MilleBornes/index.tsx","Components/Mu/ScoreCard.tsx","Components/Mu/index.tsx","Store/Mu/Actions.ts","Components/Split/ScoreCard.tsx","Store/Split/Actions.ts","Components/Split/index.tsx","Components/Main/index.tsx","Components/App/index.tsx","index.tsx"],"names":["GENERIC_RESET_ALL","GENERIC_ADD_SCORE","initialState","scores","MILLE_BORNES_RESET_ALL","MILLE_BORNES_ADD_SCORE","SplitRanks","MU_RESET_ALL","MU_ADD_SCORE","ThemeOptions","SPLIT_RESET_ALL","SPLIT_ADD_VALUE","SPLIT_REMOVE_VALUE","SYSTEM_CHANGE_THEME","SYSTEM_ADD_NAME","SYSTEM_REMOVE_NAME","selectedTheme","types","Dark","names","middleware","rootReducer","combineReducers","generic","state","action","produce","draft","type","name","value","milleBornes","mu","split","values","A","K","Q","J","10","9","8","7","6","5","4","3","2","Negative","rank","max","Math","system","newTheme","push","index","indexOf","splice","store","createStore","thunk","applyMiddleware","lightTheme","palette","primary","indigo","secondary","lightBlue","darkTheme","Themes","option","Light","light","dark","createMuiTheme","Header","position","this","props","location","pathname","label","to","component","Link","React","withRouter","Footer","p","error","newName","showAddPlayerDialog","className","classes","appBar","chipWrapper","icon","variant","chip","onClick","handleAdd","map","key","onDelete","handleDelete","open","maxWidth","fullWidth","onClose","handleDialogClose","required","autoFocus","onChange","handleNewNameChange","onKeyPress","handleKeyPress","length","color","disabled","handleAddName","event","preventDefault","target","trim","find","profile","toLowerCase","setState","addName","removeName","bind","connect","dispatch","Mui","theme","top","bottom","margin","spacing","display","flexWrap","Home","About","ScoreCard","showScoreDialog","myScore","scoreCardPaper","scoreButton","handleScoreRound","handleChange","handleUpdateScore","parseInt","console","log","isNaN","addScore","width","padding","textAlign","Generic","genericWrapper","handleReset","reset","SafetyRow","item","xs","right","marginTop","center","checked","played","togglePlayed","coupFourre","toggleCoupFourre","withStyles","verticalAlign","distance","rightOfWayPlayed","rightOfWayPlayedCF","drivingAcePlayed","drivingAcePlayedCF","fuelTankPlayed","fuelTankPlayedCF","punctureProofPlayed","punctureProofPlayedCF","delayedAction","safeTrip","extension","shutout","getScore","id","gutterBottom","aria-labelledby","valueLabelDisplay","step","min","marks","handleDistanceChanged","container","handleToggleRightOfWay","handleToggleRightOfWayCF","handleToggleDrivingAce","handleToggleDrivingAceCF","handleToggleFuelTank","handleToggleFuelTankCF","handleTogglePunctureProof","handleTogglePunctureProofCF","handleToggleDelayedAction","handleToggleSafeTrip","handleToggleShutout","Array","isArray","score","MilleBornes","milleBornesWrapper","Trumps","PointsPerBid","getChiefTeamBonus","overTrump","bid","Black","Blue","Green","Red","Yellow","One","Seven","None","Mu","points","getDefaultState","handleScoreHand","buttonSpacing","handleStalemate","muWrapper","sm","handleBidChanged","selectBox","htmlFor","handleOverTrumpChanged","inputProps","Zero","Two","Three","Four","Five","Six","Eight","Nine","underTrump","handleUnderTrumpChanged","createPlayerRow","canSave","showStalemateDialog","createStalemateRow","handleUpdateStalemate","canSaveStalemate","lastBidder","highestBidders","handleLastBidder","handleHighestBidder","included","filter","concat","chief","partner","sum","handleChief","handleVice","vice","handlePartner","handlePointsChange","newPoints","Object","assign","chiefTeamPoints","chiefTeamBidMade","playerCount","currentPoints","currentBid","getChiefTeamBidMade","missedBy","defaultState","marginLeft","ValueMap","calculateScore","createRow","Ten","justify","alignItems","row","handleIncrease","getRankValues","handleDecrease","addValue","removeValue","selectedIndex","avatars","avatarClass","avatar","selectedAvatar","toString","style","marginRight","minWidth","fontWeight","fontSize","height","backgroundColor","main","contrastText","marginBottom","Split","splitWrapper","Main","m","exact","path","App","currentTheme","getTheme","ThemeProvider","CssBaseline","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.22c56f87.chunk.js","sourcesContent":["export interface IGenericState {\r\n  readonly scores: Record<string, number>;\r\n}\r\n\r\nexport const GENERIC_RESET_ALL = 'GENERIC_RESET_ALL';\r\nexport const GENERIC_ADD_SCORE = 'GENERIC_ADD_SCORE';\r\n\r\nexport interface IGenericResetAllAction {\r\n  type: typeof GENERIC_RESET_ALL;\r\n}\r\n\r\nexport interface IGenericAddScoreAction {\r\n  name: string;\r\n  value: number;\r\n  type: typeof GENERIC_ADD_SCORE;\r\n}\r\n\r\nexport type GenericActionTypes =\r\n  IGenericResetAllAction |\r\n  IGenericAddScoreAction;\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.IGenericState = {\r\n  scores: {},\r\n};\r\n\r\nexport function genericReducer(state = initialState, action: types.GenericActionTypes): types.IGenericState {\r\n  return produce(state, (draft: Draft<types.IGenericState>) => {\r\n    switch (action.type) {\r\n      case types.GENERIC_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.GENERIC_ADD_SCORE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = 0;\r\n        }\r\n\r\n        draft.scores[action.name] = draft.scores[action.name] + action.value;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","export interface IMilleBornesState {\r\n  readonly scores: Record<string, number>;\r\n}\r\n\r\nexport const MILLE_BORNES_RESET_ALL = 'MILLE_BORNES_RESET_ALL';\r\nexport const MILLE_BORNES_ADD_SCORE = 'MILLE_BORNES_ADD_SCORE';\r\n\r\nexport interface IMilleBornesResetAllAction {\r\n  type: typeof MILLE_BORNES_RESET_ALL;\r\n}\r\n\r\nexport interface IMilleBornesAddScoreAction {\r\n  name: string;\r\n  value: number;\r\n  type: typeof MILLE_BORNES_ADD_SCORE;\r\n}\r\n\r\nexport type MilleBornesActionTypes =\r\n  IMilleBornesResetAllAction |\r\n  IMilleBornesAddScoreAction;\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.IMilleBornesState = {\r\n  scores: {},\r\n};\r\n\r\nexport function milleBornesReducer(state = initialState, action: types.MilleBornesActionTypes): types.IMilleBornesState {\r\n  return produce(state, (draft: Draft<types.IMilleBornesState>) => {\r\n    switch (action.type) {\r\n      case types.MILLE_BORNES_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.MILLE_BORNES_ADD_SCORE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = 0;\r\n        }\r\n\r\n        draft.scores[action.name] = draft.scores[action.name] + action.value;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","export interface IMuState {\r\n  readonly scores: Record<string, number>;\r\n}\r\n\r\nexport const MU_RESET_ALL = 'MU_RESET_ALL';\r\nexport const MU_ADD_SCORE = 'MU_ADD_SCORE';\r\n\r\nexport interface IMuResetAllAction {\r\n  type: typeof MU_RESET_ALL;\r\n}\r\n\r\nexport interface IMuAddScoreAction {\r\n  name: string;\r\n  value: number;\r\n  type: typeof MU_ADD_SCORE;\r\n}\r\n\r\nexport type MuActionTypes =\r\n  IMuResetAllAction |\r\n  IMuAddScoreAction;\r\n","export enum SplitRanks {\r\n  A = 'A',\r\n  K = 'K',\r\n  Q = 'Q',\r\n  J = 'J',\r\n  Ten = '10',\r\n  Nine = '9',\r\n  Eight = '8',\r\n  Seven = '7',\r\n  Six = '6',\r\n  Five = '5',\r\n  Four = '4',\r\n  Three = '3',\r\n  Two = '2',\r\n\r\n  Negative = 'Negative',\r\n}\r\n\r\nexport interface ISplitScore {\r\n  readonly values: Record<SplitRanks, number>;\r\n}\r\n\r\nexport interface ISplitState {\r\n  readonly scores: Record<string, ISplitScore>;\r\n}\r\n\r\nexport const SPLIT_RESET_ALL = 'SPLIT_RESET_ALL';\r\nexport const SPLIT_ADD_VALUE = 'SPLIT_ADD_VALUE';\r\nexport const SPLIT_REMOVE_VALUE = 'SPLIT_REMOVE_VALUE';\r\n\r\nexport interface ISplitAddValueAction {\r\n  name: string;\r\n  rank: SplitRanks;\r\n  type: typeof SPLIT_ADD_VALUE;\r\n}\r\n\r\nexport interface ISplitRemoveValueAction {\r\n  name: string;\r\n  rank: SplitRanks;\r\n  type: typeof SPLIT_REMOVE_VALUE;\r\n}\r\n\r\nexport interface ISplitResetAllAction {\r\n  type: typeof SPLIT_RESET_ALL;\r\n}\r\n\r\nexport type SplitActionTypes =\r\n  ISplitAddValueAction |\r\n  ISplitRemoveValueAction |\r\n  ISplitResetAllAction;\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.IMuState = {\r\n  scores: {},\r\n};\r\n\r\nexport function muReducer(state = initialState, action: types.MuActionTypes): types.IMuState {\r\n  return produce(state, (draft: Draft<types.IMuState>) => {\r\n    switch (action.type) {\r\n      case types.MU_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.MU_ADD_SCORE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = 0;\r\n        }\r\n\r\n        draft.scores[action.name] = draft.scores[action.name] + action.value;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","export enum ThemeOptions {\r\n  Light,\r\n  Dark,\r\n}\r\n\r\nexport interface ISystemState {\r\n  selectedTheme: ThemeOptions;\r\n  names: string[];\r\n}\r\n\r\nexport const SYSTEM_CHANGE_THEME = 'SYSTEM_CHANGE_THEME';\r\nexport const SYSTEM_ADD_NAME = 'SYSTEM_ADD_NAME';\r\nexport const SYSTEM_REMOVE_NAME = 'SYSTEM_REMOVE_NAME';\r\n\r\nexport interface ISystemChangeThemeAction {\r\n  newTheme: ThemeOptions;\r\n  type: typeof SYSTEM_CHANGE_THEME;\r\n}\r\n\r\nexport interface ISystemAddNameAction {\r\n  name: string;\r\n  type: typeof SYSTEM_ADD_NAME;\r\n}\r\n\r\nexport interface ISystemRemoveNameAction {\r\n  name: string;\r\n  type: typeof SYSTEM_REMOVE_NAME;\r\n}\r\n\r\nexport type SystemActionTypes =\r\n  ISystemChangeThemeAction |\r\n  ISystemAddNameAction |\r\n  ISystemRemoveNameAction;\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.ISplitState = {\r\n  scores: {},\r\n};\r\n\r\nfunction createEmptyScore(): Record<types.SplitRanks, number> {\r\n  return { A: 0, K: 0, Q: 0, J: 0, 10: 0, 9: 0, 8: 0, 7: 0, 6: 0, 5: 0, 4: 0, 3: 0, 2: 0, Negative: 0};\r\n}\r\n\r\nexport function splitReducer(state = initialState, action: types.SplitActionTypes): types.ISplitState {\r\n  return produce(state, (draft: Draft<types.ISplitState>) => {\r\n    switch (action.type) {\r\n      case types.SPLIT_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.SPLIT_ADD_VALUE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = {\r\n            values: createEmptyScore(),\r\n          };\r\n        }\r\n\r\n        const value = draft.scores[action.name].values[action.rank];\r\n        const max: number = (action.rank === types.SplitRanks.Negative) ? 500 : 6;\r\n        draft.scores[action.name].values[action.rank] = (value + 1) % max;\r\n        break;\r\n      }\r\n      case types.SPLIT_REMOVE_VALUE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = {\r\n            values: createEmptyScore(),\r\n          };\r\n        }\r\n\r\n        const value = draft.scores[action.name].values[action.rank];\r\n        draft.scores[action.name].values[action.rank] = Math.max(0, value - 1);\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.ISystemState = {\r\n  selectedTheme: types.ThemeOptions.Dark,\r\n  names: (process.env.NODE_ENV === 'development') ? ['Shane', 'Lara', 'Don', 'Leah'] : [],\r\n};\r\n\r\nexport function systemReducer(state = initialState, action: types.SystemActionTypes): types.ISystemState {\r\n  return produce(state, (draft: Draft<types.ISystemState>) => {\r\n    switch (action.type) {\r\n      case types.SYSTEM_CHANGE_THEME: {\r\n        draft.selectedTheme = action.newTheme;\r\n        break;\r\n      }\r\n      case types.SYSTEM_ADD_NAME: {\r\n        draft.names.push(action.name);\r\n        break;\r\n      }\r\n      case types.SYSTEM_REMOVE_NAME: {\r\n        const index = draft.names.indexOf(action.name);\r\n        if (index > -1) {\r\n          draft.names.splice(index, 1);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import { applyMiddleware, combineReducers, createStore, Store } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { genericReducer } from './Generic/Reducers';\r\nimport { milleBornesReducer } from './MilleBornes/Reducers';\r\nimport { muReducer } from './Mu/Reducers';\r\nimport { splitReducer } from './Split/Reducers';\r\nimport { systemReducer } from './System/Reducers';\r\n\r\nconst rootReducer = combineReducers({\r\n  generic: genericReducer,\r\n  milleBornes: milleBornesReducer,\r\n  mu: muReducer,\r\n  split: splitReducer,\r\n  system: systemReducer,\r\n});\r\n\r\nconst bindMiddleware = (middleware: any) => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const { composeWithDevTools } = require('redux-devtools-extension');\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nconst store: Store<AppState> = createStore(rootReducer, bindMiddleware([thunk]));\r\nexport default store;\r\n","import { lightBlue, indigo } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeOptions } from './Store/System/Types';\r\nimport { PaletteType } from '@material-ui/core';\r\n\r\nconst lightTheme = {\r\n  palette: {\r\n    primary: indigo,\r\n    secondary: lightBlue,\r\n    type: 'light' as PaletteType,\r\n  },\r\n};\r\n\r\nconst darkTheme = {\r\n  palette: {\r\n    primary: indigo,\r\n    secondary: lightBlue,\r\n    type: 'dark' as PaletteType,\r\n  },\r\n};\r\n\r\nexport class Themes {\r\n  public static getTheme(option: ThemeOptions) {\r\n    switch (option) {\r\n      case ThemeOptions.Light:\r\n        return Themes.light;\r\n    }\r\n\r\n    return Themes.dark;\r\n  }\r\n\r\n  private static light = createMuiTheme(lightTheme);\r\n  private static dark = createMuiTheme(darkTheme);\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\r\n\r\ntype IAllHeaderProps =\r\n  RouteComponentProps<any>;\r\n\r\nclass Header extends React.Component<IAllHeaderProps, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <nav>\r\n          <Mui.AppBar position='static'>\r\n            <Mui.Tabs value={this.props.location.pathname}>\r\n              <Mui.Tab value='/' label='Home' to='/' component={Link} />\r\n              <Mui.Tab value='/split' label='Split' to='/split' component={Link} />\r\n              <Mui.Tab value='/millebornes' label='Mille Bornes' to='/millebornes' component={Link} />\r\n              <Mui.Tab value='/mu' label='Mü' to='/mu' component={Link} />\r\n              <Mui.Tab value='/generic' label='Generic' to='/generic' component={Link} />\r\n              <Mui.Tab value='/about' label='About' to='/about' component={Link} />\r\n            </Mui.Tabs>\r\n          </Mui.AppBar>\r\n        </nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import * as Mui from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as system from '../../Store/System';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  chipWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface IFooterProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IFooterActions {\r\n  addName(name: string): void;\r\n  removeName(name: string): void;\r\n}\r\n\r\ntype IAllFooterProps =\r\n  IFooterProps &\r\n  IFooterActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IFooterState {\r\n  error: string;\r\n  newName: string;\r\n  showAddPlayerDialog: boolean;\r\n}\r\n\r\nclass Footer extends React.Component<IAllFooterProps, IFooterState> {\r\n  constructor(p: IAllFooterProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      error: '',\r\n      newName: '',\r\n      showAddPlayerDialog: false,\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.AppBar position='fixed' className={this.props.classes.appBar}>\r\n          <div className={this.props.classes.chipWrapper}>\r\n            <Mui.Chip icon={<AddIcon />} label='Add Player' variant='outlined' className={this.props.classes.chip} onClick={this.handleAdd} />\r\n            {this.props.names.map((name) => <Mui.Chip key={name} label={name} variant='outlined' className={this.props.classes.chip} onDelete={() => this.handleDelete(name)} />)}\r\n          </div>\r\n        </Mui.AppBar>\r\n\r\n        <Mui.Dialog open={this.state.showAddPlayerDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogContent>\r\n            <Mui.TextField\r\n              fullWidth={true}\r\n              required={true}\r\n              autoFocus={true}\r\n              value={this.state.newName}\r\n              onChange={this.handleNewNameChange}\r\n              onKeyPress={this.handleKeyPress}\r\n              label='Player or Team Name'\r\n            />\r\n            {(this.state.error.length !== 0) ? <Mui.FormHelperText error={true}>{this.state.error}</Mui.FormHelperText> : null}\r\n          </Mui.DialogContent>\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              disabled={this.state.error.length !== 0 || this.state.newName.length === 0}\r\n              onClick={this.handleAddName}\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleKeyPress(event: React.KeyboardEvent<HTMLInputElement>): void {\r\n    if (event.key === 'Enter') {\r\n      if (this.state.error.length === 0) {\r\n        this.handleAddName();\r\n      }\r\n\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private handleNewNameChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n    const newName: string = event.target.value.trim();\r\n\r\n    let error: string = '';\r\n    const existingProfile: string | undefined = this.props.names.find((profile) => profile.toLowerCase() === newName.toLowerCase());\r\n    if (existingProfile) {\r\n      error = 'Player or team already exists';\r\n    }\r\n\r\n    this.setState({\r\n      error,\r\n      newName: event.target.value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleAddName(): void {\r\n    const newName: string = this.state.newName.trim();\r\n\r\n    if (newName.length > 0) {\r\n      this.props.addName(newName);\r\n      this.setState({\r\n        newName: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showAddPlayerDialog: false,\r\n      newName: '',\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleAdd(): void {\r\n    this.setState({\r\n      showAddPlayerDialog: true,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDelete(name: string): void {\r\n    this.props.removeName(name);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IFooterProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IFooterActions => ({\r\n  addName: (name: string) => dispatch(system.addName(name)),\r\n  removeName: (name: string) => dispatch(system.removeName(name)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Footer));\r\n","import * as types from './Types';\r\n\r\nexport function changeTheme(newTheme: types.ThemeOptions): types.SystemActionTypes {\r\n  return {\r\n    newTheme,\r\n    type: types.SYSTEM_CHANGE_THEME,\r\n  };\r\n}\r\n\r\nexport function addName(name: string): types.SystemActionTypes {\r\n  return {\r\n    name,\r\n    type: types.SYSTEM_ADD_NAME,\r\n  };\r\n}\r\n\r\nexport function removeName(name: string): types.SystemActionTypes {\r\n  return {\r\n    name,\r\n    type: types.SYSTEM_REMOVE_NAME,\r\n  };\r\n}\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport Footer from '../Footer';\r\n\r\nclass Home extends React.Component<{}, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Typography>\r\n          This is the home page where we provide useful details.\r\n        </Mui.Typography>\r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\n\r\nclass About extends React.Component<{}, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <Mui.Typography>\r\n        This site was created by Shane DeSeranno, Donald Gill, and Lara Ramey to aid in scoring games.\r\n      </Mui.Typography>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as generic from '../../Store/Generic';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 170,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n  },\r\n  scoreButton: {\r\n    margin: theme.spacing(1),\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, number>;\r\n}\r\n\r\ninterface IScoreCardActions {\r\n  addScore(name: string, value: number): void;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  IScoreCardActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IScoreCardState {\r\n  showScoreDialog: boolean;\r\n  value: string;\r\n}\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, IScoreCardState> {\r\n  constructor(p: IAllScoreCardProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showScoreDialog: false,\r\n      value: '',\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const myScore: number = this.props.scores[this.props.name] ? this.props.scores[this.props.name] : 0;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n          <Mui.Typography variant='h5'>{this.props.name}: {myScore}</Mui.Typography>\r\n          <Mui.Divider />\r\n          <Mui.Button className={this.props.classes.scoreButton} color='primary' variant='contained' onClick={this.handleScoreRound}>Add Score</Mui.Button>\r\n        </Mui.Paper>\r\n\r\n        <Mui.Dialog open={this.state.showScoreDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogTitle>\r\n            Scoring for: {this.props.name}\r\n          </Mui.DialogTitle>\r\n\r\n          <Mui.Divider />\r\n\r\n          <Mui.DialogContent>\r\n            <Mui.TextField\r\n              value={this.state.value}\r\n              type='number'\r\n              onChange={this.handleChange}\r\n              label='Points'\r\n              onKeyPress={this.handleKeyPress}\r\n              fullWidth={true}\r\n              autoFocus={true}\r\n            />\r\n          </Mui.DialogContent>\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              onClick={this.handleUpdateScore}\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleKeyPress(event: React.KeyboardEvent<HTMLInputElement>): void {\r\n    if (event.key === 'Enter') {\r\n      this.handleUpdateScore();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private handleChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n    this.setState({\r\n      value: event.target.value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showScoreDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleScoreRound(): void {\r\n    this.setState({\r\n      showScoreDialog: true,\r\n      value: '',\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateScore(): void {\r\n    const value = parseInt(this.state.value, 10);\r\n    console.log(value);\r\n    if (!isNaN(value)) {\r\n      this.props.addScore(this.props.name, value);\r\n    }\r\n\r\n    this.setState({\r\n      showScoreDialog: false,\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.generic.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreCardActions => ({\r\n  addScore: (name: string, value: number) => dispatch(generic.addScore(name, value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as types from './Types';\r\n\r\nexport function resetAll(): types.GenericActionTypes {\r\n  return {\r\n    type: types.GENERIC_RESET_ALL,\r\n  };\r\n}\r\n\r\nexport function addScore(name: string, value: number): types.GenericActionTypes {\r\n  return {\r\n    name,\r\n    value,\r\n    type: types.GENERIC_ADD_SCORE,\r\n  };\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as generic from '../../Store/Generic';\r\nimport ScoreCard from './ScoreCard';\r\nimport { bind } from 'decko';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  genericWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface IGenericProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IGenericActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllGenericProps =\r\n  IGenericProps &\r\n  IGenericActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass Generic extends React.Component<IAllGenericProps, {}> {\r\n  public render(): JSX.Element {\r\n    if (this.props.names.length === 0) {\r\n      return (\r\n        <Mui.Typography>\r\n          Go back to Home and add some players first!\r\n        </Mui.Typography>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.genericWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.props.reset();\r\n  }\r\n}\r\nconst mapStateToProps = (state: AppState): IGenericProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IGenericActions => ({\r\n  reset: () => dispatch(generic.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Generic));\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  marginTop: {\r\n    marginTop: 10,\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    verticalAlign: 'middle',\r\n  },\r\n});\r\n\r\ninterface ISafetyRowProps {\r\n  name: string;\r\n  played: boolean;\r\n  coupFourre: boolean;\r\n  togglePlayed(): void;\r\n  toggleCoupFourre(): void;\r\n}\r\n\r\ntype IAllSafetyRowProps =\r\n  ISafetyRowProps &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass SafetyRow extends React.Component<IAllSafetyRowProps, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Grid item={true} xs={6} className={this.props.classes.right}>\r\n          <Mui.Typography className={this.props.classes.marginTop}>{this.props.name}:</Mui.Typography>\r\n        </Mui.Grid>\r\n        <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Checkbox checked={this.props.played} onChange={this.props.togglePlayed} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Checkbox disabled={!this.props.played} checked={this.props.coupFourre} onChange={this.props.toggleCoupFourre} /></Mui.Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(localStyles)(SafetyRow);\r\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as milleBornes from '../../Store/MilleBornes';\r\nimport SafetyRow from './SafetyRow';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  marginTop: {\r\n    marginTop: 10,\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    verticalAlign: 'middle',\r\n  },\r\n  scoreButton: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 170,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, number>;\r\n}\r\n\r\ninterface IScoreCardActions {\r\n  addScore(name: string, value: number): void;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  IScoreCardActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IScoreCardState {\r\n  showScoreDialog: boolean;\r\n  distance: number;\r\n  rightOfWayPlayed: boolean;\r\n  rightOfWayPlayedCF: boolean;\r\n  drivingAcePlayed: boolean;\r\n  drivingAcePlayedCF: boolean;\r\n  fuelTankPlayed: boolean;\r\n  fuelTankPlayedCF: boolean;\r\n  punctureProofPlayed: boolean;\r\n  punctureProofPlayedCF: boolean;\r\n  delayedAction: boolean;\r\n  safeTrip: boolean;\r\n  extension: boolean;\r\n  shutout: boolean;\r\n}\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, IScoreCardState> {\r\n  constructor(p: IAllScoreCardProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showScoreDialog: false,\r\n      distance: 0,\r\n      rightOfWayPlayed: false,\r\n      rightOfWayPlayedCF: false,\r\n      drivingAcePlayed: false,\r\n      drivingAcePlayedCF: false,\r\n      fuelTankPlayed: false,\r\n      fuelTankPlayedCF: false,\r\n      punctureProofPlayed: false,\r\n      punctureProofPlayedCF: false,\r\n      delayedAction: false,\r\n      safeTrip: false,\r\n      extension: false,\r\n      shutout: false,\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n          <Mui.Typography variant='h5'>{this.props.name}: {this.getScore()}</Mui.Typography>\r\n          <Mui.Divider />\r\n          <Mui.Button className={this.props.classes.scoreButton} color='primary' variant='contained' onClick={this.handleScoreRound}>Add Score</Mui.Button>\r\n        </Mui.Paper>\r\n\r\n        <Mui.Dialog open={this.state.showScoreDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogTitle>\r\n            Scoring for: {this.props.name}\r\n          </Mui.DialogTitle>\r\n\r\n          <Mui.Divider />\r\n\r\n          <Mui.DialogContent>\r\n            <Mui.Typography id='distance-slider' gutterBottom={true}>Distance</Mui.Typography>\r\n            <Mui.Slider\r\n              aria-labelledby='distance-slider'\r\n              valueLabelDisplay='on'\r\n              step={25}\r\n              min={0}\r\n              max={1000}\r\n              marks={true}\r\n              value={this.state.distance}\r\n              onChange={this.handleDistanceChanged}\r\n            />\r\n\r\n            <Mui.Grid container={true}>\r\n              <Mui.Grid item={true} xs={6} className={this.props.classes.right}></Mui.Grid>\r\n              <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Typography>Played</Mui.Typography></Mui.Grid>\r\n              <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Typography>Coup-fourré</Mui.Typography></Mui.Grid>\r\n\r\n              <SafetyRow name='Right of Way' played={this.state.rightOfWayPlayed} coupFourre={this.state.rightOfWayPlayedCF} togglePlayed={this.handleToggleRightOfWay} toggleCoupFourre={this.handleToggleRightOfWayCF} />\r\n              <SafetyRow name='Driving Ace' played={this.state.drivingAcePlayed} coupFourre={this.state.drivingAcePlayedCF} togglePlayed={this.handleToggleDrivingAce} toggleCoupFourre={this.handleToggleDrivingAceCF} />\r\n              <SafetyRow name='Fuel Tank' played={this.state.fuelTankPlayed} coupFourre={this.state.fuelTankPlayedCF} togglePlayed={this.handleToggleFuelTank} toggleCoupFourre={this.handleToggleFuelTankCF} />\r\n              <SafetyRow name='Puncture Proof' played={this.state.punctureProofPlayed} coupFourre={this.state.punctureProofPlayedCF} togglePlayed={this.handleTogglePunctureProof} toggleCoupFourre={this.handleTogglePunctureProofCF} />\r\n\r\n              <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Delayed Action:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox disabled={this.state.distance < 1000} checked={this.state.delayedAction} onChange={this.handleToggleDelayedAction} /></Mui.Grid>\r\n\r\n              <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Safe Trip:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox disabled={this.state.distance < 1000} checked={this.state.safeTrip} onChange={this.handleToggleSafeTrip} /></Mui.Grid>\r\n\r\n              {/* <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Extension:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox checked={this.state.extension} onChange={this.handleToggleExtension} /></Mui.Grid> */}\r\n\r\n              <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Shutout:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox disabled={this.state.distance < 1000} checked={this.state.shutout} onChange={this.handleToggleShutout} /></Mui.Grid>\r\n            </Mui.Grid>\r\n          </Mui.DialogContent>\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              onClick={this.handleUpdateScore}\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleDistanceChanged(event: React.ChangeEvent<{}>, value: number | number[]): void {\r\n    if (Array.isArray(value)) {\r\n      value = value[value.length - 1];\r\n    }\r\n\r\n    this.setState({\r\n      distance: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleDelayedAction(): void {\r\n    this.setState({\r\n      delayedAction: !this.state.delayedAction,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleShutout(): void {\r\n    this.setState({\r\n      shutout: !this.state.shutout,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleSafeTrip(): void {\r\n    this.setState({\r\n      safeTrip: !this.state.safeTrip,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleRightOfWay(): void {\r\n    this.setState({\r\n      rightOfWayPlayed: !this.state.rightOfWayPlayed,\r\n      rightOfWayPlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleRightOfWayCF(): void {\r\n    this.setState({\r\n      rightOfWayPlayedCF: !this.state.rightOfWayPlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleDrivingAce(): void {\r\n    this.setState({\r\n      drivingAcePlayed: !this.state.drivingAcePlayed,\r\n      drivingAcePlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleDrivingAceCF(): void {\r\n    this.setState({\r\n      drivingAcePlayedCF: !this.state.drivingAcePlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleFuelTank(): void {\r\n    this.setState({\r\n      fuelTankPlayed: !this.state.fuelTankPlayed,\r\n      fuelTankPlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleFuelTankCF(): void {\r\n    this.setState({\r\n      fuelTankPlayedCF: !this.state.fuelTankPlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleTogglePunctureProof(): void {\r\n    this.setState({\r\n      punctureProofPlayed: !this.state.punctureProofPlayed,\r\n      punctureProofPlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleTogglePunctureProofCF(): void {\r\n    this.setState({\r\n      punctureProofPlayedCF: !this.state.punctureProofPlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showScoreDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateScore(): void {\r\n    let score: number = 0;\r\n\r\n    score += this.state.distance;\r\n\r\n    if (this.state.drivingAcePlayed) {\r\n      score += 100;\r\n      if (this.state.drivingAcePlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.fuelTankPlayed) {\r\n      score += 100;\r\n      if (this.state.fuelTankPlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.punctureProofPlayed) {\r\n      score += 100;\r\n      if (this.state.punctureProofPlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.rightOfWayPlayed) {\r\n      score += 100;\r\n      if (this.state.rightOfWayPlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.drivingAcePlayed && this.state.fuelTankPlayed && this.state.punctureProofPlayed && this.state.rightOfWayPlayed) {\r\n      score += 300;\r\n    }\r\n\r\n    if (this.state.distance === 1000) {\r\n      score += 400;\r\n\r\n      if (this.state.shutout) {\r\n        score += 500;\r\n      }\r\n\r\n      if (this.state.safeTrip) {\r\n        score += 300;\r\n      }\r\n\r\n      if (this.state.extension) {\r\n        score += 200;\r\n      }\r\n\r\n      if (this.state.delayedAction) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    this.props.addScore(this.props.name, score);\r\n    this.setState({\r\n      showScoreDialog: false,\r\n      distance: 0,\r\n      rightOfWayPlayed: false,\r\n      rightOfWayPlayedCF: false,\r\n      drivingAcePlayed: false,\r\n      drivingAcePlayedCF: false,\r\n      fuelTankPlayed: false,\r\n      fuelTankPlayedCF: false,\r\n      punctureProofPlayed: false,\r\n      punctureProofPlayedCF: false,\r\n      delayedAction: false,\r\n      safeTrip: false,\r\n      extension: false,\r\n      shutout: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private getScore(): number {\r\n    const score = this.props.scores[this.props.name];\r\n    return score ? score : 0;\r\n  }\r\n\r\n  @bind\r\n  private handleScoreRound(): void {\r\n    this.setState({\r\n      showScoreDialog: true,\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.milleBornes.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreCardActions => ({\r\n  addScore: (name: string, value: number) => dispatch(milleBornes.addScore(name, value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as types from './Types';\r\n\r\nexport function resetAll(): types.MilleBornesActionTypes {\r\n  return {\r\n    type: types.MILLE_BORNES_RESET_ALL,\r\n  };\r\n}\r\n\r\nexport function addScore(name: string, value: number): types.MilleBornesActionTypes {\r\n  return {\r\n    name,\r\n    value,\r\n    type: types.MILLE_BORNES_ADD_SCORE,\r\n  };\r\n}\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as milleBornes from '../../Store/MilleBornes';\r\nimport ScoreCard from './ScoreCard';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  milleBornesWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface IMilleBornesProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IMilleBornesActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllMilleBornesProps =\r\n  IMilleBornesProps &\r\n  IMilleBornesActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass MilleBornes extends React.Component<IAllMilleBornesProps, {}> {\r\n  public render(): JSX.Element {\r\n    if (this.props.names.length === 0) {\r\n      return (\r\n        <Mui.Typography>\r\n          Go back to Home and add some players first!\r\n        </Mui.Typography>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.milleBornesWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.props.reset();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IMilleBornesProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IMilleBornesActions => ({\r\n  reset: () => dispatch(milleBornes.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(MilleBornes));\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 170,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, number>;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, {}> {\r\n  public render(): JSX.Element {\r\n    const myScore: number = this.props.scores[this.props.name] ? this.props.scores[this.props.name] : 0;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n          <Mui.Typography variant='h5'>{this.props.name}: {myScore}</Mui.Typography>\r\n        </Mui.Paper>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.mu.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): {} => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as mu from '../../Store/Mu';\r\nimport ScoreCard from './ScoreCard';\r\nimport { bind } from 'decko';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  muWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  selectBox: {\r\n    width: 180,\r\n  },\r\n  center: {\r\n    marginTop: 8,\r\n  },\r\n  buttonSpacing: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n});\r\n\r\nenum Trumps {\r\n  Black,\r\n  Blue,\r\n  Green,\r\n  Red,\r\n  Yellow,\r\n  One,\r\n  Seven,\r\n  Zero,\r\n  Two,\r\n  Three,\r\n  Four,\r\n  Five,\r\n  Six,\r\n  Eight,\r\n  Nine,\r\n  None,\r\n}\r\n\r\nconst PointsPerBid = [0, 0, 0, 0, 2, 3, 4];\r\nfunction getChiefTeamBidMade(playerCount: number, points: number): number {\r\n  let currentPoints = 62 - playerCount; // Hacky, but works, as 4 player = 58, 5 player = 57, 6 player = 56\r\n  let currentBid = 60 / playerCount;\r\n  while (currentPoints > points) {\r\n    currentBid--;\r\n    currentPoints -= PointsPerBid[playerCount];\r\n  }\r\n\r\n  return Math.max(0, currentBid);\r\n}\r\n\r\nfunction getChiefTeamBonus(overTrump: Trumps, bid: number): number {\r\n  switch (overTrump) {\r\n    case Trumps.Black:\r\n    case Trumps.Blue:\r\n    case Trumps.Green:\r\n    case Trumps.Red:\r\n    case Trumps.Yellow:\r\n      return 10 * Math.min(10, bid);\r\n\r\n    case Trumps.One:\r\n    case Trumps.Seven:\r\n      return 10 + 10 * Math.min(9, bid);\r\n\r\n    case Trumps.None:\r\n      return 30 + 10 * Math.min(7, bid);\r\n  }\r\n\r\n  // 0, 2, 3, 4, 5, 6, 8, 9\r\n  return 20 + 10 * Math.min(6, bid);\r\n}\r\n\r\ninterface IMuProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IMuActions {\r\n  addScore(name: string, value: number): void;\r\n  reset(): void;\r\n}\r\n\r\ntype IAllMuProps =\r\n  IMuProps &\r\n  IMuActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IMuState {\r\n  showStalemateDialog: boolean;\r\n  showScoreDialog: boolean;\r\n  bid: number;\r\n  overTrump: Trumps;\r\n  underTrump: Trumps;\r\n  chief: string;\r\n  vice: string;\r\n  partner: string;\r\n  points: Record<string, string>;\r\n\r\n  lastBidder: string;\r\n  highestBidders: string[];\r\n}\r\n\r\nclass Mu extends React.Component<IAllMuProps, IMuState> {\r\n  constructor(p: IAllMuProps) {\r\n    super(p);\r\n\r\n    const points: Record<string, string> = {};\r\n    for (const name of this.props.names) {\r\n      points[name] = '0';\r\n    }\r\n\r\n    this.state = this.getDefaultState();\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    if (this.props.names.length < 4) {\r\n      return (\r\n        <Mui.Typography>\r\n          This game requires at least 4 players, go Home and add some more players.\r\n        </Mui.Typography>\r\n      );\r\n    }\r\n\r\n    if (this.props.names.length > 6) {\r\n      return (\r\n        <Mui.Typography>\r\n          This game doesn't support more than 6 players, go Home and remove some players.\r\n        </Mui.Typography>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleScoreHand}>Score Hand</Mui.Button>\r\n        <Mui.Button className={this.props.classes.buttonSpacing} color='primary' variant='contained' onClick={this.handleStalemate}>Stalemate</Mui.Button>\r\n        <div className={this.props.classes.muWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n\r\n        <Mui.Dialog open={this.state.showScoreDialog} maxWidth='sm' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogContent>\r\n            <Mui.Grid container={true} spacing={2}>\r\n              <Mui.Grid item={true} sm={4} xs={12}>\r\n                <Mui.Typography>Bid</Mui.Typography>\r\n                <Mui.Slider\r\n                  value={this.state.bid}\r\n                  onChange={this.handleBidChanged}\r\n                  min={1}\r\n                  max={60 / this.props.names.length}\r\n                  step={1}\r\n                  valueLabelDisplay='auto'\r\n                  marks={true}\r\n                />\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} sm={4} xs={12}>\r\n                <Mui.FormControl variant='filled' className={this.props.classes.selectBox}>\r\n                  <Mui.InputLabel htmlFor='over-trump'>\r\n                    Over Trump\r\n                  </Mui.InputLabel>\r\n                  <Mui.Select\r\n                    value={this.state.overTrump}\r\n                    onChange={this.handleOverTrumpChanged}\r\n                    inputProps={{\r\n                      name: 'overtrump',\r\n                      id: 'over-trump',\r\n                    }}\r\n                  >\r\n                    <Mui.MenuItem value={Trumps.Black}>Black</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Blue}>Blue</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Green}>Green</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Red}>Red</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Yellow}>Yellow</Mui.MenuItem>\r\n                    <Mui.Divider />\r\n                    <Mui.MenuItem value={Trumps.One}>1</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Seven}>7</Mui.MenuItem>\r\n                    <Mui.Divider />\r\n                    <Mui.MenuItem value={Trumps.Zero}>0</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Two}>2</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Three}>3</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Four}>4</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Five}>5</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Six}>6</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Eight}>8</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Nine}>9</Mui.MenuItem>\r\n                    <Mui.Divider />\r\n                    <Mui.MenuItem value={Trumps.None}>No Trump</Mui.MenuItem>\r\n                  </Mui.Select>\r\n                </Mui.FormControl>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} sm={4} xs={12}>\r\n                <Mui.FormControl variant='filled' className={this.props.classes.selectBox}>\r\n                  <Mui.InputLabel htmlFor='under-trump'>\r\n                    Under Trump\r\n                  </Mui.InputLabel>\r\n                  <Mui.Select\r\n                    value={this.state.underTrump}\r\n                    onChange={this.handleUnderTrumpChanged}\r\n                    inputProps={{\r\n                      name: 'undertrump',\r\n                      id: 'under-trump',\r\n                    }}\r\n                  >\r\n                    <Mui.MenuItem value={Trumps.Black}>Black</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Blue}>Blue</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Green}>Green</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Red}>Red</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Yellow}>Yellow</Mui.MenuItem>\r\n                    <Mui.Divider />\r\n                    <Mui.MenuItem value={Trumps.One}>1</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Seven}>7</Mui.MenuItem>\r\n                    <Mui.Divider />\r\n                    <Mui.MenuItem value={Trumps.Zero}>0</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Two}>2</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Three}>3</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Four}>4</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Five}>5</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Six}>6</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Eight}>8</Mui.MenuItem>\r\n                    <Mui.MenuItem value={Trumps.Nine}>9</Mui.MenuItem>\r\n                    <Mui.Divider />\r\n                    <Mui.MenuItem value={Trumps.None}>No Trump</Mui.MenuItem>\r\n\r\n                  </Mui.Select>\r\n                </Mui.FormControl>\r\n              </Mui.Grid>\r\n\r\n              <Mui.Grid item={true} xs={2}>Name</Mui.Grid>\r\n              <Mui.Grid item={true} xs={2}>Chief</Mui.Grid>\r\n              <Mui.Grid item={true} xs={2}>Vice</Mui.Grid>\r\n              <Mui.Grid item={true} xs={2}>Partner</Mui.Grid>\r\n              <Mui.Grid item={true} xs={4}></Mui.Grid>\r\n              <Mui.Grid item={true} xs={12}><Mui.Divider /></Mui.Grid>\r\n\r\n              {this.props.names.map((name) => this.createPlayerRow(name))}\r\n            </Mui.Grid>\r\n          </Mui.DialogContent>\r\n\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              onClick={this.handleUpdateScore}\r\n              variant='contained'\r\n              color='primary'\r\n              disabled={!this.canSave()}\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n\r\n        <Mui.Dialog open={this.state.showStalemateDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogContent>\r\n            <Mui.Grid container={true}>\r\n            <Mui.Grid item={true} xs={12}>\r\n                <Mui.Typography>Bid</Mui.Typography>\r\n                <Mui.Slider\r\n                  value={this.state.bid}\r\n                  onChange={this.handleBidChanged}\r\n                  min={1}\r\n                  max={60 / this.props.names.length}\r\n                  step={1}\r\n                  valueLabelDisplay='auto'\r\n                  marks={true}\r\n                />\r\n              </Mui.Grid>\r\n\r\n              <Mui.Grid item={true} xs={4}>Name</Mui.Grid>\r\n              <Mui.Grid item={true} xs={4}>Last Bidder</Mui.Grid>\r\n              <Mui.Grid item={true} xs={4}>Highest Bidder</Mui.Grid>\r\n              <Mui.Grid item={true} xs={12}><Mui.Divider /></Mui.Grid>\r\n\r\n              {this.props.names.map((name) => this.createStalemateRow(name))}\r\n            </Mui.Grid>\r\n          </Mui.DialogContent>\r\n\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              onClick={this.handleUpdateStalemate}\r\n              variant='contained'\r\n              color='primary'\r\n              disabled={!this.canSaveStalemate()}\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateStalemate(): void {\r\n    for (const name of this.props.names) {\r\n      if (this.state.lastBidder === name) {\r\n        this.props.addScore(name, -10 * this.state.bid);\r\n      } else if (this.state.highestBidders.indexOf(name) > -1) {\r\n        this.props.addScore(name, 5 * this.state.bid);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      showScoreDialog: false,\r\n      showStalemateDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private createStalemateRow(name: string): JSX.Element {\r\n    return (\r\n      <React.Fragment key={name}>\r\n        <Mui.Grid className={this.props.classes.center} item={true} xs={4}>{name}</Mui.Grid>\r\n        <Mui.Grid item={true} xs={4}><Mui.Checkbox onClick={() => this.handleLastBidder(name)} checked={this.state.lastBidder === name} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={4}><Mui.Checkbox onClick={() => this.handleHighestBidder(name)} checked={this.state.highestBidders.indexOf(name) !== -1} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={12}><Mui.Divider /></Mui.Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private canSaveStalemate(): boolean {\r\n    return this.state.highestBidders.length > 0 && this.state.lastBidder.length > 0;\r\n  }\r\n\r\n  @bind\r\n  private handleLastBidder(name: string): void {\r\n    const included = this.state.highestBidders.indexOf(name) !== -1;\r\n\r\n    this.setState({\r\n      lastBidder: name,\r\n      highestBidders: included ? this.state.highestBidders.filter((item) => item !== name) : this.state.highestBidders,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleHighestBidder(name: string): void {\r\n    const included = this.state.highestBidders.indexOf(name) !== -1;\r\n    if (included) {\r\n      this.setState({\r\n        highestBidders: this.state.highestBidders.filter((item) => item !== name),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        lastBidder: name === this.state.lastBidder ? '' : this.state.lastBidder,\r\n        highestBidders: this.state.highestBidders.concat(name),\r\n      });\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private handleBidChanged(event: React.ChangeEvent<{}>, value: number | number[]): void {\r\n    if (Array.isArray(value)) {\r\n      value = value[value.length - 1];\r\n    }\r\n\r\n    this.setState({\r\n      bid: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private canSave(): boolean {\r\n    if (this.state.chief.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    if (this.state.partner.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    let sum: number = 0;\r\n    for (const name of this.props.names) {\r\n      sum += parseInt(this.state.points[name], 10);\r\n    }\r\n\r\n    if (sum !== 60) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  @bind\r\n  private createPlayerRow(name: string): JSX.Element {\r\n    return (\r\n      <React.Fragment key={name}>\r\n        <Mui.Grid className={this.props.classes.center} item={true} xs={2}>{name}</Mui.Grid>\r\n        <Mui.Grid item={true} xs={2}><Mui.Checkbox onClick={() => this.handleChief(name)} checked={this.state.chief === name} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={2}><Mui.Checkbox onClick={() => this.handleVice(name)} checked={this.state.vice === name} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={2}><Mui.Checkbox onClick={() => this.handlePartner(name)} checked={this.state.partner === name} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={4}>\r\n          <Mui.TextField\r\n            type='number'\r\n            value={this.state.points[name]}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => this.handlePointsChange(name, event.target.value)}\r\n            label='Points'\r\n            fullWidth={true}\r\n          />\r\n        </Mui.Grid>\r\n        <Mui.Grid item={true} xs={12}><Mui.Divider /></Mui.Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handlePointsChange(name: string, value: string): void {\r\n    const newPoints = Object.assign({}, this.state.points);\r\n    newPoints[name] = value;\r\n    this.setState({\r\n      points: newPoints,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleChief(name: string): void {\r\n    this.setState({\r\n      chief: name,\r\n      vice: (this.state.vice === name) ? '' : this.state.vice,\r\n      partner: (this.state.partner === name) ? '' : this.state.partner,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleVice(name: string): void {\r\n    this.setState({\r\n      chief: (this.state.chief === name) ? '' : this.state.chief,\r\n      vice: name,\r\n      partner: (this.state.partner === name) ? '' : this.state.partner,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handlePartner(name: string): void {\r\n    this.setState({\r\n      chief: (this.state.chief === name) ? '' : this.state.chief,\r\n      vice: (this.state.vice === name) ? '' : this.state.vice,\r\n      partner: name,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleOverTrumpChanged(event: React.ChangeEvent<{ name?: string; value: unknown }>): void {\r\n    this.setState({\r\n      overTrump: event.target.value as Trumps,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUnderTrumpChanged(event: React.ChangeEvent<{ name?: string; value: unknown }>): void {\r\n    this.setState({\r\n      underTrump: event.target.value as Trumps,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateScore(): void {\r\n    // First check to see if the chief team made it\r\n    const chiefTeamPoints = parseInt(this.state.points[this.state.chief], 10) + parseInt(this.state.points[this.state.partner], 10);\r\n    const chiefTeamBidMade = getChiefTeamBidMade(this.props.names.length, chiefTeamPoints);\r\n\r\n    if (chiefTeamBidMade >= this.state.bid) {\r\n      // Chief made it!\r\n      for (const name of this.props.names) {\r\n        let score: number = parseInt(this.state.points[name], 10);\r\n        if (name === this.state.chief || name === this.state.partner) {\r\n          score += getChiefTeamBonus(this.state.overTrump, this.state.bid);\r\n        }\r\n\r\n        this.props.addScore(name, score);\r\n      }\r\n    } else {\r\n      // Chief missed it!\r\n      const missedBy = this.state.bid - chiefTeamBidMade;\r\n      for (const name of this.props.names) {\r\n        let score: number = parseInt(this.state.points[name], 10);\r\n        if (name === this.state.chief) {\r\n          score -= 10 * missedBy;\r\n        } else if (name !== this.state.partner) {\r\n          score += 5 * missedBy;\r\n        }\r\n\r\n        this.props.addScore(name, score);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      showScoreDialog: false,\r\n      showStalemateDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showScoreDialog: false,\r\n      showStalemateDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleScoreHand(): void {\r\n    const points: Record<string, string> = {};\r\n    for (const name of this.props.names) {\r\n      points[name] = '0';\r\n    }\r\n\r\n    const defaultState = this.getDefaultState();\r\n    defaultState.showScoreDialog = true;\r\n    this.setState(defaultState);\r\n  }\r\n\r\n  @bind\r\n  private handleStalemate(): void {\r\n    const defaultState = this.getDefaultState();\r\n    defaultState.showStalemateDialog = true;\r\n    this.setState(defaultState);\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.props.reset();\r\n  }\r\n\r\n  @bind\r\n  private getDefaultState(): IMuState {\r\n    const points: Record<string, string> = {};\r\n    for (const name of this.props.names) {\r\n      points[name] = '0';\r\n    }\r\n\r\n    return {\r\n      showStalemateDialog: false,\r\n      showScoreDialog: false,\r\n      bid: 1,\r\n      overTrump: Trumps.Black,\r\n      underTrump: Trumps.Blue,\r\n      chief: '',\r\n      vice: '',\r\n      partner: '',\r\n      points,\r\n      lastBidder: '',\r\n      highestBidders: [],\r\n    };\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IMuProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IMuActions => ({\r\n  addScore: (name: string, value: number) => dispatch(mu.addScore(name, value)),\r\n  reset: () => dispatch(mu.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Mu));\r\n","import * as types from './Types';\r\n\r\nexport function resetAll(): types.MuActionTypes {\r\n  return {\r\n    type: types.MU_RESET_ALL,\r\n  };\r\n}\r\n\r\nexport function addScore(name: string, value: number): types.MuActionTypes {\r\n  return {\r\n    name,\r\n    value,\r\n    type: types.MU_ADD_SCORE,\r\n  };\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as split from '../../Store/Split';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 360,\r\n    minWidth: 360,\r\n    padding: theme.spacing(1),\r\n  },\r\n  avatar: {\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    height: 30,\r\n    width: 30,\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  selectedAvatar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText,\r\n  },\r\n  row: {\r\n    marginTop: theme.spacing(0.25),\r\n    marginBottom: theme.spacing(0.25),\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, split.ISplitScore>;\r\n}\r\n\r\ninterface IScoreCardActions {\r\n  addValue(name: string, rank: split.SplitRanks): void;\r\n  removeValue(name: string, rank: split.SplitRanks): void;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  IScoreCardActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nconst ValueMap: Record<split.SplitRanks, number[]> = {\r\n  A: [0, 30, 70, 120, 180, 200],\r\n  K: [0, 20, 50, 90, 140, 200],\r\n  Q: [0, 20, 50, 90, 140, 200],\r\n  J: [0, 20, 50, 90, 140, 200],\r\n  10: [0, 10, 30, 60, 100, 200],\r\n  9: [0, 10, 30, 60, 100, 200],\r\n  8: [0, 10, 30, 60, 100, 200],\r\n  7: [0, 10, 30, 60, 100, 200],\r\n  6: [0, 10, 30, 60, 100, 200],\r\n  5: [0, 10, 30, 60, 100, 200],\r\n  4: [0, 10, 30, 60, 100, 200],\r\n  3: [0, 10, 30, 60, 100, 200],\r\n  2: [0, 5, 20, 40, 70, 200],\r\n\r\n  Negative: [],\r\n};\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, {}> {\r\n  public render(): JSX.Element {\r\n    const myScore: split.ISplitScore = this.props.scores[this.props.name];\r\n\r\n    return (\r\n      <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n        <Mui.Grid container={true}>\r\n          <Mui.Grid item={true} xs={6}>\r\n            <Mui.Typography variant='h5'>\r\n              {this.props.name}\r\n            </Mui.Typography>\r\n          </Mui.Grid>\r\n          <Mui.Grid item={true} xs={6} className={this.props.classes.right}>\r\n            <Mui.Typography variant='h5'>\r\n              {this.calculateScore(myScore)}\r\n            </Mui.Typography>\r\n          </Mui.Grid>\r\n        </Mui.Grid>\r\n        <Mui.Divider variant='middle' />\r\n        {this.createRow(myScore, split.SplitRanks.A)}\r\n        {this.createRow(myScore, split.SplitRanks.K)}\r\n        {this.createRow(myScore, split.SplitRanks.Q)}\r\n        {this.createRow(myScore, split.SplitRanks.J)}\r\n        {this.createRow(myScore, split.SplitRanks.Ten)}\r\n        {this.createRow(myScore, split.SplitRanks.Nine)}\r\n        {this.createRow(myScore, split.SplitRanks.Eight)}\r\n        {this.createRow(myScore, split.SplitRanks.Seven)}\r\n        {this.createRow(myScore, split.SplitRanks.Six)}\r\n        {this.createRow(myScore, split.SplitRanks.Five)}\r\n        {this.createRow(myScore, split.SplitRanks.Four)}\r\n        {this.createRow(myScore, split.SplitRanks.Three)}\r\n        {this.createRow(myScore, split.SplitRanks.Two)}\r\n        <Mui.Grid container={true} justify='center' alignItems='center' className={this.props.classes.row}>\r\n          <Mui.Grid item={true} xs={4}>\r\n            <Mui.Button variant='outlined' onClick={() => this.handleIncrease(split.SplitRanks.Negative)}>\r\n              -5\r\n            </Mui.Button>\r\n          </Mui.Grid>\r\n          <Mui.Grid item={true} xs={4} className={this.props.classes.center}>\r\n            <Mui.Typography variant='h5'>{this.getRankValues(myScore, split.SplitRanks.Negative)}</Mui.Typography>\r\n          </Mui.Grid>\r\n          <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n            <Mui.Button variant='outlined' onClick={() => this.handleDecrease(split.SplitRanks.Negative)}>\r\n              +5\r\n        </Mui.Button>\r\n          </Mui.Grid>\r\n        </Mui.Grid>\r\n      </Mui.Paper>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private getRankValues(myScore: split.ISplitScore, rank: split.SplitRanks): number {\r\n    const index = myScore ? myScore.values[rank] : 0;\r\n\r\n    if (rank === split.SplitRanks.Negative) {\r\n      return -5 * index;\r\n    }\r\n\r\n    return ValueMap[rank][index];\r\n  }\r\n\r\n  @bind\r\n  private calculateScore(myScore: split.ISplitScore): number {\r\n    return this.getRankValues(myScore, split.SplitRanks.Negative) +\r\n      this.getRankValues(myScore, split.SplitRanks.A) +\r\n      this.getRankValues(myScore, split.SplitRanks.K) +\r\n      this.getRankValues(myScore, split.SplitRanks.Q) +\r\n      this.getRankValues(myScore, split.SplitRanks.J) +\r\n      this.getRankValues(myScore, split.SplitRanks.Ten) +\r\n      this.getRankValues(myScore, split.SplitRanks.Nine) +\r\n      this.getRankValues(myScore, split.SplitRanks.Eight) +\r\n      this.getRankValues(myScore, split.SplitRanks.Seven) +\r\n      this.getRankValues(myScore, split.SplitRanks.Six) +\r\n      this.getRankValues(myScore, split.SplitRanks.Five) +\r\n      this.getRankValues(myScore, split.SplitRanks.Four) +\r\n      this.getRankValues(myScore, split.SplitRanks.Three) +\r\n      this.getRankValues(myScore, split.SplitRanks.Two);\r\n  }\r\n\r\n  @bind\r\n  private handleIncrease(rank: split.SplitRanks): void {\r\n    this.props.addValue(this.props.name, rank);\r\n  }\r\n\r\n  @bind\r\n  private handleDecrease(rank: split.SplitRanks): void {\r\n    this.props.removeValue(this.props.name, rank);\r\n  }\r\n\r\n  @bind\r\n  private createRow(myScore: split.ISplitScore, rank: split.SplitRanks): JSX.Element {\r\n    const selectedIndex = myScore ? myScore.values[rank] : 0;\r\n\r\n    const avatars: JSX.Element[] = [];\r\n    for (let index = 0; index < 6; index++) {\r\n      let avatarClass = this.props.classes.avatar;\r\n      if (index === selectedIndex) {\r\n        avatarClass = `${avatarClass} ${this.props.classes.selectedAvatar}`;\r\n      }\r\n\r\n      avatars.push(<Mui.Avatar key={`${rank.toString()}-${index}`} className={avatarClass}>{ValueMap[rank][index]}</Mui.Avatar>);\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Grid container={true} justify='center' alignItems='center' className={this.props.classes.row}>\r\n          <Mui.Button variant='outlined' onClick={() => this.handleIncrease(rank)} style={{ marginRight: 10 }}>\r\n            {rank.toString()}\r\n          </Mui.Button>\r\n          {avatars}\r\n        </Mui.Grid>\r\n        <Mui.Divider />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.split.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreCardActions => ({\r\n  addValue: (name: string, rank: split.SplitRanks) => dispatch(split.addValue(name, rank)),\r\n  removeValue: (name: string, rank: split.SplitRanks) => dispatch(split.removeValue(name, rank)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as types from './Types';\r\n\r\nexport function addValue(name: string, rank: types.SplitRanks): types.SplitActionTypes {\r\n  return {\r\n    name,\r\n    rank,\r\n    type: types.SPLIT_ADD_VALUE,\r\n  };\r\n}\r\n\r\nexport function removeValue(name: string, rank: types.SplitRanks): types.SplitActionTypes {\r\n  return {\r\n    name,\r\n    rank,\r\n    type: types.SPLIT_REMOVE_VALUE,\r\n  };\r\n}\r\n\r\nexport function resetAll(): types.SplitActionTypes {\r\n  return {\r\n    type: types.SPLIT_RESET_ALL,\r\n  };\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as split from '../../Store/Split';\r\nimport ScoreCard from './ScoreCard';\r\nimport { bind } from 'decko';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  splitWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface ISplitProps {\r\n  names: string[];\r\n}\r\n\r\ninterface ISplitActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllSplitProps =\r\n  ISplitProps &\r\n  ISplitActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass Split extends React.Component<IAllSplitProps, {}> {\r\n  public render(): JSX.Element {\r\n    if (this.props.names.length === 0) {\r\n      return (\r\n        <Mui.Typography>\r\n          Go back to Home and add some players first!\r\n        </Mui.Typography>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.splitWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.props.reset();\r\n  }\r\n}\r\nconst mapStateToProps = (state: AppState): ISplitProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): ISplitActions => ({\r\n  reset: () => dispatch(split.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Split));\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from '../Home';\r\nimport About from '../About/About';\r\nimport Generic from '../Generic';\r\nimport MilleBornes from '../MilleBornes';\r\nimport Mu from '../Mu';\r\nimport Split from '../Split';\r\n\r\nclass Main extends React.Component<{}, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <Mui.Box m={2}>\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route path='/split' component={Split} />\r\n          <Route path='/millebornes' component={MilleBornes} />\r\n          <Route path='/mu' component={Mu} />\r\n          <Route path='/generic' component={Generic} />\r\n          <Route path='/about' component={About} />\r\n        </Switch>\r\n      </Mui.Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import * as React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport { Themes } from '../../Theme';\r\nimport * as system from '../../Store/System';\r\nimport Header from '../Header';\r\nimport Main from '../Main';\r\n\r\ninterface IAppProps {\r\n  selectedTheme: system.ThemeOptions;\r\n}\r\n\r\nclass App extends React.Component<IAppProps, {}> {\r\n  public render(): JSX.Element {\r\n    const currentTheme = Themes.getTheme(this.props.selectedTheme);\r\n\r\n    return (\r\n      <ThemeProvider theme={currentTheme}>\r\n        <CssBaseline />\r\n        <Header />\r\n        <Main />\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IAppProps => ({\r\n  selectedTheme: state.system.selectedTheme,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): {} => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './Store';\r\nimport App from './Components/App';\r\n\r\nReactDOM.render((\r\n  <HashRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </HashRouter>\r\n), document.getElementById('root'));\r\n"],"sourceRoot":""}