{"version":3,"sources":["Store/Generic/Types.ts","Store/Generic/Reducers.ts","Store/MilleBornes/Types.ts","Store/MilleBornes/Reducers.ts","Store/Mu/Types.ts","Store/Split/Types.ts","Store/Mu/Reducers.ts","Store/System/Types.ts","Store/Split/Reducers.ts","Store/System/Reducers.ts","Store/index.ts","Theme.tsx","Components/Header/index.tsx","Components/Footer/index.tsx","Store/System/Actions.ts","Components/Home/index.tsx","Components/About/About.tsx","Components/Generic/ScoreCard.tsx","Store/Generic/Actions.ts","Components/Generic/index.tsx","Components/MilleBornes/SafetyRow.tsx","Components/MilleBornes/ScoreCard.tsx","Store/MilleBornes/Actions.ts","Components/MilleBornes/index.tsx","Store/Mu/Actions.ts","Components/Mu/ScoreCard.tsx","Components/Mu/Trumps.tsx","Components/Mu/TrumpSelector.tsx","Components/Mu/ScoreHandDialog.tsx","Components/Mu/StalemateDialog.tsx","Components/Mu/index.tsx","Components/Split/ScoreCard.tsx","Store/Split/Actions.ts","Components/Split/index.tsx","Components/Main/index.tsx","Components/App/index.tsx","index.tsx"],"names":["GENERIC_RESET_ALL","GENERIC_ADD_SCORE","initialState","scores","MILLE_BORNES_RESET_ALL","MILLE_BORNES_ADD_SCORE","SplitRanks","MU_RESET_ALL","MU_ADD_SCORE","ThemeOptions","SPLIT_RESET_ALL","SPLIT_ADD_VALUE","SPLIT_REMOVE_VALUE","SYSTEM_CHANGE_THEME","SYSTEM_ADD_NAME","SYSTEM_REMOVE_NAME","selectedTheme","types","Dark","names","middleware","rootReducer","combineReducers","generic","state","action","produce","draft","type","name","value","milleBornes","mu","split","values","A","K","Q","J","10","9","8","7","6","5","4","3","2","Negative","rank","max","Math","system","newTheme","push","index","indexOf","splice","store","createStore","thunk","applyMiddleware","lightTheme","palette","primary","indigo","secondary","lightBlue","darkTheme","Themes","option","Light","light","dark","createMuiTheme","Header","position","this","props","location","pathname","variant","scrollButtons","label","to","component","Link","React","withRouter","Footer","p","error","newName","showAddPlayerDialog","className","classes","appBar","chipWrapper","icon","chip","onClick","handleAdd","map","key","onDelete","handleDelete","open","maxWidth","fullWidth","onClose","handleDialogClose","required","autoFocus","onChange","handleNewNameChange","onKeyPress","handleKeyPress","length","color","disabled","handleAddName","event","preventDefault","target","trim","find","profile","toLowerCase","setState","addName","removeName","bind","connect","dispatch","Mui","theme","top","bottom","margin","spacing","display","flexWrap","Home","About","ScoreCard","showScoreDialog","myScore","scoreCardPaper","scoreButton","handleScoreRound","handleChange","handleUpdateScore","parseInt","console","log","isNaN","addScore","width","padding","textAlign","Generic","genericWrapper","handleReset","reset","SafetyRow","item","xs","right","marginTop","center","checked","played","togglePlayed","coupFourre","toggleCoupFourre","withStyles","verticalAlign","distance","rightOfWayPlayed","rightOfWayPlayedCF","drivingAcePlayed","drivingAcePlayedCF","fuelTankPlayed","fuelTankPlayedCF","punctureProofPlayed","punctureProofPlayedCF","delayedAction","safeTrip","extension","shutout","getScore","id","gutterBottom","aria-labelledby","valueLabelDisplay","step","min","marks","handleDistanceChanged","container","handleToggleRightOfWay","handleToggleRightOfWayCF","handleToggleDrivingAce","handleToggleDrivingAceCF","handleToggleFuelTank","handleToggleFuelTankCF","handleTogglePunctureProof","handleTogglePunctureProofCF","handleToggleDelayedAction","handleToggleSafeTrip","handleToggleShutout","Array","isArray","score","MilleBornes","milleBornesWrapper","Trumps","TrumpSelector","selectBox","htmlFor","trump","handleTrumpChanged","inputProps","Black","Blue","Green","Red","Yellow","One","Seven","Zero","Two","Three","Four","Five","Six","Eight","Nine","None","onTrumpChanged","PointsPerBid","getChiefTeamBonus","overTrump","bid","ScoreHandDialog","getDefaultState","prevProps","showDialog","sm","handleBidChanged","handleOverTrumpChanged","underTrump","handleUnderTrumpChanged","createPlayerRow","canSave","points","chief","vice","partner","newPoints","Object","assign","chiefTeamPoints","chiefTeamBidMade","playerCount","currentPoints","currentBid","getChiefTeamBidMade","missedBy","handleChief","handleVice","handlePartner","handlePointsChange","sum","StalemateDialog","lastBidder","highestBidders","createStalemateRow","handleUpdateStalemate","included","filter","concat","handleLastBidder","handleHighestBidder","Mu","showStalemateDialog","handleScoreHand","buttonSpacing","handleStalemate","muWrapper","marginLeft","ValueMap","calculateScore","createRow","Ten","justify","alignItems","row","handleIncrease","getRankValues","handleDecrease","addValue","removeValue","selectedIndex","avatars","avatarClass","avatar","selectedAvatar","toString","style","marginRight","minWidth","fontWeight","fontSize","height","backgroundColor","main","contrastText","marginBottom","Split","splitWrapper","Main","m","exact","path","App","currentTheme","getTheme","ThemeProvider","CssBaseline","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4c3312b9.chunk.js","sourcesContent":["export interface IGenericState {\r\n  readonly scores: Record<string, number>;\r\n}\r\n\r\nexport const GENERIC_RESET_ALL = 'GENERIC_RESET_ALL';\r\nexport const GENERIC_ADD_SCORE = 'GENERIC_ADD_SCORE';\r\n\r\nexport interface IGenericResetAllAction {\r\n  type: typeof GENERIC_RESET_ALL;\r\n}\r\n\r\nexport interface IGenericAddScoreAction {\r\n  name: string;\r\n  value: number;\r\n  type: typeof GENERIC_ADD_SCORE;\r\n}\r\n\r\nexport type GenericActionTypes =\r\n  IGenericResetAllAction |\r\n  IGenericAddScoreAction;\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.IGenericState = {\r\n  scores: {},\r\n};\r\n\r\nexport function genericReducer(state = initialState, action: types.GenericActionTypes): types.IGenericState {\r\n  return produce(state, (draft: Draft<types.IGenericState>) => {\r\n    switch (action.type) {\r\n      case types.GENERIC_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.GENERIC_ADD_SCORE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = 0;\r\n        }\r\n\r\n        draft.scores[action.name] = draft.scores[action.name] + action.value;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","export interface IMilleBornesState {\r\n  readonly scores: Record<string, number>;\r\n}\r\n\r\nexport const MILLE_BORNES_RESET_ALL = 'MILLE_BORNES_RESET_ALL';\r\nexport const MILLE_BORNES_ADD_SCORE = 'MILLE_BORNES_ADD_SCORE';\r\n\r\nexport interface IMilleBornesResetAllAction {\r\n  type: typeof MILLE_BORNES_RESET_ALL;\r\n}\r\n\r\nexport interface IMilleBornesAddScoreAction {\r\n  name: string;\r\n  value: number;\r\n  type: typeof MILLE_BORNES_ADD_SCORE;\r\n}\r\n\r\nexport type MilleBornesActionTypes =\r\n  IMilleBornesResetAllAction |\r\n  IMilleBornesAddScoreAction;\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.IMilleBornesState = {\r\n  scores: {},\r\n};\r\n\r\nexport function milleBornesReducer(state = initialState, action: types.MilleBornesActionTypes): types.IMilleBornesState {\r\n  return produce(state, (draft: Draft<types.IMilleBornesState>) => {\r\n    switch (action.type) {\r\n      case types.MILLE_BORNES_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.MILLE_BORNES_ADD_SCORE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = 0;\r\n        }\r\n\r\n        draft.scores[action.name] = draft.scores[action.name] + action.value;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","export interface IMuState {\r\n  readonly scores: Record<string, number>;\r\n}\r\n\r\nexport const MU_RESET_ALL = 'MU_RESET_ALL';\r\nexport const MU_ADD_SCORE = 'MU_ADD_SCORE';\r\n\r\nexport interface IMuResetAllAction {\r\n  type: typeof MU_RESET_ALL;\r\n}\r\n\r\nexport interface IMuAddScoreAction {\r\n  name: string;\r\n  value: number;\r\n  type: typeof MU_ADD_SCORE;\r\n}\r\n\r\nexport type MuActionTypes =\r\n  IMuResetAllAction |\r\n  IMuAddScoreAction;\r\n","export enum SplitRanks {\r\n  A = 'A',\r\n  K = 'K',\r\n  Q = 'Q',\r\n  J = 'J',\r\n  Ten = '10',\r\n  Nine = '9',\r\n  Eight = '8',\r\n  Seven = '7',\r\n  Six = '6',\r\n  Five = '5',\r\n  Four = '4',\r\n  Three = '3',\r\n  Two = '2',\r\n\r\n  Negative = 'Negative',\r\n}\r\n\r\nexport interface ISplitScore {\r\n  readonly values: Record<SplitRanks, number>;\r\n}\r\n\r\nexport interface ISplitState {\r\n  readonly scores: Record<string, ISplitScore>;\r\n}\r\n\r\nexport const SPLIT_RESET_ALL = 'SPLIT_RESET_ALL';\r\nexport const SPLIT_ADD_VALUE = 'SPLIT_ADD_VALUE';\r\nexport const SPLIT_REMOVE_VALUE = 'SPLIT_REMOVE_VALUE';\r\n\r\nexport interface ISplitAddValueAction {\r\n  name: string;\r\n  rank: SplitRanks;\r\n  type: typeof SPLIT_ADD_VALUE;\r\n}\r\n\r\nexport interface ISplitRemoveValueAction {\r\n  name: string;\r\n  rank: SplitRanks;\r\n  type: typeof SPLIT_REMOVE_VALUE;\r\n}\r\n\r\nexport interface ISplitResetAllAction {\r\n  type: typeof SPLIT_RESET_ALL;\r\n}\r\n\r\nexport type SplitActionTypes =\r\n  ISplitAddValueAction |\r\n  ISplitRemoveValueAction |\r\n  ISplitResetAllAction;\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.IMuState = {\r\n  scores: {},\r\n};\r\n\r\nexport function muReducer(state = initialState, action: types.MuActionTypes): types.IMuState {\r\n  return produce(state, (draft: Draft<types.IMuState>) => {\r\n    switch (action.type) {\r\n      case types.MU_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.MU_ADD_SCORE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = 0;\r\n        }\r\n\r\n        draft.scores[action.name] = draft.scores[action.name] + action.value;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","export enum ThemeOptions {\r\n  Light,\r\n  Dark,\r\n}\r\n\r\nexport interface ISystemState {\r\n  selectedTheme: ThemeOptions;\r\n  names: string[];\r\n}\r\n\r\nexport const SYSTEM_CHANGE_THEME = 'SYSTEM_CHANGE_THEME';\r\nexport const SYSTEM_ADD_NAME = 'SYSTEM_ADD_NAME';\r\nexport const SYSTEM_REMOVE_NAME = 'SYSTEM_REMOVE_NAME';\r\n\r\nexport interface ISystemChangeThemeAction {\r\n  newTheme: ThemeOptions;\r\n  type: typeof SYSTEM_CHANGE_THEME;\r\n}\r\n\r\nexport interface ISystemAddNameAction {\r\n  name: string;\r\n  type: typeof SYSTEM_ADD_NAME;\r\n}\r\n\r\nexport interface ISystemRemoveNameAction {\r\n  name: string;\r\n  type: typeof SYSTEM_REMOVE_NAME;\r\n}\r\n\r\nexport type SystemActionTypes =\r\n  ISystemChangeThemeAction |\r\n  ISystemAddNameAction |\r\n  ISystemRemoveNameAction;\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.ISplitState = {\r\n  scores: {},\r\n};\r\n\r\nfunction createEmptyScore(): Record<types.SplitRanks, number> {\r\n  return { A: 0, K: 0, Q: 0, J: 0, 10: 0, 9: 0, 8: 0, 7: 0, 6: 0, 5: 0, 4: 0, 3: 0, 2: 0, Negative: 0};\r\n}\r\n\r\nexport function splitReducer(state = initialState, action: types.SplitActionTypes): types.ISplitState {\r\n  return produce(state, (draft: Draft<types.ISplitState>) => {\r\n    switch (action.type) {\r\n      case types.SPLIT_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.SPLIT_ADD_VALUE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = {\r\n            values: createEmptyScore(),\r\n          };\r\n        }\r\n\r\n        const value = draft.scores[action.name].values[action.rank];\r\n        const max: number = (action.rank === types.SplitRanks.Negative) ? 500 : 6;\r\n        draft.scores[action.name].values[action.rank] = (value + 1) % max;\r\n        break;\r\n      }\r\n      case types.SPLIT_REMOVE_VALUE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = {\r\n            values: createEmptyScore(),\r\n          };\r\n        }\r\n\r\n        const value = draft.scores[action.name].values[action.rank];\r\n        draft.scores[action.name].values[action.rank] = Math.max(0, value - 1);\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.ISystemState = {\r\n  selectedTheme: types.ThemeOptions.Dark,\r\n  names: (process.env.NODE_ENV === 'development') ? ['Shane', 'Lara', 'Don', 'Leah'] : [],\r\n};\r\n\r\nexport function systemReducer(state = initialState, action: types.SystemActionTypes): types.ISystemState {\r\n  return produce(state, (draft: Draft<types.ISystemState>) => {\r\n    switch (action.type) {\r\n      case types.SYSTEM_CHANGE_THEME: {\r\n        draft.selectedTheme = action.newTheme;\r\n        break;\r\n      }\r\n      case types.SYSTEM_ADD_NAME: {\r\n        draft.names.push(action.name);\r\n        break;\r\n      }\r\n      case types.SYSTEM_REMOVE_NAME: {\r\n        const index = draft.names.indexOf(action.name);\r\n        if (index > -1) {\r\n          draft.names.splice(index, 1);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import { applyMiddleware, combineReducers, createStore, Store } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { genericReducer } from './Generic/Reducers';\r\nimport { milleBornesReducer } from './MilleBornes/Reducers';\r\nimport { muReducer } from './Mu/Reducers';\r\nimport { splitReducer } from './Split/Reducers';\r\nimport { systemReducer } from './System/Reducers';\r\n\r\nconst rootReducer = combineReducers({\r\n  generic: genericReducer,\r\n  milleBornes: milleBornesReducer,\r\n  mu: muReducer,\r\n  split: splitReducer,\r\n  system: systemReducer,\r\n});\r\n\r\nconst bindMiddleware = (middleware: any) => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const { composeWithDevTools } = require('redux-devtools-extension');\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nconst store: Store<AppState> = createStore(rootReducer, bindMiddleware([thunk]));\r\nexport default store;\r\n","import { lightBlue, indigo } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeOptions } from './Store/System/Types';\r\nimport { PaletteType } from '@material-ui/core';\r\n\r\nconst lightTheme = {\r\n  palette: {\r\n    primary: indigo,\r\n    secondary: lightBlue,\r\n    type: 'light' as PaletteType,\r\n  },\r\n};\r\n\r\nconst darkTheme = {\r\n  palette: {\r\n    primary: indigo,\r\n    secondary: lightBlue,\r\n    type: 'dark' as PaletteType,\r\n  },\r\n};\r\n\r\nexport class Themes {\r\n  public static getTheme(option: ThemeOptions) {\r\n    switch (option) {\r\n      case ThemeOptions.Light:\r\n        return Themes.light;\r\n    }\r\n\r\n    return Themes.dark;\r\n  }\r\n\r\n  private static light = createMuiTheme(lightTheme);\r\n  private static dark = createMuiTheme(darkTheme);\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\r\n\r\ntype IAllHeaderProps =\r\n  RouteComponentProps<any>;\r\n\r\nclass Header extends React.Component<IAllHeaderProps, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <nav>\r\n          <Mui.AppBar position='static'>\r\n            <Mui.Tabs value={this.props.location.pathname} variant='scrollable' scrollButtons='on'>\r\n              <Mui.Tab value='/' label='Home' to='/' component={Link} />\r\n              <Mui.Tab value='/split' label='Split' to='/split' component={Link} />\r\n              <Mui.Tab value='/millebornes' label='Mille Bornes' to='/millebornes' component={Link} />\r\n              <Mui.Tab value='/mu' label='Mü' to='/mu' component={Link} />\r\n              <Mui.Tab value='/generic' label='Generic' to='/generic' component={Link} />\r\n              <Mui.Tab value='/about' label='About' to='/about' component={Link} />\r\n            </Mui.Tabs>\r\n          </Mui.AppBar>\r\n        </nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import * as Mui from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as system from '../../Store/System';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  chipWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface IFooterProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IFooterActions {\r\n  addName(name: string): void;\r\n  removeName(name: string): void;\r\n}\r\n\r\ntype IAllFooterProps =\r\n  IFooterProps &\r\n  IFooterActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IFooterState {\r\n  error: string;\r\n  newName: string;\r\n  showAddPlayerDialog: boolean;\r\n}\r\n\r\nclass Footer extends React.Component<IAllFooterProps, IFooterState> {\r\n  constructor(p: IAllFooterProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      error: '',\r\n      newName: '',\r\n      showAddPlayerDialog: false,\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.AppBar position='fixed' className={this.props.classes.appBar}>\r\n          <div className={this.props.classes.chipWrapper}>\r\n            <Mui.Chip icon={<AddIcon />} label='Add Player' variant='outlined' className={this.props.classes.chip} onClick={this.handleAdd} />\r\n            {this.props.names.map((name) => <Mui.Chip key={name} label={name} variant='outlined' className={this.props.classes.chip} onDelete={() => this.handleDelete(name)} />)}\r\n          </div>\r\n        </Mui.AppBar>\r\n\r\n        <Mui.Dialog open={this.state.showAddPlayerDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogContent>\r\n            <Mui.TextField\r\n              fullWidth={true}\r\n              required={true}\r\n              autoFocus={true}\r\n              value={this.state.newName}\r\n              onChange={this.handleNewNameChange}\r\n              onKeyPress={this.handleKeyPress}\r\n              label='Player or Team Name'\r\n            />\r\n            {(this.state.error.length !== 0) ? <Mui.FormHelperText error={true}>{this.state.error}</Mui.FormHelperText> : null}\r\n          </Mui.DialogContent>\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              disabled={this.state.error.length !== 0 || this.state.newName.length === 0}\r\n              onClick={this.handleAddName}\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleKeyPress(event: React.KeyboardEvent<HTMLInputElement>): void {\r\n    if (event.key === 'Enter') {\r\n      if (this.state.error.length === 0) {\r\n        this.handleAddName();\r\n      }\r\n\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private handleNewNameChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n    const newName: string = event.target.value.trim();\r\n\r\n    let error: string = '';\r\n    const existingProfile: string | undefined = this.props.names.find((profile) => profile.toLowerCase() === newName.toLowerCase());\r\n    if (existingProfile) {\r\n      error = 'Player or team already exists';\r\n    }\r\n\r\n    this.setState({\r\n      error,\r\n      newName: event.target.value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleAddName(): void {\r\n    const newName: string = this.state.newName.trim();\r\n\r\n    if (newName.length > 0) {\r\n      this.props.addName(newName);\r\n      this.setState({\r\n        newName: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showAddPlayerDialog: false,\r\n      newName: '',\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleAdd(): void {\r\n    this.setState({\r\n      showAddPlayerDialog: true,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDelete(name: string): void {\r\n    this.props.removeName(name);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IFooterProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IFooterActions => ({\r\n  addName: (name: string) => dispatch(system.addName(name)),\r\n  removeName: (name: string) => dispatch(system.removeName(name)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Footer));\r\n","import * as types from './Types';\r\n\r\nexport function changeTheme(newTheme: types.ThemeOptions): types.SystemActionTypes {\r\n  return {\r\n    newTheme,\r\n    type: types.SYSTEM_CHANGE_THEME,\r\n  };\r\n}\r\n\r\nexport function addName(name: string): types.SystemActionTypes {\r\n  return {\r\n    name,\r\n    type: types.SYSTEM_ADD_NAME,\r\n  };\r\n}\r\n\r\nexport function removeName(name: string): types.SystemActionTypes {\r\n  return {\r\n    name,\r\n    type: types.SYSTEM_REMOVE_NAME,\r\n  };\r\n}\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport Footer from '../Footer';\r\n\r\nclass Home extends React.Component<{}, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Typography>\r\n          This is the home page where we provide useful details.\r\n        </Mui.Typography>\r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\n\r\nclass About extends React.Component<{}, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <Mui.Typography>\r\n        This site was created by Shane DeSeranno, Donald Gill, and Lara Ramey to aid in scoring games.\r\n      </Mui.Typography>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as generic from '../../Store/Generic';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 170,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n  },\r\n  scoreButton: {\r\n    margin: theme.spacing(1),\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, number>;\r\n}\r\n\r\ninterface IScoreCardActions {\r\n  addScore(name: string, value: number): void;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  IScoreCardActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IScoreCardState {\r\n  showScoreDialog: boolean;\r\n  value: string;\r\n}\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, IScoreCardState> {\r\n  constructor(p: IAllScoreCardProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showScoreDialog: false,\r\n      value: '',\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const myScore: number = this.props.scores[this.props.name] ? this.props.scores[this.props.name] : 0;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n          <Mui.Typography variant='h5'>{this.props.name}: {myScore}</Mui.Typography>\r\n          <Mui.Divider />\r\n          <Mui.Button className={this.props.classes.scoreButton} color='primary' variant='contained' onClick={this.handleScoreRound}>Add Score</Mui.Button>\r\n        </Mui.Paper>\r\n\r\n        <Mui.Dialog open={this.state.showScoreDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogTitle>\r\n            Scoring for: {this.props.name}\r\n          </Mui.DialogTitle>\r\n\r\n          <Mui.Divider />\r\n\r\n          <Mui.DialogContent>\r\n            <Mui.TextField\r\n              value={this.state.value}\r\n              type='number'\r\n              onChange={this.handleChange}\r\n              label='Points'\r\n              onKeyPress={this.handleKeyPress}\r\n              fullWidth={true}\r\n              autoFocus={true}\r\n            />\r\n          </Mui.DialogContent>\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              onClick={this.handleUpdateScore}\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleKeyPress(event: React.KeyboardEvent<HTMLInputElement>): void {\r\n    if (event.key === 'Enter') {\r\n      this.handleUpdateScore();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private handleChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n    this.setState({\r\n      value: event.target.value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showScoreDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleScoreRound(): void {\r\n    this.setState({\r\n      showScoreDialog: true,\r\n      value: '',\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateScore(): void {\r\n    const value = parseInt(this.state.value, 10);\r\n    console.log(value);\r\n    if (!isNaN(value)) {\r\n      this.props.addScore(this.props.name, value);\r\n    }\r\n\r\n    this.setState({\r\n      showScoreDialog: false,\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.generic.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreCardActions => ({\r\n  addScore: (name: string, value: number) => dispatch(generic.addScore(name, value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as types from './Types';\r\n\r\nexport function resetAll(): types.GenericActionTypes {\r\n  return {\r\n    type: types.GENERIC_RESET_ALL,\r\n  };\r\n}\r\n\r\nexport function addScore(name: string, value: number): types.GenericActionTypes {\r\n  return {\r\n    name,\r\n    value,\r\n    type: types.GENERIC_ADD_SCORE,\r\n  };\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as generic from '../../Store/Generic';\r\nimport ScoreCard from './ScoreCard';\r\nimport { bind } from 'decko';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  genericWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface IGenericProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IGenericActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllGenericProps =\r\n  IGenericProps &\r\n  IGenericActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass Generic extends React.Component<IAllGenericProps, {}> {\r\n  public render(): JSX.Element {\r\n    if (this.props.names.length === 0) {\r\n      return (\r\n        <Mui.Typography>\r\n          Go back to Home and add some players first!\r\n        </Mui.Typography>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.genericWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.props.reset();\r\n  }\r\n}\r\nconst mapStateToProps = (state: AppState): IGenericProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IGenericActions => ({\r\n  reset: () => dispatch(generic.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Generic));\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  marginTop: {\r\n    marginTop: 10,\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    verticalAlign: 'middle',\r\n  },\r\n});\r\n\r\ninterface ISafetyRowProps {\r\n  name: string;\r\n  played: boolean;\r\n  coupFourre: boolean;\r\n  togglePlayed(): void;\r\n  toggleCoupFourre(): void;\r\n}\r\n\r\ntype IAllSafetyRowProps =\r\n  ISafetyRowProps &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass SafetyRow extends React.Component<IAllSafetyRowProps, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Grid item={true} xs={6} className={this.props.classes.right}>\r\n          <Mui.Typography className={this.props.classes.marginTop}>{this.props.name}:</Mui.Typography>\r\n        </Mui.Grid>\r\n        <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Checkbox checked={this.props.played} onChange={this.props.togglePlayed} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Checkbox disabled={!this.props.played} checked={this.props.coupFourre} onChange={this.props.toggleCoupFourre} /></Mui.Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(localStyles)(SafetyRow);\r\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as milleBornes from '../../Store/MilleBornes';\r\nimport SafetyRow from './SafetyRow';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  marginTop: {\r\n    marginTop: 10,\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    verticalAlign: 'middle',\r\n  },\r\n  scoreButton: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 170,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, number>;\r\n}\r\n\r\ninterface IScoreCardActions {\r\n  addScore(name: string, value: number): void;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  IScoreCardActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IScoreCardState {\r\n  showScoreDialog: boolean;\r\n  distance: number;\r\n  rightOfWayPlayed: boolean;\r\n  rightOfWayPlayedCF: boolean;\r\n  drivingAcePlayed: boolean;\r\n  drivingAcePlayedCF: boolean;\r\n  fuelTankPlayed: boolean;\r\n  fuelTankPlayedCF: boolean;\r\n  punctureProofPlayed: boolean;\r\n  punctureProofPlayedCF: boolean;\r\n  delayedAction: boolean;\r\n  safeTrip: boolean;\r\n  extension: boolean;\r\n  shutout: boolean;\r\n}\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, IScoreCardState> {\r\n  constructor(p: IAllScoreCardProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showScoreDialog: false,\r\n      distance: 0,\r\n      rightOfWayPlayed: false,\r\n      rightOfWayPlayedCF: false,\r\n      drivingAcePlayed: false,\r\n      drivingAcePlayedCF: false,\r\n      fuelTankPlayed: false,\r\n      fuelTankPlayedCF: false,\r\n      punctureProofPlayed: false,\r\n      punctureProofPlayedCF: false,\r\n      delayedAction: false,\r\n      safeTrip: false,\r\n      extension: false,\r\n      shutout: false,\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n          <Mui.Typography variant='h5'>{this.props.name}: {this.getScore()}</Mui.Typography>\r\n          <Mui.Divider />\r\n          <Mui.Button className={this.props.classes.scoreButton} color='primary' variant='contained' onClick={this.handleScoreRound}>Add Score</Mui.Button>\r\n        </Mui.Paper>\r\n\r\n        <Mui.Dialog open={this.state.showScoreDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogTitle>\r\n            Scoring for: {this.props.name}\r\n          </Mui.DialogTitle>\r\n\r\n          <Mui.Divider />\r\n\r\n          <Mui.DialogContent>\r\n            <Mui.Typography id='distance-slider' gutterBottom={true}>Distance</Mui.Typography>\r\n            <Mui.Slider\r\n              aria-labelledby='distance-slider'\r\n              valueLabelDisplay='on'\r\n              step={25}\r\n              min={0}\r\n              max={1000}\r\n              marks={true}\r\n              value={this.state.distance}\r\n              onChange={this.handleDistanceChanged}\r\n            />\r\n\r\n            <Mui.Grid container={true}>\r\n              <Mui.Grid item={true} xs={6} className={this.props.classes.right}></Mui.Grid>\r\n              <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Typography>Played</Mui.Typography></Mui.Grid>\r\n              <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Typography>Coup-fourré</Mui.Typography></Mui.Grid>\r\n\r\n              <SafetyRow name='Right of Way' played={this.state.rightOfWayPlayed} coupFourre={this.state.rightOfWayPlayedCF} togglePlayed={this.handleToggleRightOfWay} toggleCoupFourre={this.handleToggleRightOfWayCF} />\r\n              <SafetyRow name='Driving Ace' played={this.state.drivingAcePlayed} coupFourre={this.state.drivingAcePlayedCF} togglePlayed={this.handleToggleDrivingAce} toggleCoupFourre={this.handleToggleDrivingAceCF} />\r\n              <SafetyRow name='Fuel Tank' played={this.state.fuelTankPlayed} coupFourre={this.state.fuelTankPlayedCF} togglePlayed={this.handleToggleFuelTank} toggleCoupFourre={this.handleToggleFuelTankCF} />\r\n              <SafetyRow name='Puncture Proof' played={this.state.punctureProofPlayed} coupFourre={this.state.punctureProofPlayedCF} togglePlayed={this.handleTogglePunctureProof} toggleCoupFourre={this.handleTogglePunctureProofCF} />\r\n\r\n              <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Delayed Action:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox disabled={this.state.distance < 1000} checked={this.state.delayedAction} onChange={this.handleToggleDelayedAction} /></Mui.Grid>\r\n\r\n              <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Safe Trip:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox disabled={this.state.distance < 1000} checked={this.state.safeTrip} onChange={this.handleToggleSafeTrip} /></Mui.Grid>\r\n\r\n              {/* <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Extension:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox checked={this.state.extension} onChange={this.handleToggleExtension} /></Mui.Grid> */}\r\n\r\n              <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Shutout:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox disabled={this.state.distance < 1000} checked={this.state.shutout} onChange={this.handleToggleShutout} /></Mui.Grid>\r\n            </Mui.Grid>\r\n          </Mui.DialogContent>\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              onClick={this.handleUpdateScore}\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleDistanceChanged(event: React.ChangeEvent<{}>, value: number | number[]): void {\r\n    if (Array.isArray(value)) {\r\n      value = value[value.length - 1];\r\n    }\r\n\r\n    this.setState({\r\n      distance: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleDelayedAction(): void {\r\n    this.setState({\r\n      delayedAction: !this.state.delayedAction,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleShutout(): void {\r\n    this.setState({\r\n      shutout: !this.state.shutout,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleSafeTrip(): void {\r\n    this.setState({\r\n      safeTrip: !this.state.safeTrip,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleRightOfWay(): void {\r\n    this.setState({\r\n      rightOfWayPlayed: !this.state.rightOfWayPlayed,\r\n      rightOfWayPlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleRightOfWayCF(): void {\r\n    this.setState({\r\n      rightOfWayPlayedCF: !this.state.rightOfWayPlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleDrivingAce(): void {\r\n    this.setState({\r\n      drivingAcePlayed: !this.state.drivingAcePlayed,\r\n      drivingAcePlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleDrivingAceCF(): void {\r\n    this.setState({\r\n      drivingAcePlayedCF: !this.state.drivingAcePlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleFuelTank(): void {\r\n    this.setState({\r\n      fuelTankPlayed: !this.state.fuelTankPlayed,\r\n      fuelTankPlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleFuelTankCF(): void {\r\n    this.setState({\r\n      fuelTankPlayedCF: !this.state.fuelTankPlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleTogglePunctureProof(): void {\r\n    this.setState({\r\n      punctureProofPlayed: !this.state.punctureProofPlayed,\r\n      punctureProofPlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleTogglePunctureProofCF(): void {\r\n    this.setState({\r\n      punctureProofPlayedCF: !this.state.punctureProofPlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showScoreDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateScore(): void {\r\n    let score: number = 0;\r\n\r\n    score += this.state.distance;\r\n\r\n    if (this.state.drivingAcePlayed) {\r\n      score += 100;\r\n      if (this.state.drivingAcePlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.fuelTankPlayed) {\r\n      score += 100;\r\n      if (this.state.fuelTankPlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.punctureProofPlayed) {\r\n      score += 100;\r\n      if (this.state.punctureProofPlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.rightOfWayPlayed) {\r\n      score += 100;\r\n      if (this.state.rightOfWayPlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.drivingAcePlayed && this.state.fuelTankPlayed && this.state.punctureProofPlayed && this.state.rightOfWayPlayed) {\r\n      score += 300;\r\n    }\r\n\r\n    if (this.state.distance === 1000) {\r\n      score += 400;\r\n\r\n      if (this.state.shutout) {\r\n        score += 500;\r\n      }\r\n\r\n      if (this.state.safeTrip) {\r\n        score += 300;\r\n      }\r\n\r\n      if (this.state.extension) {\r\n        score += 200;\r\n      }\r\n\r\n      if (this.state.delayedAction) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    this.props.addScore(this.props.name, score);\r\n    this.setState({\r\n      showScoreDialog: false,\r\n      distance: 0,\r\n      rightOfWayPlayed: false,\r\n      rightOfWayPlayedCF: false,\r\n      drivingAcePlayed: false,\r\n      drivingAcePlayedCF: false,\r\n      fuelTankPlayed: false,\r\n      fuelTankPlayedCF: false,\r\n      punctureProofPlayed: false,\r\n      punctureProofPlayedCF: false,\r\n      delayedAction: false,\r\n      safeTrip: false,\r\n      extension: false,\r\n      shutout: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private getScore(): number {\r\n    const score = this.props.scores[this.props.name];\r\n    return score ? score : 0;\r\n  }\r\n\r\n  @bind\r\n  private handleScoreRound(): void {\r\n    this.setState({\r\n      showScoreDialog: true,\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.milleBornes.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreCardActions => ({\r\n  addScore: (name: string, value: number) => dispatch(milleBornes.addScore(name, value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as types from './Types';\r\n\r\nexport function resetAll(): types.MilleBornesActionTypes {\r\n  return {\r\n    type: types.MILLE_BORNES_RESET_ALL,\r\n  };\r\n}\r\n\r\nexport function addScore(name: string, value: number): types.MilleBornesActionTypes {\r\n  return {\r\n    name,\r\n    value,\r\n    type: types.MILLE_BORNES_ADD_SCORE,\r\n  };\r\n}\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as milleBornes from '../../Store/MilleBornes';\r\nimport ScoreCard from './ScoreCard';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  milleBornesWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface IMilleBornesProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IMilleBornesActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllMilleBornesProps =\r\n  IMilleBornesProps &\r\n  IMilleBornesActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass MilleBornes extends React.Component<IAllMilleBornesProps, {}> {\r\n  public render(): JSX.Element {\r\n    if (this.props.names.length === 0) {\r\n      return (\r\n        <Mui.Typography>\r\n          Go back to Home and add some players first!\r\n        </Mui.Typography>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.milleBornesWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.props.reset();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IMilleBornesProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IMilleBornesActions => ({\r\n  reset: () => dispatch(milleBornes.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(MilleBornes));\r\n","import * as types from './Types';\r\n\r\nexport function resetAll(): types.MuActionTypes {\r\n  return {\r\n    type: types.MU_RESET_ALL,\r\n  };\r\n}\r\n\r\nexport function addScore(name: string, value: number): types.MuActionTypes {\r\n  return {\r\n    name,\r\n    value,\r\n    type: types.MU_ADD_SCORE,\r\n  };\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 170,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, number>;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, {}> {\r\n  public render(): JSX.Element {\r\n    const myScore: number = this.props.scores[this.props.name] ? this.props.scores[this.props.name] : 0;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n          <Mui.Typography variant='h5'>{this.props.name}: {myScore}</Mui.Typography>\r\n        </Mui.Paper>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.mu.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): {} => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","enum Trumps {\r\n  Black,\r\n  Blue,\r\n  Green,\r\n  Red,\r\n  Yellow,\r\n  One,\r\n  Seven,\r\n  Zero,\r\n  Two,\r\n  Three,\r\n  Four,\r\n  Five,\r\n  Six,\r\n  Eight,\r\n  Nine,\r\n  None,\r\n}\r\n\r\nexport default Trumps;\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { bind } from 'decko';\r\n\r\nimport Trumps from './Trumps';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  selectBox: {\r\n    width: 180,\r\n  },\r\n});\r\n\r\ninterface ITrumpSelectorProps {\r\n  label: string;\r\n  trump: Trumps;\r\n  onTrumpChanged(value: Trumps): void;\r\n}\r\n\r\ntype IAllTrumpSelectorProps =\r\n  ITrumpSelectorProps &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass TrumpSelector extends React.Component<IAllTrumpSelectorProps, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <Mui.FormControl variant='filled' className={this.props.classes.selectBox}>\r\n        <Mui.InputLabel htmlFor='trump'>\r\n          {this.props.label}\r\n        </Mui.InputLabel>\r\n        <Mui.Select\r\n          value={this.props.trump}\r\n          onChange={this.handleTrumpChanged}\r\n          inputProps={{\r\n            name: 'trump',\r\n            id: 'trump',\r\n          }}\r\n        >\r\n          <Mui.MenuItem value={Trumps.Black}>Black</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Blue}>Blue</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Green}>Green</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Red}>Red</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Yellow}>Yellow</Mui.MenuItem>\r\n          <Mui.Divider />\r\n          <Mui.MenuItem value={Trumps.One}>1</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Seven}>7</Mui.MenuItem>\r\n          <Mui.Divider />\r\n          <Mui.MenuItem value={Trumps.Zero}>0</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Two}>2</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Three}>3</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Four}>4</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Five}>5</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Six}>6</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Eight}>8</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Nine}>9</Mui.MenuItem>\r\n          <Mui.Divider />\r\n          <Mui.MenuItem value={Trumps.None}>No Trump</Mui.MenuItem>\r\n        </Mui.Select>\r\n      </Mui.FormControl>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleTrumpChanged(event: React.ChangeEvent<{ name?: string; value: unknown }>): void {\r\n    this.props.onTrumpChanged(event.target.value as Trumps);\r\n  }\r\n}\r\n\r\nexport default Mui.withStyles(localStyles)(TrumpSelector);\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { bind } from 'decko';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as mu from '../../Store/Mu';\r\nimport Trumps from './Trumps';\r\nimport TrumpSelector from './TrumpSelector';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  center: {\r\n    marginTop: 8,\r\n  },\r\n});\r\n\r\nconst PointsPerBid = [0, 0, 0, 0, 2, 3, 4];\r\nfunction getChiefTeamBidMade(playerCount: number, points: number): number {\r\n  let currentPoints = 62 - playerCount; // Hacky, but works, as 4 player = 58, 5 player = 57, 6 player = 56\r\n  let currentBid = 60 / playerCount;\r\n  while (currentPoints > points) {\r\n    currentBid--;\r\n    currentPoints -= PointsPerBid[playerCount];\r\n  }\r\n\r\n  return Math.max(0, currentBid);\r\n}\r\n\r\nfunction getChiefTeamBonus(overTrump: Trumps, bid: number): number {\r\n  switch (overTrump) {\r\n    case Trumps.Black:\r\n    case Trumps.Blue:\r\n    case Trumps.Green:\r\n    case Trumps.Red:\r\n    case Trumps.Yellow:\r\n      return 10 * Math.min(10, bid);\r\n\r\n    case Trumps.One:\r\n    case Trumps.Seven:\r\n      return 10 + 10 * Math.min(9, bid);\r\n\r\n    case Trumps.None:\r\n      return 30 + 10 * Math.min(7, bid);\r\n  }\r\n\r\n  // 0, 2, 3, 4, 5, 6, 8, 9\r\n  return 20 + 10 * Math.min(6, bid);\r\n}\r\n\r\ninterface IScoreHandDialogMappedProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IScoreHandDialogProps {\r\n  showDialog: boolean;\r\n  onClose(): void;\r\n}\r\n\r\ninterface IScoreHandDialogActions {\r\n  addScore(name: string, value: number): void;\r\n}\r\n\r\ntype IAllScoreHandDialogProps =\r\n  IScoreHandDialogMappedProps &\r\n  IScoreHandDialogProps &\r\n  IScoreHandDialogActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IScoreHandDialogState {\r\n  bid: number;\r\n  overTrump: Trumps;\r\n  underTrump: Trumps;\r\n  chief: string;\r\n  vice: string;\r\n  partner: string;\r\n  points: Record<string, string>;\r\n}\r\n\r\nclass ScoreHandDialog extends React.Component<IAllScoreHandDialogProps, IScoreHandDialogState> {\r\n  constructor(p: IAllScoreHandDialogProps) {\r\n    super(p);\r\n\r\n    this.state = this.getDefaultState();\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IAllScoreHandDialogProps): void {\r\n    if (!prevProps.showDialog && this.props.showDialog) {\r\n      this.setState(this.getDefaultState());\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <Mui.Dialog open={this.props.showDialog} maxWidth='sm' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogContent>\r\n            <Mui.Grid container={true} spacing={2}>\r\n              <Mui.Grid item={true} sm={4} xs={12}>\r\n                <Mui.Typography>Bid</Mui.Typography>\r\n                <Mui.Slider\r\n                  value={this.state.bid}\r\n                  onChange={this.handleBidChanged}\r\n                  min={1}\r\n                  max={60 / this.props.names.length}\r\n                  step={1}\r\n                  valueLabelDisplay='on'\r\n                  marks={true}\r\n                />\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} sm={4} xs={12}>\r\n                <TrumpSelector label='Over Trump' trump={this.state.overTrump} onTrumpChanged={this.handleOverTrumpChanged}/>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} sm={4} xs={12}>\r\n              <TrumpSelector label='Under Trump' trump={this.state.underTrump} onTrumpChanged={this.handleUnderTrumpChanged}/>\r\n              </Mui.Grid>\r\n\r\n              <Mui.Grid item={true} xs={2}>Name</Mui.Grid>\r\n              <Mui.Grid item={true} xs={2}>Chief</Mui.Grid>\r\n              <Mui.Grid item={true} xs={2}>Vice</Mui.Grid>\r\n              <Mui.Grid item={true} xs={2}>Partner</Mui.Grid>\r\n              <Mui.Grid item={true} xs={4}></Mui.Grid>\r\n              <Mui.Grid item={true} xs={12}><Mui.Divider /></Mui.Grid>\r\n\r\n              {this.props.names.map((name) => this.createPlayerRow(name))}\r\n            </Mui.Grid>\r\n          </Mui.DialogContent>\r\n\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              onClick={this.handleUpdateScore}\r\n              variant='contained'\r\n              color='primary'\r\n              disabled={!this.canSave()}\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private getDefaultState(): IScoreHandDialogState {\r\n    const points: Record<string, string> = {};\r\n    for (const name of this.props.names) {\r\n      points[name] = '0';\r\n    }\r\n\r\n    return {\r\n      bid: 1,\r\n      overTrump: Trumps.Black,\r\n      underTrump: Trumps.Blue,\r\n      chief: '',\r\n      vice: '',\r\n      partner: '',\r\n      points,\r\n    };\r\n  }\r\n\r\n  @bind\r\n  private handlePointsChange(name: string, value: string): void {\r\n    const newPoints = Object.assign({}, this.state.points);\r\n    newPoints[name] = value;\r\n    this.setState({\r\n      points: newPoints,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleChief(name: string): void {\r\n    this.setState({\r\n      chief: name,\r\n      vice: (this.state.vice === name) ? '' : this.state.vice,\r\n      partner: (this.state.partner === name) ? '' : this.state.partner,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleVice(name: string): void {\r\n    this.setState({\r\n      chief: (this.state.chief === name) ? '' : this.state.chief,\r\n      vice: name,\r\n      partner: (this.state.partner === name) ? '' : this.state.partner,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handlePartner(name: string): void {\r\n    this.setState({\r\n      chief: (this.state.chief === name) ? '' : this.state.chief,\r\n      vice: (this.state.vice === name) ? '' : this.state.vice,\r\n      partner: name,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleOverTrumpChanged(value: Trumps): void {\r\n    this.setState({\r\n      overTrump: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUnderTrumpChanged(value: Trumps): void {\r\n    this.setState({\r\n      underTrump: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateScore(): void {\r\n    // First check to see if the chief team made it\r\n    const chiefTeamPoints = parseInt(this.state.points[this.state.chief], 10) + parseInt(this.state.points[this.state.partner], 10);\r\n    const chiefTeamBidMade = getChiefTeamBidMade(this.props.names.length, chiefTeamPoints);\r\n\r\n    if (chiefTeamBidMade >= this.state.bid) {\r\n      // Chief made it!\r\n      for (const name of this.props.names) {\r\n        let score: number = parseInt(this.state.points[name], 10);\r\n        if (name === this.state.chief || name === this.state.partner) {\r\n          score += getChiefTeamBonus(this.state.overTrump, this.state.bid);\r\n        }\r\n\r\n        this.props.addScore(name, score);\r\n      }\r\n    } else {\r\n      // Chief missed it!\r\n      const missedBy = this.state.bid - chiefTeamBidMade;\r\n      for (const name of this.props.names) {\r\n        let score: number = parseInt(this.state.points[name], 10);\r\n        if (name === this.state.chief) {\r\n          score -= 10 * missedBy;\r\n        } else if (name !== this.state.partner) {\r\n          score += 5 * missedBy;\r\n        }\r\n\r\n        this.props.addScore(name, score);\r\n      }\r\n    }\r\n\r\n    this.props.onClose();\r\n  }\r\n\r\n  @bind\r\n  private createPlayerRow(name: string): JSX.Element {\r\n    return (\r\n      <React.Fragment key={name}>\r\n        <Mui.Grid className={this.props.classes.center} item={true} xs={2}>{name}</Mui.Grid>\r\n        <Mui.Grid item={true} xs={2}><Mui.Checkbox onClick={() => this.handleChief(name)} checked={this.state.chief === name} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={2}><Mui.Checkbox onClick={() => this.handleVice(name)} checked={this.state.vice === name} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={2}><Mui.Checkbox onClick={() => this.handlePartner(name)} checked={this.state.partner === name} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={4}>\r\n          <Mui.TextField\r\n            type='number'\r\n            value={this.state.points[name]}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => this.handlePointsChange(name, event.target.value)}\r\n            label='Points'\r\n            fullWidth={true}\r\n          />\r\n        </Mui.Grid>\r\n        <Mui.Grid item={true} xs={12}><Mui.Divider /></Mui.Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private canSave(): boolean {\r\n    if (this.state.chief.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    if (this.state.partner.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    let sum: number = 0;\r\n    for (const name of this.props.names) {\r\n      sum += parseInt(this.state.points[name], 10);\r\n    }\r\n\r\n    if (sum !== 60) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  @bind\r\n  private handleBidChanged(event: React.ChangeEvent<{}>, value: number | number[]): void {\r\n    if (Array.isArray(value)) {\r\n      value = value[value.length - 1];\r\n    }\r\n\r\n    this.setState({\r\n      bid: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.props.onClose();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreHandDialogMappedProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreHandDialogActions => ({\r\n  addScore: (name: string, value: number) => dispatch(mu.addScore(name, value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreHandDialog));\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { bind } from 'decko';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as mu from '../../Store/Mu';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  center: {\r\n    marginTop: 8,\r\n  },\r\n});\r\n\r\ninterface IStalemateDialogMappedProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IStalemateDialogProps {\r\n  showDialog: boolean;\r\n  onClose(): void;\r\n}\r\n\r\ninterface IStalemateDialogActions {\r\n  addScore(name: string, value: number): void;\r\n}\r\n\r\ntype IAllStalemateDialogProps =\r\n  IStalemateDialogMappedProps &\r\n  IStalemateDialogProps &\r\n  IStalemateDialogActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IStalemateDialogState {\r\n  bid: number;\r\n  lastBidder: string;\r\n  highestBidders: string[];\r\n}\r\n\r\nclass StalemateDialog extends React.Component<IAllStalemateDialogProps, IStalemateDialogState> {\r\n  constructor(p: IAllStalemateDialogProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      bid: 1,\r\n      lastBidder: '',\r\n      highestBidders: [],\r\n    };\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IAllStalemateDialogProps): void {\r\n    if (!prevProps.showDialog && this.props.showDialog) {\r\n      this.setState({\r\n        bid: 1,\r\n        lastBidder: '',\r\n        highestBidders: [],\r\n      });\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <Mui.Dialog open={this.props.showDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n        <Mui.DialogContent>\r\n          <Mui.Grid container={true}>\r\n            <Mui.Grid item={true} xs={12}>\r\n              <Mui.Typography>Bid</Mui.Typography>\r\n              <Mui.Slider\r\n                value={this.state.bid}\r\n                onChange={this.handleBidChanged}\r\n                min={1}\r\n                max={60 / this.props.names.length}\r\n                step={1}\r\n                valueLabelDisplay='on'\r\n                marks={true}\r\n              />\r\n            </Mui.Grid>\r\n\r\n            <Mui.Grid item={true} xs={4}>Name</Mui.Grid>\r\n            <Mui.Grid item={true} xs={4}>Last Bidder</Mui.Grid>\r\n            <Mui.Grid item={true} xs={4}>Highest Bidder</Mui.Grid>\r\n            <Mui.Grid item={true} xs={12}><Mui.Divider /></Mui.Grid>\r\n\r\n            {this.props.names.map((name) => this.createStalemateRow(name))}\r\n          </Mui.Grid>\r\n        </Mui.DialogContent>\r\n\r\n        <Mui.DialogActions>\r\n          <Mui.Button\r\n            variant='contained'\r\n            color='primary'\r\n            onClick={this.handleDialogClose}\r\n          >\r\n            Cancel\r\n            </Mui.Button>\r\n\r\n          <Mui.Button\r\n            onClick={this.handleUpdateStalemate}\r\n            variant='contained'\r\n            color='primary'\r\n            disabled={!this.canSave()}\r\n          >\r\n            Add\r\n            </Mui.Button>\r\n        </Mui.DialogActions>\r\n      </Mui.Dialog>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateStalemate(): void {\r\n    for (const name of this.props.names) {\r\n      if (this.state.lastBidder === name) {\r\n        this.props.addScore(name, -10 * this.state.bid);\r\n      } else if (this.state.highestBidders.indexOf(name) > -1) {\r\n        this.props.addScore(name, 5 * this.state.bid);\r\n      }\r\n    }\r\n\r\n    this.props.onClose();\r\n  }\r\n\r\n  @bind\r\n  private handleLastBidder(name: string): void {\r\n    const included = this.state.highestBidders.indexOf(name) !== -1;\r\n\r\n    this.setState({\r\n      lastBidder: name,\r\n      highestBidders: included ? this.state.highestBidders.filter((item) => item !== name) : this.state.highestBidders,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleHighestBidder(name: string): void {\r\n    const included = this.state.highestBidders.indexOf(name) !== -1;\r\n    if (included) {\r\n      this.setState({\r\n        highestBidders: this.state.highestBidders.filter((item) => item !== name),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        lastBidder: name === this.state.lastBidder ? '' : this.state.lastBidder,\r\n        highestBidders: this.state.highestBidders.concat(name),\r\n      });\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private createStalemateRow(name: string): JSX.Element {\r\n    return (\r\n      <React.Fragment key={name}>\r\n        <Mui.Grid className={this.props.classes.center} item={true} xs={4}>{name}</Mui.Grid>\r\n        <Mui.Grid item={true} xs={4}><Mui.Checkbox onClick={() => this.handleLastBidder(name)} checked={this.state.lastBidder === name} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={4}><Mui.Checkbox onClick={() => this.handleHighestBidder(name)} checked={this.state.highestBidders.indexOf(name) !== -1} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={12}><Mui.Divider /></Mui.Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private canSave(): boolean {\r\n    return this.state.highestBidders.length > 0 && this.state.lastBidder.length > 0;\r\n  }\r\n\r\n  @bind\r\n  private handleBidChanged(event: React.ChangeEvent<{}>, value: number | number[]): void {\r\n    if (Array.isArray(value)) {\r\n      value = value[value.length - 1];\r\n    }\r\n\r\n    this.setState({\r\n      bid: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.props.onClose();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IStalemateDialogMappedProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IStalemateDialogActions => ({\r\n  addScore: (name: string, value: number) => dispatch(mu.addScore(name, value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(StalemateDialog));\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { bind } from 'decko';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as mu from '../../Store/Mu';\r\nimport ScoreCard from './ScoreCard';\r\nimport ScoreHandDialog from './ScoreHandDialog';\r\nimport StalemateDialog from './StalemateDialog';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  muWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  buttonSpacing: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n});\r\n\r\ninterface IMuProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IMuActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllMuProps =\r\n  IMuProps &\r\n  IMuActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IMuState {\r\n  showStalemateDialog: boolean;\r\n  showScoreDialog: boolean;\r\n}\r\n\r\nclass Mu extends React.Component<IAllMuProps, IMuState> {\r\n  constructor(p: IAllMuProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showScoreDialog: false,\r\n      showStalemateDialog: false,\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    if (this.props.names.length < 4) {\r\n      return (\r\n        <Mui.Typography>\r\n          This game requires at least 4 players, go Home and add some more players.\r\n        </Mui.Typography>\r\n      );\r\n    }\r\n\r\n    if (this.props.names.length > 6) {\r\n      return (\r\n        <Mui.Typography>\r\n          This game doesn't support more than 6 players, go Home and remove some players.\r\n        </Mui.Typography>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleScoreHand}>Score Hand</Mui.Button>\r\n        <Mui.Button className={this.props.classes.buttonSpacing} color='primary' variant='contained' onClick={this.handleStalemate}>Stalemate</Mui.Button>\r\n        <div className={this.props.classes.muWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n\r\n        <ScoreHandDialog onClose={this.handleDialogClose} showDialog={this.state.showScoreDialog} />\r\n        <StalemateDialog onClose={this.handleDialogClose} showDialog={this.state.showStalemateDialog} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showScoreDialog: false,\r\n      showStalemateDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleScoreHand(): void {\r\n    this.setState({\r\n      showScoreDialog: true,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleStalemate(): void {\r\n    this.setState({\r\n      showStalemateDialog: true,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.props.reset();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IMuProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IMuActions => ({\r\n  reset: () => dispatch(mu.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Mu));\r\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as split from '../../Store/Split';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 360,\r\n    minWidth: 360,\r\n    padding: theme.spacing(1),\r\n  },\r\n  avatar: {\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    height: 30,\r\n    width: 30,\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  selectedAvatar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText,\r\n  },\r\n  row: {\r\n    marginTop: theme.spacing(0.25),\r\n    marginBottom: theme.spacing(0.25),\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, split.ISplitScore>;\r\n}\r\n\r\ninterface IScoreCardActions {\r\n  addValue(name: string, rank: split.SplitRanks): void;\r\n  removeValue(name: string, rank: split.SplitRanks): void;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  IScoreCardActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nconst ValueMap: Record<split.SplitRanks, number[]> = {\r\n  A: [0, 30, 70, 120, 180, 200],\r\n  K: [0, 20, 50, 90, 140, 200],\r\n  Q: [0, 20, 50, 90, 140, 200],\r\n  J: [0, 20, 50, 90, 140, 200],\r\n  10: [0, 10, 30, 60, 100, 200],\r\n  9: [0, 10, 30, 60, 100, 200],\r\n  8: [0, 10, 30, 60, 100, 200],\r\n  7: [0, 10, 30, 60, 100, 200],\r\n  6: [0, 10, 30, 60, 100, 200],\r\n  5: [0, 10, 30, 60, 100, 200],\r\n  4: [0, 10, 30, 60, 100, 200],\r\n  3: [0, 10, 30, 60, 100, 200],\r\n  2: [0, 5, 20, 40, 70, 200],\r\n\r\n  Negative: [],\r\n};\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, {}> {\r\n  public render(): JSX.Element {\r\n    const myScore: split.ISplitScore = this.props.scores[this.props.name];\r\n\r\n    return (\r\n      <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n        <Mui.Grid container={true}>\r\n          <Mui.Grid item={true} xs={6}>\r\n            <Mui.Typography variant='h5'>\r\n              {this.props.name}\r\n            </Mui.Typography>\r\n          </Mui.Grid>\r\n          <Mui.Grid item={true} xs={6} className={this.props.classes.right}>\r\n            <Mui.Typography variant='h5'>\r\n              {this.calculateScore(myScore)}\r\n            </Mui.Typography>\r\n          </Mui.Grid>\r\n        </Mui.Grid>\r\n        <Mui.Divider variant='middle' />\r\n        {this.createRow(myScore, split.SplitRanks.A)}\r\n        {this.createRow(myScore, split.SplitRanks.K)}\r\n        {this.createRow(myScore, split.SplitRanks.Q)}\r\n        {this.createRow(myScore, split.SplitRanks.J)}\r\n        {this.createRow(myScore, split.SplitRanks.Ten)}\r\n        {this.createRow(myScore, split.SplitRanks.Nine)}\r\n        {this.createRow(myScore, split.SplitRanks.Eight)}\r\n        {this.createRow(myScore, split.SplitRanks.Seven)}\r\n        {this.createRow(myScore, split.SplitRanks.Six)}\r\n        {this.createRow(myScore, split.SplitRanks.Five)}\r\n        {this.createRow(myScore, split.SplitRanks.Four)}\r\n        {this.createRow(myScore, split.SplitRanks.Three)}\r\n        {this.createRow(myScore, split.SplitRanks.Two)}\r\n        <Mui.Grid container={true} justify='center' alignItems='center' className={this.props.classes.row}>\r\n          <Mui.Grid item={true} xs={4}>\r\n            <Mui.Button variant='outlined' onClick={() => this.handleIncrease(split.SplitRanks.Negative)}>\r\n              -5\r\n            </Mui.Button>\r\n          </Mui.Grid>\r\n          <Mui.Grid item={true} xs={4} className={this.props.classes.center}>\r\n            <Mui.Typography variant='h5'>{this.getRankValues(myScore, split.SplitRanks.Negative)}</Mui.Typography>\r\n          </Mui.Grid>\r\n          <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n            <Mui.Button variant='outlined' onClick={() => this.handleDecrease(split.SplitRanks.Negative)}>\r\n              +5\r\n        </Mui.Button>\r\n          </Mui.Grid>\r\n        </Mui.Grid>\r\n      </Mui.Paper>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private getRankValues(myScore: split.ISplitScore, rank: split.SplitRanks): number {\r\n    const index = myScore ? myScore.values[rank] : 0;\r\n\r\n    if (rank === split.SplitRanks.Negative) {\r\n      return -5 * index;\r\n    }\r\n\r\n    return ValueMap[rank][index];\r\n  }\r\n\r\n  @bind\r\n  private calculateScore(myScore: split.ISplitScore): number {\r\n    return this.getRankValues(myScore, split.SplitRanks.Negative) +\r\n      this.getRankValues(myScore, split.SplitRanks.A) +\r\n      this.getRankValues(myScore, split.SplitRanks.K) +\r\n      this.getRankValues(myScore, split.SplitRanks.Q) +\r\n      this.getRankValues(myScore, split.SplitRanks.J) +\r\n      this.getRankValues(myScore, split.SplitRanks.Ten) +\r\n      this.getRankValues(myScore, split.SplitRanks.Nine) +\r\n      this.getRankValues(myScore, split.SplitRanks.Eight) +\r\n      this.getRankValues(myScore, split.SplitRanks.Seven) +\r\n      this.getRankValues(myScore, split.SplitRanks.Six) +\r\n      this.getRankValues(myScore, split.SplitRanks.Five) +\r\n      this.getRankValues(myScore, split.SplitRanks.Four) +\r\n      this.getRankValues(myScore, split.SplitRanks.Three) +\r\n      this.getRankValues(myScore, split.SplitRanks.Two);\r\n  }\r\n\r\n  @bind\r\n  private handleIncrease(rank: split.SplitRanks): void {\r\n    this.props.addValue(this.props.name, rank);\r\n  }\r\n\r\n  @bind\r\n  private handleDecrease(rank: split.SplitRanks): void {\r\n    this.props.removeValue(this.props.name, rank);\r\n  }\r\n\r\n  @bind\r\n  private createRow(myScore: split.ISplitScore, rank: split.SplitRanks): JSX.Element {\r\n    const selectedIndex = myScore ? myScore.values[rank] : 0;\r\n\r\n    const avatars: JSX.Element[] = [];\r\n    for (let index = 0; index < 6; index++) {\r\n      let avatarClass = this.props.classes.avatar;\r\n      if (index === selectedIndex) {\r\n        avatarClass = `${avatarClass} ${this.props.classes.selectedAvatar}`;\r\n      }\r\n\r\n      avatars.push(<Mui.Avatar key={`${rank.toString()}-${index}`} className={avatarClass}>{ValueMap[rank][index]}</Mui.Avatar>);\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Grid container={true} justify='center' alignItems='center' className={this.props.classes.row}>\r\n          <Mui.Button variant='outlined' onClick={() => this.handleIncrease(rank)} style={{ marginRight: 10 }}>\r\n            {rank.toString()}\r\n          </Mui.Button>\r\n          {avatars}\r\n        </Mui.Grid>\r\n        <Mui.Divider />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.split.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreCardActions => ({\r\n  addValue: (name: string, rank: split.SplitRanks) => dispatch(split.addValue(name, rank)),\r\n  removeValue: (name: string, rank: split.SplitRanks) => dispatch(split.removeValue(name, rank)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as types from './Types';\r\n\r\nexport function addValue(name: string, rank: types.SplitRanks): types.SplitActionTypes {\r\n  return {\r\n    name,\r\n    rank,\r\n    type: types.SPLIT_ADD_VALUE,\r\n  };\r\n}\r\n\r\nexport function removeValue(name: string, rank: types.SplitRanks): types.SplitActionTypes {\r\n  return {\r\n    name,\r\n    rank,\r\n    type: types.SPLIT_REMOVE_VALUE,\r\n  };\r\n}\r\n\r\nexport function resetAll(): types.SplitActionTypes {\r\n  return {\r\n    type: types.SPLIT_RESET_ALL,\r\n  };\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as split from '../../Store/Split';\r\nimport ScoreCard from './ScoreCard';\r\nimport { bind } from 'decko';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  splitWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface ISplitProps {\r\n  names: string[];\r\n}\r\n\r\ninterface ISplitActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllSplitProps =\r\n  ISplitProps &\r\n  ISplitActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass Split extends React.Component<IAllSplitProps, {}> {\r\n  public render(): JSX.Element {\r\n    if (this.props.names.length === 0) {\r\n      return (\r\n        <Mui.Typography>\r\n          Go back to Home and add some players first!\r\n        </Mui.Typography>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.splitWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.props.reset();\r\n  }\r\n}\r\nconst mapStateToProps = (state: AppState): ISplitProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): ISplitActions => ({\r\n  reset: () => dispatch(split.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Split));\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from '../Home';\r\nimport About from '../About/About';\r\nimport Generic from '../Generic';\r\nimport MilleBornes from '../MilleBornes';\r\nimport Mu from '../Mu';\r\nimport Split from '../Split';\r\n\r\nclass Main extends React.Component<{}, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <Mui.Box m={2}>\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route path='/split' component={Split} />\r\n          <Route path='/millebornes' component={MilleBornes} />\r\n          <Route path='/mu' component={Mu} />\r\n          <Route path='/generic' component={Generic} />\r\n          <Route path='/about' component={About} />\r\n        </Switch>\r\n      </Mui.Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import * as React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport { Themes } from '../../Theme';\r\nimport * as system from '../../Store/System';\r\nimport Header from '../Header';\r\nimport Main from '../Main';\r\n\r\ninterface IAppProps {\r\n  selectedTheme: system.ThemeOptions;\r\n}\r\n\r\nclass App extends React.Component<IAppProps, {}> {\r\n  public render(): JSX.Element {\r\n    const currentTheme = Themes.getTheme(this.props.selectedTheme);\r\n\r\n    return (\r\n      <ThemeProvider theme={currentTheme}>\r\n        <CssBaseline />\r\n        <Header />\r\n        <Main />\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IAppProps => ({\r\n  selectedTheme: state.system.selectedTheme,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): {} => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './Store';\r\nimport App from './Components/App';\r\n\r\nReactDOM.render((\r\n  <HashRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </HashRouter>\r\n), document.getElementById('root'));\r\n"],"sourceRoot":""}