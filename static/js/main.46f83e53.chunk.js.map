{"version":3,"sources":["Store/System/Types.ts","Theme.tsx","Components/Header/index.tsx","Components/Footer/index.tsx","Store/System/Actions.ts","Components/Home/index.tsx","Components/About/About.tsx","Store/Generic/Types.ts","Components/Generic/ScoreCard.tsx","Store/Generic/Actions.ts","Components/Generic/index.tsx","Store/MilleBornes/Types.ts","Components/MilleBornes/SafetyRow.tsx","Components/MilleBornes/ScoreCard.tsx","Store/MilleBornes/Actions.ts","Components/MilleBornes/index.tsx","Store/Mu/Types.ts","Store/Mu/Actions.ts","Components/Mu/ScoreCard.tsx","Components/Mu/Trumps.tsx","Components/Mu/TrumpSelector.tsx","Components/Mu/ScoreHandDialog.tsx","Store/Split/Types.ts","Components/Mu/StalemateDialog.tsx","Components/Mu/index.tsx","Components/Split/ScoreCard.tsx","Store/Split/Actions.ts","Components/Split/index.tsx","Components/Main/index.tsx","Components/App/index.tsx","Store/Generic/Reducers.ts","Store/MilleBornes/Reducers.ts","Store/Mu/Reducers.ts","Store/Split/Reducers.ts","Store/System/Reducers.ts","Store/index.ts","index.tsx"],"names":["ThemeOptions","SYSTEM_CHANGE_THEME","SYSTEM_ADD_NAME","SYSTEM_REMOVE_NAME","lightTheme","palette","primary","indigo","secondary","lightBlue","type","darkTheme","Themes","option","Light","light","dark","createMuiTheme","Header","position","value","this","props","location","pathname","variant","scrollButtons","label","to","component","Link","React","withRouter","Footer","p","state","error","newName","showAddPlayerDialog","className","classes","appBar","chipWrapper","icon","chip","onClick","handleAdd","names","map","name","key","onDelete","handleDelete","open","maxWidth","fullWidth","onClose","handleDialogClose","required","autoFocus","onChange","handleNewNameChange","onKeyPress","handleKeyPress","length","color","disabled","handleAddName","event","preventDefault","target","trim","find","profile","toLowerCase","setState","addName","removeName","bind","connect","system","dispatch","types","Mui","theme","top","bottom","margin","spacing","display","flexWrap","Home","About","GENERIC_RESET_ALL","GENERIC_ADD_SCORE","ScoreCard","showScoreDialog","myScore","scores","scoreCardPaper","scoreButton","handleScoreRound","handleChange","handleUpdateScore","parseInt","console","log","isNaN","addScore","generic","width","padding","textAlign","Generic","genericWrapper","handleReset","reset","MILLE_BORNES_RESET_ALL","MILLE_BORNES_ADD_SCORE","SafetyRow","item","xs","right","marginTop","center","checked","played","togglePlayed","hideCoupFourre","hidden","coupFourre","toggleCoupFourre","withStyles","verticalAlign","distance","rightOfWayPlayed","rightOfWayPlayedCF","drivingAcePlayed","drivingAcePlayedCF","fuelTankPlayed","fuelTankPlayedCF","punctureProofPlayed","punctureProofPlayedCF","delayedAction","safeTrip","extension","shutout","getScore","id","gutterBottom","aria-labelledby","valueLabelDisplay","step","min","max","marks","handleDistanceChanged","container","handleToggleRightOfWay","handleToggleRightOfWayCF","handleToggleDrivingAce","handleToggleDrivingAceCF","handleToggleFuelTank","handleToggleFuelTankCF","handleTogglePunctureProof","handleTogglePunctureProofCF","handleToggleDelayedAction","handleToggleSafeTrip","handleToggleShutout","Array","isArray","score","milleBornes","MilleBornes","milleBornesWrapper","MU_RESET_ALL","MU_ADD_SCORE","Trumps","mu","TrumpSelector","selectBox","htmlFor","trump","handleTrumpChanged","inputProps","Black","Blue","Green","Red","Yellow","One","Seven","Zero","Two","Three","Four","Five","Six","Eight","Nine","None","onTrumpChanged","PointsPerBid","getChiefTeamBonus","overTrump","bid","Math","SplitRanks","ScoreHandDialog","getDefaultState","prevProps","showDialog","sm","handleBidChanged","handleOverTrumpChanged","underTrump","handleUnderTrumpChanged","createPlayerRow","canSave","points","chief","vice","partner","newPoints","Object","assign","chiefTeamPoints","chiefTeamBidMade","playerCount","currentPoints","currentBid","getChiefTeamBidMade","missedBy","handleChief","handleVice","handlePartner","handlePointsChange","sum","StalemateDialog","lastBidder","highestBidders","createStalemateRow","handleUpdateStalemate","indexOf","included","filter","concat","handleLastBidder","handleHighestBidder","Mu","showStalemateDialog","handleScoreHand","buttonSpacing","handleStalemate","muWrapper","marginLeft","SPLIT_RESET_ALL","SPLIT_ADD_VALUE","SPLIT_REMOVE_VALUE","ValueMap","A","K","Q","J","10","9","8","7","6","5","4","3","2","Negative","calculateScore","createRow","split","Ten","justify","alignItems","row","handleIncrease","getRankValues","handleDecrease","rank","index","values","addValue","removeValue","selectedIndex","avatars","avatarClass","avatar","selectedAvatar","push","toString","style","marginRight","minWidth","fontWeight","fontSize","height","backgroundColor","main","contrastText","marginBottom","Split","splitWrapper","Main","m","exact","path","App","currentTheme","getTheme","selectedTheme","ThemeProvider","CssBaseline","initialState","Dark","middleware","persistConfig","storage","rootReducer","combineReducers","action","produce","draft","newTheme","splice","persistedReducer","persistReducer","store","createStore","thunk","applyMiddleware","data","persistor","persistStore","ReactDOM","storeData","loading","document","getElementById"],"mappings":"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","file":"static/js/main.46f83e53.chunk.js","sourcesContent":["export enum ThemeOptions {\r\n  Light,\r\n  Dark,\r\n}\r\n\r\nexport interface ISystemState {\r\n  selectedTheme: ThemeOptions;\r\n  names: string[];\r\n}\r\n\r\nexport const SYSTEM_CHANGE_THEME = 'SYSTEM_CHANGE_THEME';\r\nexport const SYSTEM_ADD_NAME = 'SYSTEM_ADD_NAME';\r\nexport const SYSTEM_REMOVE_NAME = 'SYSTEM_REMOVE_NAME';\r\n\r\nexport interface ISystemChangeThemeAction {\r\n  newTheme: ThemeOptions;\r\n  type: typeof SYSTEM_CHANGE_THEME;\r\n}\r\n\r\nexport interface ISystemAddNameAction {\r\n  name: string;\r\n  type: typeof SYSTEM_ADD_NAME;\r\n}\r\n\r\nexport interface ISystemRemoveNameAction {\r\n  name: string;\r\n  type: typeof SYSTEM_REMOVE_NAME;\r\n}\r\n\r\nexport type SystemActionTypes =\r\n  ISystemChangeThemeAction |\r\n  ISystemAddNameAction |\r\n  ISystemRemoveNameAction;\r\n","import { lightBlue, indigo } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeOptions } from './Store/System/Types';\r\nimport { PaletteType } from '@material-ui/core';\r\n\r\nconst lightTheme = {\r\n  palette: {\r\n    primary: indigo,\r\n    secondary: lightBlue,\r\n    type: 'light' as PaletteType,\r\n  },\r\n};\r\n\r\nconst darkTheme = {\r\n  palette: {\r\n    primary: indigo,\r\n    secondary: lightBlue,\r\n    type: 'dark' as PaletteType,\r\n  },\r\n};\r\n\r\nexport class Themes {\r\n  public static getTheme(option: ThemeOptions) {\r\n    switch (option) {\r\n      case ThemeOptions.Light:\r\n        return Themes.light;\r\n    }\r\n\r\n    return Themes.dark;\r\n  }\r\n\r\n  private static light = createMuiTheme(lightTheme);\r\n  private static dark = createMuiTheme(darkTheme);\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\r\n\r\ntype IAllHeaderProps =\r\n  RouteComponentProps<any>;\r\n\r\nclass Header extends React.Component<IAllHeaderProps, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <nav>\r\n          <Mui.AppBar position='static'>\r\n            <Mui.Tabs value={this.props.location.pathname} variant='scrollable' scrollButtons='on'>\r\n              <Mui.Tab value='/' label='Home' to='/' component={Link} />\r\n              <Mui.Tab value='/split' label='Split' to='/split' component={Link} />\r\n              <Mui.Tab value='/millebornes' label='Mille Bornes' to='/millebornes' component={Link} />\r\n              <Mui.Tab value='/mu' label='Mü' to='/mu' component={Link} />\r\n              <Mui.Tab value='/generic' label='Generic' to='/generic' component={Link} />\r\n              <Mui.Tab value='/about' label='About' to='/about' component={Link} />\r\n            </Mui.Tabs>\r\n          </Mui.AppBar>\r\n        </nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import * as Mui from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as system from '../../Store/System';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  chipWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface IFooterProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IFooterActions {\r\n  addName(name: string): void;\r\n  removeName(name: string): void;\r\n}\r\n\r\ntype IAllFooterProps =\r\n  IFooterProps &\r\n  IFooterActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IFooterState {\r\n  error: string;\r\n  newName: string;\r\n  showAddPlayerDialog: boolean;\r\n}\r\n\r\nclass Footer extends React.Component<IAllFooterProps, IFooterState> {\r\n  constructor(p: IAllFooterProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      error: '',\r\n      newName: '',\r\n      showAddPlayerDialog: false,\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.AppBar position='fixed' className={this.props.classes.appBar}>\r\n          <div className={this.props.classes.chipWrapper}>\r\n            <Mui.Chip icon={<AddIcon />} label='Add Player' variant='outlined' className={this.props.classes.chip} onClick={this.handleAdd} />\r\n            {this.props.names.map((name) => <Mui.Chip key={name} label={name} variant='outlined' className={this.props.classes.chip} onDelete={() => this.handleDelete(name)} />)}\r\n          </div>\r\n        </Mui.AppBar>\r\n\r\n        <Mui.Dialog open={this.state.showAddPlayerDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogContent>\r\n            <Mui.TextField\r\n              fullWidth={true}\r\n              required={true}\r\n              autoFocus={true}\r\n              value={this.state.newName}\r\n              onChange={this.handleNewNameChange}\r\n              onKeyPress={this.handleKeyPress}\r\n              label='Player or Team Name'\r\n            />\r\n            {(this.state.error.length !== 0) ? <Mui.FormHelperText error={true}>{this.state.error}</Mui.FormHelperText> : null}\r\n          </Mui.DialogContent>\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              disabled={this.state.error.length !== 0 || this.state.newName.length === 0}\r\n              onClick={this.handleAddName}\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleKeyPress(event: React.KeyboardEvent<HTMLInputElement>): void {\r\n    if (event.key === 'Enter') {\r\n      if (this.state.error.length === 0) {\r\n        this.handleAddName();\r\n      }\r\n\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private handleNewNameChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n    const newName: string = event.target.value.trim();\r\n\r\n    let error: string = '';\r\n    const existingProfile: string | undefined = this.props.names.find((profile) => profile.toLowerCase() === newName.toLowerCase());\r\n    if (existingProfile) {\r\n      error = 'Player or team already exists';\r\n    }\r\n\r\n    this.setState({\r\n      error,\r\n      newName: event.target.value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleAddName(): void {\r\n    const newName: string = this.state.newName.trim();\r\n\r\n    if (newName.length > 0) {\r\n      this.props.addName(newName);\r\n      this.setState({\r\n        newName: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showAddPlayerDialog: false,\r\n      newName: '',\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleAdd(): void {\r\n    this.setState({\r\n      showAddPlayerDialog: true,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDelete(name: string): void {\r\n    this.props.removeName(name);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IFooterProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IFooterActions => ({\r\n  addName: (name: string) => dispatch(system.addName(name)),\r\n  removeName: (name: string) => dispatch(system.removeName(name)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Footer));\r\n","import * as types from './Types';\r\n\r\nexport function changeTheme(newTheme: types.ThemeOptions): types.SystemActionTypes {\r\n  return {\r\n    newTheme,\r\n    type: types.SYSTEM_CHANGE_THEME,\r\n  };\r\n}\r\n\r\nexport function addName(name: string): types.SystemActionTypes {\r\n  return {\r\n    name,\r\n    type: types.SYSTEM_ADD_NAME,\r\n  };\r\n}\r\n\r\nexport function removeName(name: string): types.SystemActionTypes {\r\n  return {\r\n    name,\r\n    type: types.SYSTEM_REMOVE_NAME,\r\n  };\r\n}\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport Footer from '../Footer';\r\n\r\nclass Home extends React.Component<{}, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Typography>\r\n          This is the home page where we provide useful details.\r\n        </Mui.Typography>\r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\n\r\nclass About extends React.Component<{}, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <Mui.Typography>\r\n        This site was created by Shane DeSeranno, Donald Gill, and Lara Ramey to aid in scoring games.\r\n      </Mui.Typography>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","export interface IGenericState {\r\n  readonly scores: Record<string, number>;\r\n}\r\n\r\nexport const GENERIC_RESET_ALL = 'GENERIC_RESET_ALL';\r\nexport const GENERIC_ADD_SCORE = 'GENERIC_ADD_SCORE';\r\n\r\nexport interface IGenericResetAllAction {\r\n  type: typeof GENERIC_RESET_ALL;\r\n}\r\n\r\nexport interface IGenericAddScoreAction {\r\n  name: string;\r\n  value: number;\r\n  type: typeof GENERIC_ADD_SCORE;\r\n}\r\n\r\nexport type GenericActionTypes =\r\n  IGenericResetAllAction |\r\n  IGenericAddScoreAction;\r\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as generic from '../../Store/Generic';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 170,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n  },\r\n  scoreButton: {\r\n    margin: theme.spacing(1),\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, number>;\r\n}\r\n\r\ninterface IScoreCardActions {\r\n  addScore(name: string, value: number): void;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  IScoreCardActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IScoreCardState {\r\n  showScoreDialog: boolean;\r\n  value: string;\r\n}\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, IScoreCardState> {\r\n  constructor(p: IAllScoreCardProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showScoreDialog: false,\r\n      value: '',\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const myScore: number = this.props.scores[this.props.name] ? this.props.scores[this.props.name] : 0;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n          <Mui.Typography variant='h5'>{this.props.name}: {myScore}</Mui.Typography>\r\n          <Mui.Divider />\r\n          <Mui.Button className={this.props.classes.scoreButton} color='primary' variant='contained' onClick={this.handleScoreRound}>Add Score</Mui.Button>\r\n        </Mui.Paper>\r\n\r\n        <Mui.Dialog open={this.state.showScoreDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogTitle>\r\n            Scoring for: {this.props.name}\r\n          </Mui.DialogTitle>\r\n\r\n          <Mui.Divider />\r\n\r\n          <Mui.DialogContent>\r\n            <Mui.TextField\r\n              value={this.state.value}\r\n              type='number'\r\n              onChange={this.handleChange}\r\n              label='Points'\r\n              onKeyPress={this.handleKeyPress}\r\n              fullWidth={true}\r\n              autoFocus={true}\r\n            />\r\n          </Mui.DialogContent>\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              onClick={this.handleUpdateScore}\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleKeyPress(event: React.KeyboardEvent<HTMLInputElement>): void {\r\n    if (event.key === 'Enter') {\r\n      this.handleUpdateScore();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private handleChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n    this.setState({\r\n      value: event.target.value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showScoreDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleScoreRound(): void {\r\n    this.setState({\r\n      showScoreDialog: true,\r\n      value: '',\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateScore(): void {\r\n    const value = parseInt(this.state.value, 10);\r\n    console.log(value);\r\n    if (!isNaN(value)) {\r\n      this.props.addScore(this.props.name, value);\r\n    }\r\n\r\n    this.setState({\r\n      showScoreDialog: false,\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.generic.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreCardActions => ({\r\n  addScore: (name: string, value: number) => dispatch(generic.addScore(name, value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as types from './Types';\r\n\r\nexport function resetAll(): types.GenericActionTypes {\r\n  return {\r\n    type: types.GENERIC_RESET_ALL,\r\n  };\r\n}\r\n\r\nexport function addScore(name: string, value: number): types.GenericActionTypes {\r\n  return {\r\n    name,\r\n    value,\r\n    type: types.GENERIC_ADD_SCORE,\r\n  };\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as generic from '../../Store/Generic';\r\nimport ScoreCard from './ScoreCard';\r\nimport { bind } from 'decko';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  genericWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface IGenericProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IGenericActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllGenericProps =\r\n  IGenericProps &\r\n  IGenericActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass Generic extends React.Component<IAllGenericProps, {}> {\r\n  public render(): JSX.Element {\r\n    if (this.props.names.length === 0) {\r\n      return (\r\n        <Mui.Typography>\r\n          Go back to Home and add some players first!\r\n        </Mui.Typography>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.genericWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.props.reset();\r\n  }\r\n}\r\nconst mapStateToProps = (state: AppState): IGenericProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IGenericActions => ({\r\n  reset: () => dispatch(generic.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Generic));\r\n","export interface IMilleBornesState {\r\n  readonly scores: Record<string, number>;\r\n}\r\n\r\nexport const MILLE_BORNES_RESET_ALL = 'MILLE_BORNES_RESET_ALL';\r\nexport const MILLE_BORNES_ADD_SCORE = 'MILLE_BORNES_ADD_SCORE';\r\n\r\nexport interface IMilleBornesResetAllAction {\r\n  type: typeof MILLE_BORNES_RESET_ALL;\r\n}\r\n\r\nexport interface IMilleBornesAddScoreAction {\r\n  name: string;\r\n  value: number;\r\n  type: typeof MILLE_BORNES_ADD_SCORE;\r\n}\r\n\r\nexport type MilleBornesActionTypes =\r\n  IMilleBornesResetAllAction |\r\n  IMilleBornesAddScoreAction;\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  marginTop: {\r\n    marginTop: 10,\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    verticalAlign: 'middle',\r\n  },\r\n  hidden: {\r\n    display: 'none',\r\n  },\r\n});\r\n\r\ninterface ISafetyRowProps {\r\n  name: string;\r\n  played: boolean;\r\n  coupFourre: boolean;\r\n  hideCoupFourre?: boolean;\r\n  togglePlayed(): void;\r\n  toggleCoupFourre(): void;\r\n}\r\n\r\ntype IAllSafetyRowProps =\r\n  ISafetyRowProps &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass SafetyRow extends React.Component<IAllSafetyRowProps, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Grid item={true} xs={6} className={this.props.classes.right}>\r\n          <Mui.Typography className={this.props.classes.marginTop}>{this.props.name}:</Mui.Typography>\r\n        </Mui.Grid>\r\n        <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Checkbox checked={this.props.played} onChange={this.props.togglePlayed} /></Mui.Grid>\r\n        <Mui.Grid className={this.props.hideCoupFourre ? this.props.classes.hidden : this.props.classes.center} item={true} xs={3}><Mui.Checkbox disabled={!this.props.played} checked={this.props.coupFourre} onChange={this.props.toggleCoupFourre} /></Mui.Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(localStyles)(SafetyRow);\r\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as milleBornes from '../../Store/MilleBornes';\r\nimport SafetyRow from './SafetyRow';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  marginTop: {\r\n    marginTop: 10,\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    verticalAlign: 'middle',\r\n  },\r\n  scoreButton: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 170,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, number>;\r\n}\r\n\r\ninterface IScoreCardActions {\r\n  addScore(name: string, value: number): void;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  IScoreCardActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IScoreCardState {\r\n  showScoreDialog: boolean;\r\n  distance: number;\r\n  rightOfWayPlayed: boolean;\r\n  rightOfWayPlayedCF: boolean;\r\n  drivingAcePlayed: boolean;\r\n  drivingAcePlayedCF: boolean;\r\n  fuelTankPlayed: boolean;\r\n  fuelTankPlayedCF: boolean;\r\n  punctureProofPlayed: boolean;\r\n  punctureProofPlayedCF: boolean;\r\n  delayedAction: boolean;\r\n  safeTrip: boolean;\r\n  extension: boolean;\r\n  shutout: boolean;\r\n}\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, IScoreCardState> {\r\n  constructor(p: IAllScoreCardProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showScoreDialog: false,\r\n      distance: 0,\r\n      rightOfWayPlayed: false,\r\n      rightOfWayPlayedCF: false,\r\n      drivingAcePlayed: false,\r\n      drivingAcePlayedCF: false,\r\n      fuelTankPlayed: false,\r\n      fuelTankPlayedCF: false,\r\n      punctureProofPlayed: false,\r\n      punctureProofPlayedCF: false,\r\n      delayedAction: false,\r\n      safeTrip: false,\r\n      extension: false,\r\n      shutout: false,\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n          <Mui.Typography variant='h5'>{this.props.name}: {this.getScore()}</Mui.Typography>\r\n          <Mui.Divider />\r\n          <Mui.Button className={this.props.classes.scoreButton} color='primary' variant='contained' onClick={this.handleScoreRound}>Add Score</Mui.Button>\r\n        </Mui.Paper>\r\n\r\n        <Mui.Dialog open={this.state.showScoreDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogTitle>\r\n            Scoring for: {this.props.name}\r\n          </Mui.DialogTitle>\r\n\r\n          <Mui.Divider />\r\n\r\n          <Mui.DialogContent>\r\n            <Mui.Typography id='distance-slider' gutterBottom={true}>Distance</Mui.Typography>\r\n            <Mui.Slider\r\n              aria-labelledby='distance-slider'\r\n              valueLabelDisplay='on'\r\n              step={25}\r\n              min={0}\r\n              max={1000}\r\n              marks={true}\r\n              value={this.state.distance}\r\n              onChange={this.handleDistanceChanged}\r\n            />\r\n\r\n            <Mui.Grid container={true}>\r\n              <Mui.Grid item={true} xs={6} className={this.props.classes.right}></Mui.Grid>\r\n              <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Typography>Played</Mui.Typography></Mui.Grid>\r\n              <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Typography>Coup-fourré</Mui.Typography></Mui.Grid>\r\n\r\n              <SafetyRow name='Right of Way' hideCoupFourre={true} played={this.state.rightOfWayPlayed} coupFourre={this.state.rightOfWayPlayedCF} togglePlayed={this.handleToggleRightOfWay} toggleCoupFourre={this.handleToggleRightOfWayCF} />\r\n              <SafetyRow name='Driving Ace' played={this.state.drivingAcePlayed} coupFourre={this.state.drivingAcePlayedCF} togglePlayed={this.handleToggleDrivingAce} toggleCoupFourre={this.handleToggleDrivingAceCF} />\r\n              <SafetyRow name='Extra Tank' played={this.state.fuelTankPlayed} coupFourre={this.state.fuelTankPlayedCF} togglePlayed={this.handleToggleFuelTank} toggleCoupFourre={this.handleToggleFuelTankCF} />\r\n              <SafetyRow name='Puncture Proof' played={this.state.punctureProofPlayed} coupFourre={this.state.punctureProofPlayedCF} togglePlayed={this.handleTogglePunctureProof} toggleCoupFourre={this.handleTogglePunctureProofCF} />\r\n\r\n              <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Delayed Action:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox disabled={this.state.distance < 1000} checked={this.state.delayedAction} onChange={this.handleToggleDelayedAction} /></Mui.Grid>\r\n\r\n              <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Safe Trip:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox disabled={this.state.distance < 1000} checked={this.state.safeTrip} onChange={this.handleToggleSafeTrip} /></Mui.Grid>\r\n\r\n              {/* <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Extension:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox checked={this.state.extension} onChange={this.handleToggleExtension} /></Mui.Grid> */}\r\n\r\n              <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Shutout:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox disabled={this.state.distance < 1000} checked={this.state.shutout} onChange={this.handleToggleShutout} /></Mui.Grid>\r\n            </Mui.Grid>\r\n          </Mui.DialogContent>\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              onClick={this.handleUpdateScore}\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleDistanceChanged(event: React.ChangeEvent<{}>, value: number | number[]): void {\r\n    if (Array.isArray(value)) {\r\n      value = value[value.length - 1];\r\n    }\r\n\r\n    this.setState({\r\n      distance: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleDelayedAction(): void {\r\n    this.setState({\r\n      delayedAction: !this.state.delayedAction,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleShutout(): void {\r\n    this.setState({\r\n      shutout: !this.state.shutout,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleSafeTrip(): void {\r\n    this.setState({\r\n      safeTrip: !this.state.safeTrip,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleRightOfWay(): void {\r\n    this.setState({\r\n      rightOfWayPlayed: !this.state.rightOfWayPlayed,\r\n      rightOfWayPlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleRightOfWayCF(): void {\r\n    this.setState({\r\n      rightOfWayPlayedCF: !this.state.rightOfWayPlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleDrivingAce(): void {\r\n    this.setState({\r\n      drivingAcePlayed: !this.state.drivingAcePlayed,\r\n      drivingAcePlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleDrivingAceCF(): void {\r\n    this.setState({\r\n      drivingAcePlayedCF: !this.state.drivingAcePlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleFuelTank(): void {\r\n    this.setState({\r\n      fuelTankPlayed: !this.state.fuelTankPlayed,\r\n      fuelTankPlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleFuelTankCF(): void {\r\n    this.setState({\r\n      fuelTankPlayedCF: !this.state.fuelTankPlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleTogglePunctureProof(): void {\r\n    this.setState({\r\n      punctureProofPlayed: !this.state.punctureProofPlayed,\r\n      punctureProofPlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleTogglePunctureProofCF(): void {\r\n    this.setState({\r\n      punctureProofPlayedCF: !this.state.punctureProofPlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showScoreDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateScore(): void {\r\n    let score: number = 0;\r\n\r\n    score += this.state.distance;\r\n\r\n    if (this.state.drivingAcePlayed) {\r\n      score += 100;\r\n      if (this.state.drivingAcePlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.fuelTankPlayed) {\r\n      score += 100;\r\n      if (this.state.fuelTankPlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.punctureProofPlayed) {\r\n      score += 100;\r\n      if (this.state.punctureProofPlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.rightOfWayPlayed) {\r\n      score += 100;\r\n      if (this.state.rightOfWayPlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.drivingAcePlayed && this.state.fuelTankPlayed && this.state.punctureProofPlayed && this.state.rightOfWayPlayed) {\r\n      score += 300;\r\n    }\r\n\r\n    if (this.state.distance === 1000) {\r\n      score += 400;\r\n\r\n      if (this.state.shutout) {\r\n        score += 500;\r\n      }\r\n\r\n      if (this.state.safeTrip) {\r\n        score += 300;\r\n      }\r\n\r\n      if (this.state.extension) {\r\n        score += 200;\r\n      }\r\n\r\n      if (this.state.delayedAction) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    this.props.addScore(this.props.name, score);\r\n    this.setState({\r\n      showScoreDialog: false,\r\n      distance: 0,\r\n      rightOfWayPlayed: false,\r\n      rightOfWayPlayedCF: false,\r\n      drivingAcePlayed: false,\r\n      drivingAcePlayedCF: false,\r\n      fuelTankPlayed: false,\r\n      fuelTankPlayedCF: false,\r\n      punctureProofPlayed: false,\r\n      punctureProofPlayedCF: false,\r\n      delayedAction: false,\r\n      safeTrip: false,\r\n      extension: false,\r\n      shutout: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private getScore(): number {\r\n    const score = this.props.scores[this.props.name];\r\n    return score ? score : 0;\r\n  }\r\n\r\n  @bind\r\n  private handleScoreRound(): void {\r\n    this.setState({\r\n      showScoreDialog: true,\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.milleBornes.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreCardActions => ({\r\n  addScore: (name: string, value: number) => dispatch(milleBornes.addScore(name, value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as types from './Types';\r\n\r\nexport function resetAll(): types.MilleBornesActionTypes {\r\n  return {\r\n    type: types.MILLE_BORNES_RESET_ALL,\r\n  };\r\n}\r\n\r\nexport function addScore(name: string, value: number): types.MilleBornesActionTypes {\r\n  return {\r\n    name,\r\n    value,\r\n    type: types.MILLE_BORNES_ADD_SCORE,\r\n  };\r\n}\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as milleBornes from '../../Store/MilleBornes';\r\nimport ScoreCard from './ScoreCard';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  milleBornesWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface IMilleBornesProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IMilleBornesActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllMilleBornesProps =\r\n  IMilleBornesProps &\r\n  IMilleBornesActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass MilleBornes extends React.Component<IAllMilleBornesProps, {}> {\r\n  public render(): JSX.Element {\r\n    if (this.props.names.length === 0) {\r\n      return (\r\n        <Mui.Typography>\r\n          Go back to Home and add some players first!\r\n        </Mui.Typography>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.milleBornesWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.props.reset();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IMilleBornesProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IMilleBornesActions => ({\r\n  reset: () => dispatch(milleBornes.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(MilleBornes));\r\n","export interface IMuState {\r\n  readonly scores: Record<string, number>;\r\n}\r\n\r\nexport const MU_RESET_ALL = 'MU_RESET_ALL';\r\nexport const MU_ADD_SCORE = 'MU_ADD_SCORE';\r\n\r\nexport interface IMuResetAllAction {\r\n  type: typeof MU_RESET_ALL;\r\n}\r\n\r\nexport interface IMuAddScoreAction {\r\n  name: string;\r\n  value: number;\r\n  type: typeof MU_ADD_SCORE;\r\n}\r\n\r\nexport type MuActionTypes =\r\n  IMuResetAllAction |\r\n  IMuAddScoreAction;\r\n","import * as types from './Types';\r\n\r\nexport function resetAll(): types.MuActionTypes {\r\n  return {\r\n    type: types.MU_RESET_ALL,\r\n  };\r\n}\r\n\r\nexport function addScore(name: string, value: number): types.MuActionTypes {\r\n  return {\r\n    name,\r\n    value,\r\n    type: types.MU_ADD_SCORE,\r\n  };\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 170,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, number>;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, {}> {\r\n  public render(): JSX.Element {\r\n    const myScore: number = this.props.scores[this.props.name] ? this.props.scores[this.props.name] : 0;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n          <Mui.Typography variant='h5'>{this.props.name}: {myScore}</Mui.Typography>\r\n        </Mui.Paper>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.mu.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): {} => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","enum Trumps {\r\n  Black,\r\n  Blue,\r\n  Green,\r\n  Red,\r\n  Yellow,\r\n  One,\r\n  Seven,\r\n  Zero,\r\n  Two,\r\n  Three,\r\n  Four,\r\n  Five,\r\n  Six,\r\n  Eight,\r\n  Nine,\r\n  None,\r\n}\r\n\r\nexport default Trumps;\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { bind } from 'decko';\r\n\r\nimport Trumps from './Trumps';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  selectBox: {\r\n    width: 180,\r\n  },\r\n});\r\n\r\ninterface ITrumpSelectorProps {\r\n  label: string;\r\n  trump: Trumps;\r\n  onTrumpChanged(value: Trumps): void;\r\n}\r\n\r\ntype IAllTrumpSelectorProps =\r\n  ITrumpSelectorProps &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass TrumpSelector extends React.Component<IAllTrumpSelectorProps, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <Mui.FormControl variant='filled' className={this.props.classes.selectBox}>\r\n        <Mui.InputLabel htmlFor='trump'>\r\n          {this.props.label}\r\n        </Mui.InputLabel>\r\n        <Mui.Select\r\n          value={this.props.trump}\r\n          onChange={this.handleTrumpChanged}\r\n          inputProps={{\r\n            name: 'trump',\r\n            id: 'trump',\r\n          }}\r\n        >\r\n          <Mui.MenuItem value={Trumps.Black}>Black</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Blue}>Blue</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Green}>Green</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Red}>Red</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Yellow}>Yellow</Mui.MenuItem>\r\n          <Mui.Divider />\r\n          <Mui.MenuItem value={Trumps.One}>1</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Seven}>7</Mui.MenuItem>\r\n          <Mui.Divider />\r\n          <Mui.MenuItem value={Trumps.Zero}>0</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Two}>2</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Three}>3</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Four}>4</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Five}>5</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Six}>6</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Eight}>8</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Nine}>9</Mui.MenuItem>\r\n          <Mui.Divider />\r\n          <Mui.MenuItem value={Trumps.None}>No Trump</Mui.MenuItem>\r\n        </Mui.Select>\r\n      </Mui.FormControl>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleTrumpChanged(event: React.ChangeEvent<{ name?: string; value: unknown }>): void {\r\n    this.props.onTrumpChanged(event.target.value as Trumps);\r\n  }\r\n}\r\n\r\nexport default Mui.withStyles(localStyles)(TrumpSelector);\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { bind } from 'decko';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as mu from '../../Store/Mu';\r\nimport Trumps from './Trumps';\r\nimport TrumpSelector from './TrumpSelector';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  center: {\r\n    marginTop: 8,\r\n  },\r\n});\r\n\r\nconst PointsPerBid = [0, 0, 0, 0, 2, 3, 4];\r\nfunction getChiefTeamBidMade(playerCount: number, points: number): number {\r\n  let currentPoints = 62 - playerCount; // Hacky, but works, as 4 player = 58, 5 player = 57, 6 player = 56\r\n  let currentBid = 60 / playerCount;\r\n  while (currentPoints > points) {\r\n    currentBid--;\r\n    currentPoints -= PointsPerBid[playerCount];\r\n  }\r\n\r\n  return Math.max(0, currentBid);\r\n}\r\n\r\nfunction getChiefTeamBonus(overTrump: Trumps, bid: number): number {\r\n  switch (overTrump) {\r\n    case Trumps.Black:\r\n    case Trumps.Blue:\r\n    case Trumps.Green:\r\n    case Trumps.Red:\r\n    case Trumps.Yellow:\r\n      return 10 * Math.min(10, bid);\r\n\r\n    case Trumps.One:\r\n    case Trumps.Seven:\r\n      return 10 + 10 * Math.min(9, bid);\r\n\r\n    case Trumps.None:\r\n      return 30 + 10 * Math.min(7, bid);\r\n  }\r\n\r\n  // 0, 2, 3, 4, 5, 6, 8, 9\r\n  return 20 + 10 * Math.min(6, bid);\r\n}\r\n\r\ninterface IScoreHandDialogMappedProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IScoreHandDialogProps {\r\n  showDialog: boolean;\r\n  onClose(): void;\r\n}\r\n\r\ninterface IScoreHandDialogActions {\r\n  addScore(name: string, value: number): void;\r\n}\r\n\r\ntype IAllScoreHandDialogProps =\r\n  IScoreHandDialogMappedProps &\r\n  IScoreHandDialogProps &\r\n  IScoreHandDialogActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IScoreHandDialogState {\r\n  bid: number;\r\n  overTrump: Trumps;\r\n  underTrump: Trumps;\r\n  chief: string;\r\n  vice: string;\r\n  partner: string;\r\n  points: Record<string, string>;\r\n}\r\n\r\nclass ScoreHandDialog extends React.Component<IAllScoreHandDialogProps, IScoreHandDialogState> {\r\n  constructor(p: IAllScoreHandDialogProps) {\r\n    super(p);\r\n\r\n    this.state = this.getDefaultState();\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IAllScoreHandDialogProps): void {\r\n    if (!prevProps.showDialog && this.props.showDialog) {\r\n      this.setState(this.getDefaultState());\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <Mui.Dialog open={this.props.showDialog} maxWidth='sm' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogContent>\r\n            <Mui.Grid container={true} spacing={2}>\r\n              <Mui.Grid item={true} sm={4} xs={12}>\r\n                <Mui.Typography>Bid</Mui.Typography>\r\n                <Mui.Slider\r\n                  value={this.state.bid}\r\n                  onChange={this.handleBidChanged}\r\n                  min={1}\r\n                  max={60 / this.props.names.length}\r\n                  step={1}\r\n                  valueLabelDisplay='on'\r\n                  marks={true}\r\n                />\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} sm={4} xs={12}>\r\n                <TrumpSelector label='Over Trump' trump={this.state.overTrump} onTrumpChanged={this.handleOverTrumpChanged}/>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} sm={4} xs={12}>\r\n              <TrumpSelector label='Under Trump' trump={this.state.underTrump} onTrumpChanged={this.handleUnderTrumpChanged}/>\r\n              </Mui.Grid>\r\n\r\n              <Mui.Grid item={true} xs={2}>Name</Mui.Grid>\r\n              <Mui.Grid item={true} xs={2}>Chief</Mui.Grid>\r\n              <Mui.Grid item={true} xs={2}>Vice</Mui.Grid>\r\n              <Mui.Grid item={true} xs={2}>Partner</Mui.Grid>\r\n              <Mui.Grid item={true} xs={4}></Mui.Grid>\r\n              <Mui.Grid item={true} xs={12}><Mui.Divider /></Mui.Grid>\r\n\r\n              {this.props.names.map((name) => this.createPlayerRow(name))}\r\n            </Mui.Grid>\r\n          </Mui.DialogContent>\r\n\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              onClick={this.handleUpdateScore}\r\n              variant='contained'\r\n              color='primary'\r\n              disabled={!this.canSave()}\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private getDefaultState(): IScoreHandDialogState {\r\n    const points: Record<string, string> = {};\r\n    for (const name of this.props.names) {\r\n      points[name] = '0';\r\n    }\r\n\r\n    return {\r\n      bid: 1,\r\n      overTrump: Trumps.Black,\r\n      underTrump: Trumps.Blue,\r\n      chief: '',\r\n      vice: '',\r\n      partner: '',\r\n      points,\r\n    };\r\n  }\r\n\r\n  @bind\r\n  private handlePointsChange(name: string, value: string): void {\r\n    const newPoints = Object.assign({}, this.state.points);\r\n    newPoints[name] = value;\r\n    this.setState({\r\n      points: newPoints,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleChief(name: string): void {\r\n    this.setState({\r\n      chief: name,\r\n      vice: (this.state.vice === name) ? '' : this.state.vice,\r\n      partner: (this.state.partner === name) ? '' : this.state.partner,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleVice(name: string): void {\r\n    this.setState({\r\n      chief: (this.state.chief === name) ? '' : this.state.chief,\r\n      vice: name,\r\n      partner: (this.state.partner === name) ? '' : this.state.partner,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handlePartner(name: string): void {\r\n    this.setState({\r\n      chief: (this.state.chief === name) ? '' : this.state.chief,\r\n      vice: (this.state.vice === name) ? '' : this.state.vice,\r\n      partner: name,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleOverTrumpChanged(value: Trumps): void {\r\n    this.setState({\r\n      overTrump: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUnderTrumpChanged(value: Trumps): void {\r\n    this.setState({\r\n      underTrump: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateScore(): void {\r\n    // First check to see if the chief team made it\r\n    const chiefTeamPoints = parseInt(this.state.points[this.state.chief], 10) + parseInt(this.state.points[this.state.partner], 10);\r\n    const chiefTeamBidMade = getChiefTeamBidMade(this.props.names.length, chiefTeamPoints);\r\n\r\n    if (chiefTeamBidMade >= this.state.bid) {\r\n      // Chief made it!\r\n      for (const name of this.props.names) {\r\n        let score: number = parseInt(this.state.points[name], 10);\r\n        if (name === this.state.chief || name === this.state.partner) {\r\n          score += getChiefTeamBonus(this.state.overTrump, this.state.bid);\r\n        }\r\n\r\n        this.props.addScore(name, score);\r\n      }\r\n    } else {\r\n      // Chief missed it!\r\n      const missedBy = this.state.bid - chiefTeamBidMade;\r\n      for (const name of this.props.names) {\r\n        let score: number = parseInt(this.state.points[name], 10);\r\n        if (name === this.state.chief) {\r\n          score -= 10 * missedBy;\r\n        } else if (name !== this.state.partner) {\r\n          score += 5 * missedBy;\r\n        }\r\n\r\n        this.props.addScore(name, score);\r\n      }\r\n    }\r\n\r\n    this.props.onClose();\r\n  }\r\n\r\n  @bind\r\n  private createPlayerRow(name: string): JSX.Element {\r\n    return (\r\n      <React.Fragment key={name}>\r\n        <Mui.Grid className={this.props.classes.center} item={true} xs={2}>{name}</Mui.Grid>\r\n        <Mui.Grid item={true} xs={2}><Mui.Checkbox onClick={() => this.handleChief(name)} checked={this.state.chief === name} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={2}><Mui.Checkbox onClick={() => this.handleVice(name)} checked={this.state.vice === name} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={2}><Mui.Checkbox onClick={() => this.handlePartner(name)} checked={this.state.partner === name} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={4}>\r\n          <Mui.TextField\r\n            type='number'\r\n            value={this.state.points[name]}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => this.handlePointsChange(name, event.target.value)}\r\n            label='Points'\r\n            fullWidth={true}\r\n          />\r\n        </Mui.Grid>\r\n        <Mui.Grid item={true} xs={12}><Mui.Divider /></Mui.Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private canSave(): boolean {\r\n    if (this.state.chief.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    if (this.state.partner.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    let sum: number = 0;\r\n    for (const name of this.props.names) {\r\n      sum += parseInt(this.state.points[name], 10);\r\n    }\r\n\r\n    if (sum !== 60) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  @bind\r\n  private handleBidChanged(event: React.ChangeEvent<{}>, value: number | number[]): void {\r\n    if (Array.isArray(value)) {\r\n      value = value[value.length - 1];\r\n    }\r\n\r\n    this.setState({\r\n      bid: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.props.onClose();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreHandDialogMappedProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreHandDialogActions => ({\r\n  addScore: (name: string, value: number) => dispatch(mu.addScore(name, value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreHandDialog));\r\n","export enum SplitRanks {\r\n  A = 'A',\r\n  K = 'K',\r\n  Q = 'Q',\r\n  J = 'J',\r\n  Ten = '10',\r\n  Nine = '9',\r\n  Eight = '8',\r\n  Seven = '7',\r\n  Six = '6',\r\n  Five = '5',\r\n  Four = '4',\r\n  Three = '3',\r\n  Two = '2',\r\n\r\n  Negative = 'Negative',\r\n}\r\n\r\nexport interface ISplitScore {\r\n  readonly values: Record<SplitRanks, number>;\r\n}\r\n\r\nexport interface ISplitState {\r\n  readonly scores: Record<string, ISplitScore>;\r\n}\r\n\r\nexport const SPLIT_RESET_ALL = 'SPLIT_RESET_ALL';\r\nexport const SPLIT_ADD_VALUE = 'SPLIT_ADD_VALUE';\r\nexport const SPLIT_REMOVE_VALUE = 'SPLIT_REMOVE_VALUE';\r\n\r\nexport interface ISplitAddValueAction {\r\n  name: string;\r\n  rank: SplitRanks;\r\n  type: typeof SPLIT_ADD_VALUE;\r\n}\r\n\r\nexport interface ISplitRemoveValueAction {\r\n  name: string;\r\n  rank: SplitRanks;\r\n  type: typeof SPLIT_REMOVE_VALUE;\r\n}\r\n\r\nexport interface ISplitResetAllAction {\r\n  type: typeof SPLIT_RESET_ALL;\r\n}\r\n\r\nexport type SplitActionTypes =\r\n  ISplitAddValueAction |\r\n  ISplitRemoveValueAction |\r\n  ISplitResetAllAction;\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { bind } from 'decko';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as mu from '../../Store/Mu';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  center: {\r\n    marginTop: 8,\r\n  },\r\n});\r\n\r\ninterface IStalemateDialogMappedProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IStalemateDialogProps {\r\n  showDialog: boolean;\r\n  onClose(): void;\r\n}\r\n\r\ninterface IStalemateDialogActions {\r\n  addScore(name: string, value: number): void;\r\n}\r\n\r\ntype IAllStalemateDialogProps =\r\n  IStalemateDialogMappedProps &\r\n  IStalemateDialogProps &\r\n  IStalemateDialogActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IStalemateDialogState {\r\n  bid: number;\r\n  lastBidder: string;\r\n  highestBidders: string[];\r\n}\r\n\r\nclass StalemateDialog extends React.Component<IAllStalemateDialogProps, IStalemateDialogState> {\r\n  constructor(p: IAllStalemateDialogProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      bid: 1,\r\n      lastBidder: '',\r\n      highestBidders: [],\r\n    };\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IAllStalemateDialogProps): void {\r\n    if (!prevProps.showDialog && this.props.showDialog) {\r\n      this.setState({\r\n        bid: 1,\r\n        lastBidder: '',\r\n        highestBidders: [],\r\n      });\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <Mui.Dialog open={this.props.showDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n        <Mui.DialogContent>\r\n          <Mui.Grid container={true}>\r\n            <Mui.Grid item={true} xs={12}>\r\n              <Mui.Typography>Bid</Mui.Typography>\r\n              <Mui.Slider\r\n                value={this.state.bid}\r\n                onChange={this.handleBidChanged}\r\n                min={1}\r\n                max={60 / this.props.names.length}\r\n                step={1}\r\n                valueLabelDisplay='on'\r\n                marks={true}\r\n              />\r\n            </Mui.Grid>\r\n\r\n            <Mui.Grid item={true} xs={4}>Name</Mui.Grid>\r\n            <Mui.Grid item={true} xs={4}>Last Bidder</Mui.Grid>\r\n            <Mui.Grid item={true} xs={4}>Highest Bidder</Mui.Grid>\r\n            <Mui.Grid item={true} xs={12}><Mui.Divider /></Mui.Grid>\r\n\r\n            {this.props.names.map((name) => this.createStalemateRow(name))}\r\n          </Mui.Grid>\r\n        </Mui.DialogContent>\r\n\r\n        <Mui.DialogActions>\r\n          <Mui.Button\r\n            variant='contained'\r\n            color='primary'\r\n            onClick={this.handleDialogClose}\r\n          >\r\n            Cancel\r\n            </Mui.Button>\r\n\r\n          <Mui.Button\r\n            onClick={this.handleUpdateStalemate}\r\n            variant='contained'\r\n            color='primary'\r\n            disabled={!this.canSave()}\r\n          >\r\n            Add\r\n            </Mui.Button>\r\n        </Mui.DialogActions>\r\n      </Mui.Dialog>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateStalemate(): void {\r\n    for (const name of this.props.names) {\r\n      if (this.state.lastBidder === name) {\r\n        this.props.addScore(name, -10 * this.state.bid);\r\n      } else if (this.state.highestBidders.indexOf(name) > -1) {\r\n        this.props.addScore(name, 5 * this.state.bid);\r\n      }\r\n    }\r\n\r\n    this.props.onClose();\r\n  }\r\n\r\n  @bind\r\n  private handleLastBidder(name: string): void {\r\n    const included = this.state.highestBidders.indexOf(name) !== -1;\r\n\r\n    this.setState({\r\n      lastBidder: name,\r\n      highestBidders: included ? this.state.highestBidders.filter((item) => item !== name) : this.state.highestBidders,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleHighestBidder(name: string): void {\r\n    const included = this.state.highestBidders.indexOf(name) !== -1;\r\n    if (included) {\r\n      this.setState({\r\n        highestBidders: this.state.highestBidders.filter((item) => item !== name),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        lastBidder: name === this.state.lastBidder ? '' : this.state.lastBidder,\r\n        highestBidders: this.state.highestBidders.concat(name),\r\n      });\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private createStalemateRow(name: string): JSX.Element {\r\n    return (\r\n      <React.Fragment key={name}>\r\n        <Mui.Grid className={this.props.classes.center} item={true} xs={4}>{name}</Mui.Grid>\r\n        <Mui.Grid item={true} xs={4}><Mui.Checkbox onClick={() => this.handleLastBidder(name)} checked={this.state.lastBidder === name} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={4}><Mui.Checkbox onClick={() => this.handleHighestBidder(name)} checked={this.state.highestBidders.indexOf(name) !== -1} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={12}><Mui.Divider /></Mui.Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private canSave(): boolean {\r\n    return this.state.highestBidders.length > 0 && this.state.lastBidder.length > 0;\r\n  }\r\n\r\n  @bind\r\n  private handleBidChanged(event: React.ChangeEvent<{}>, value: number | number[]): void {\r\n    if (Array.isArray(value)) {\r\n      value = value[value.length - 1];\r\n    }\r\n\r\n    this.setState({\r\n      bid: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.props.onClose();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IStalemateDialogMappedProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IStalemateDialogActions => ({\r\n  addScore: (name: string, value: number) => dispatch(mu.addScore(name, value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(StalemateDialog));\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { bind } from 'decko';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as mu from '../../Store/Mu';\r\nimport ScoreCard from './ScoreCard';\r\nimport ScoreHandDialog from './ScoreHandDialog';\r\nimport StalemateDialog from './StalemateDialog';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  muWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  buttonSpacing: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n});\r\n\r\ninterface IMuProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IMuActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllMuProps =\r\n  IMuProps &\r\n  IMuActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IMuState {\r\n  showStalemateDialog: boolean;\r\n  showScoreDialog: boolean;\r\n}\r\n\r\nclass Mu extends React.Component<IAllMuProps, IMuState> {\r\n  constructor(p: IAllMuProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showScoreDialog: false,\r\n      showStalemateDialog: false,\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    if (this.props.names.length < 4) {\r\n      return (\r\n        <Mui.Typography>\r\n          This game requires at least 4 players, go Home and add some more players.\r\n        </Mui.Typography>\r\n      );\r\n    }\r\n\r\n    if (this.props.names.length > 6) {\r\n      return (\r\n        <Mui.Typography>\r\n          This game doesn't support more than 6 players, go Home and remove some players.\r\n        </Mui.Typography>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleScoreHand}>Score Hand</Mui.Button>\r\n        <Mui.Button className={this.props.classes.buttonSpacing} color='primary' variant='contained' onClick={this.handleStalemate}>Stalemate</Mui.Button>\r\n        <div className={this.props.classes.muWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n\r\n        <ScoreHandDialog onClose={this.handleDialogClose} showDialog={this.state.showScoreDialog} />\r\n        <StalemateDialog onClose={this.handleDialogClose} showDialog={this.state.showStalemateDialog} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showScoreDialog: false,\r\n      showStalemateDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleScoreHand(): void {\r\n    this.setState({\r\n      showScoreDialog: true,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleStalemate(): void {\r\n    this.setState({\r\n      showStalemateDialog: true,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.props.reset();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IMuProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IMuActions => ({\r\n  reset: () => dispatch(mu.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Mu));\r\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as split from '../../Store/Split';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 360,\r\n    minWidth: 360,\r\n    padding: theme.spacing(1),\r\n  },\r\n  avatar: {\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    height: 30,\r\n    width: 30,\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  selectedAvatar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText,\r\n  },\r\n  row: {\r\n    marginTop: theme.spacing(0.25),\r\n    marginBottom: theme.spacing(0.25),\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, split.ISplitScore>;\r\n}\r\n\r\ninterface IScoreCardActions {\r\n  addValue(name: string, rank: split.SplitRanks): void;\r\n  removeValue(name: string, rank: split.SplitRanks): void;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  IScoreCardActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nconst ValueMap: Record<split.SplitRanks, number[]> = {\r\n  A: [0, 30, 70, 120, 180, 200],\r\n  K: [0, 20, 50, 90, 140, 200],\r\n  Q: [0, 20, 50, 90, 140, 200],\r\n  J: [0, 20, 50, 90, 140, 200],\r\n  10: [0, 10, 30, 60, 100, 200],\r\n  9: [0, 10, 30, 60, 100, 200],\r\n  8: [0, 10, 30, 60, 100, 200],\r\n  7: [0, 10, 30, 60, 100, 200],\r\n  6: [0, 10, 30, 60, 100, 200],\r\n  5: [0, 10, 30, 60, 100, 200],\r\n  4: [0, 10, 30, 60, 100, 200],\r\n  3: [0, 10, 30, 60, 100, 200],\r\n  2: [0, 5, 20, 40, 70, 200],\r\n\r\n  Negative: [],\r\n};\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, {}> {\r\n  public render(): JSX.Element {\r\n    const myScore: split.ISplitScore = this.props.scores[this.props.name];\r\n\r\n    return (\r\n      <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n        <Mui.Grid container={true}>\r\n          <Mui.Grid item={true} xs={6}>\r\n            <Mui.Typography variant='h5'>\r\n              {this.props.name}\r\n            </Mui.Typography>\r\n          </Mui.Grid>\r\n          <Mui.Grid item={true} xs={6} className={this.props.classes.right}>\r\n            <Mui.Typography variant='h5'>\r\n              {this.calculateScore(myScore)}\r\n            </Mui.Typography>\r\n          </Mui.Grid>\r\n        </Mui.Grid>\r\n        <Mui.Divider variant='middle' />\r\n        {this.createRow(myScore, split.SplitRanks.A)}\r\n        {this.createRow(myScore, split.SplitRanks.K)}\r\n        {this.createRow(myScore, split.SplitRanks.Q)}\r\n        {this.createRow(myScore, split.SplitRanks.J)}\r\n        {this.createRow(myScore, split.SplitRanks.Ten)}\r\n        {this.createRow(myScore, split.SplitRanks.Nine)}\r\n        {this.createRow(myScore, split.SplitRanks.Eight)}\r\n        {this.createRow(myScore, split.SplitRanks.Seven)}\r\n        {this.createRow(myScore, split.SplitRanks.Six)}\r\n        {this.createRow(myScore, split.SplitRanks.Five)}\r\n        {this.createRow(myScore, split.SplitRanks.Four)}\r\n        {this.createRow(myScore, split.SplitRanks.Three)}\r\n        {this.createRow(myScore, split.SplitRanks.Two)}\r\n        <Mui.Grid container={true} justify='center' alignItems='center' className={this.props.classes.row}>\r\n          <Mui.Grid item={true} xs={4}>\r\n            <Mui.Button variant='outlined' onClick={() => this.handleIncrease(split.SplitRanks.Negative)}>\r\n              -5\r\n            </Mui.Button>\r\n          </Mui.Grid>\r\n          <Mui.Grid item={true} xs={4} className={this.props.classes.center}>\r\n            <Mui.Typography variant='h5'>{this.getRankValues(myScore, split.SplitRanks.Negative)}</Mui.Typography>\r\n          </Mui.Grid>\r\n          <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n            <Mui.Button variant='outlined' onClick={() => this.handleDecrease(split.SplitRanks.Negative)}>\r\n              +5\r\n        </Mui.Button>\r\n          </Mui.Grid>\r\n        </Mui.Grid>\r\n      </Mui.Paper>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private getRankValues(myScore: split.ISplitScore, rank: split.SplitRanks): number {\r\n    const index = myScore ? myScore.values[rank] : 0;\r\n\r\n    if (rank === split.SplitRanks.Negative) {\r\n      return -5 * index;\r\n    }\r\n\r\n    return ValueMap[rank][index];\r\n  }\r\n\r\n  @bind\r\n  private calculateScore(myScore: split.ISplitScore): number {\r\n    return this.getRankValues(myScore, split.SplitRanks.Negative) +\r\n      this.getRankValues(myScore, split.SplitRanks.A) +\r\n      this.getRankValues(myScore, split.SplitRanks.K) +\r\n      this.getRankValues(myScore, split.SplitRanks.Q) +\r\n      this.getRankValues(myScore, split.SplitRanks.J) +\r\n      this.getRankValues(myScore, split.SplitRanks.Ten) +\r\n      this.getRankValues(myScore, split.SplitRanks.Nine) +\r\n      this.getRankValues(myScore, split.SplitRanks.Eight) +\r\n      this.getRankValues(myScore, split.SplitRanks.Seven) +\r\n      this.getRankValues(myScore, split.SplitRanks.Six) +\r\n      this.getRankValues(myScore, split.SplitRanks.Five) +\r\n      this.getRankValues(myScore, split.SplitRanks.Four) +\r\n      this.getRankValues(myScore, split.SplitRanks.Three) +\r\n      this.getRankValues(myScore, split.SplitRanks.Two);\r\n  }\r\n\r\n  @bind\r\n  private handleIncrease(rank: split.SplitRanks): void {\r\n    this.props.addValue(this.props.name, rank);\r\n  }\r\n\r\n  @bind\r\n  private handleDecrease(rank: split.SplitRanks): void {\r\n    this.props.removeValue(this.props.name, rank);\r\n  }\r\n\r\n  @bind\r\n  private createRow(myScore: split.ISplitScore, rank: split.SplitRanks): JSX.Element {\r\n    const selectedIndex = myScore ? myScore.values[rank] : 0;\r\n\r\n    const avatars: JSX.Element[] = [];\r\n    for (let index = 0; index < 6; index++) {\r\n      let avatarClass = this.props.classes.avatar;\r\n      if (index === selectedIndex) {\r\n        avatarClass = `${avatarClass} ${this.props.classes.selectedAvatar}`;\r\n      }\r\n\r\n      avatars.push(<Mui.Avatar key={`${rank.toString()}-${index}`} className={avatarClass}>{ValueMap[rank][index]}</Mui.Avatar>);\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Grid container={true} justify='center' alignItems='center' className={this.props.classes.row}>\r\n          <Mui.Button variant='outlined' onClick={() => this.handleIncrease(rank)} style={{ marginRight: 10 }}>\r\n            {rank.toString()}\r\n          </Mui.Button>\r\n          {avatars}\r\n        </Mui.Grid>\r\n        <Mui.Divider />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.split.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreCardActions => ({\r\n  addValue: (name: string, rank: split.SplitRanks) => dispatch(split.addValue(name, rank)),\r\n  removeValue: (name: string, rank: split.SplitRanks) => dispatch(split.removeValue(name, rank)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as types from './Types';\r\n\r\nexport function addValue(name: string, rank: types.SplitRanks): types.SplitActionTypes {\r\n  return {\r\n    name,\r\n    rank,\r\n    type: types.SPLIT_ADD_VALUE,\r\n  };\r\n}\r\n\r\nexport function removeValue(name: string, rank: types.SplitRanks): types.SplitActionTypes {\r\n  return {\r\n    name,\r\n    rank,\r\n    type: types.SPLIT_REMOVE_VALUE,\r\n  };\r\n}\r\n\r\nexport function resetAll(): types.SplitActionTypes {\r\n  return {\r\n    type: types.SPLIT_RESET_ALL,\r\n  };\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as split from '../../Store/Split';\r\nimport ScoreCard from './ScoreCard';\r\nimport { bind } from 'decko';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  splitWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface ISplitProps {\r\n  names: string[];\r\n}\r\n\r\ninterface ISplitActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllSplitProps =\r\n  ISplitProps &\r\n  ISplitActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass Split extends React.Component<IAllSplitProps, {}> {\r\n  public render(): JSX.Element {\r\n    if (this.props.names.length === 0) {\r\n      return (\r\n        <Mui.Typography>\r\n          Go back to Home and add some players first!\r\n        </Mui.Typography>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.splitWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.props.reset();\r\n  }\r\n}\r\nconst mapStateToProps = (state: AppState): ISplitProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): ISplitActions => ({\r\n  reset: () => dispatch(split.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Split));\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from '../Home';\r\nimport About from '../About/About';\r\nimport Generic from '../Generic';\r\nimport MilleBornes from '../MilleBornes';\r\nimport Mu from '../Mu';\r\nimport Split from '../Split';\r\n\r\nclass Main extends React.Component<{}, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <Mui.Box m={2}>\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route path='/split' component={Split} />\r\n          <Route path='/millebornes' component={MilleBornes} />\r\n          <Route path='/mu' component={Mu} />\r\n          <Route path='/generic' component={Generic} />\r\n          <Route path='/about' component={About} />\r\n        </Switch>\r\n      </Mui.Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import * as React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport { Themes } from '../../Theme';\r\nimport * as system from '../../Store/System';\r\nimport Header from '../Header';\r\nimport Main from '../Main';\r\n\r\ninterface IAppProps {\r\n  selectedTheme: system.ThemeOptions;\r\n}\r\n\r\nclass App extends React.Component<IAppProps, {}> {\r\n  public render(): JSX.Element {\r\n    const currentTheme = Themes.getTheme(this.props.selectedTheme);\r\n\r\n    return (\r\n      <ThemeProvider theme={currentTheme}>\r\n        <CssBaseline />\r\n        <Header />\r\n        <Main />\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IAppProps => ({\r\n  selectedTheme: state.system.selectedTheme,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): {} => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.IGenericState = {\r\n  scores: {},\r\n};\r\n\r\nexport function genericReducer(state = initialState, action: types.GenericActionTypes): types.IGenericState {\r\n  return produce(state, (draft: Draft<types.IGenericState>) => {\r\n    switch (action.type) {\r\n      case types.GENERIC_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.GENERIC_ADD_SCORE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = 0;\r\n        }\r\n\r\n        draft.scores[action.name] = draft.scores[action.name] + action.value;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.IMilleBornesState = {\r\n  scores: {},\r\n};\r\n\r\nexport function milleBornesReducer(state = initialState, action: types.MilleBornesActionTypes): types.IMilleBornesState {\r\n  return produce(state, (draft: Draft<types.IMilleBornesState>) => {\r\n    switch (action.type) {\r\n      case types.MILLE_BORNES_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.MILLE_BORNES_ADD_SCORE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = 0;\r\n        }\r\n\r\n        draft.scores[action.name] = draft.scores[action.name] + action.value;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.IMuState = {\r\n  scores: {},\r\n};\r\n\r\nexport function muReducer(state = initialState, action: types.MuActionTypes): types.IMuState {\r\n  return produce(state, (draft: Draft<types.IMuState>) => {\r\n    switch (action.type) {\r\n      case types.MU_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.MU_ADD_SCORE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = 0;\r\n        }\r\n\r\n        draft.scores[action.name] = draft.scores[action.name] + action.value;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.ISplitState = {\r\n  scores: {},\r\n};\r\n\r\nfunction createEmptyScore(): Record<types.SplitRanks, number> {\r\n  return { A: 0, K: 0, Q: 0, J: 0, 10: 0, 9: 0, 8: 0, 7: 0, 6: 0, 5: 0, 4: 0, 3: 0, 2: 0, Negative: 0};\r\n}\r\n\r\nexport function splitReducer(state = initialState, action: types.SplitActionTypes): types.ISplitState {\r\n  return produce(state, (draft: Draft<types.ISplitState>) => {\r\n    switch (action.type) {\r\n      case types.SPLIT_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.SPLIT_ADD_VALUE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = {\r\n            values: createEmptyScore(),\r\n          };\r\n        }\r\n\r\n        const value = draft.scores[action.name].values[action.rank];\r\n        const max: number = (action.rank === types.SplitRanks.Negative) ? 500 : 6;\r\n        draft.scores[action.name].values[action.rank] = (value + 1) % max;\r\n        break;\r\n      }\r\n      case types.SPLIT_REMOVE_VALUE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = {\r\n            values: createEmptyScore(),\r\n          };\r\n        }\r\n\r\n        const value = draft.scores[action.name].values[action.rank];\r\n        draft.scores[action.name].values[action.rank] = Math.max(0, value - 1);\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.ISystemState = {\r\n  selectedTheme: types.ThemeOptions.Dark,\r\n  names: [],\r\n};\r\n\r\nexport function systemReducer(state = initialState, action: types.SystemActionTypes): types.ISystemState {\r\n  return produce(state, (draft: Draft<types.ISystemState>) => {\r\n    switch (action.type) {\r\n      case types.SYSTEM_CHANGE_THEME: {\r\n        draft.selectedTheme = action.newTheme;\r\n        break;\r\n      }\r\n      case types.SYSTEM_ADD_NAME: {\r\n        draft.names.push(action.name);\r\n        break;\r\n      }\r\n      case types.SYSTEM_REMOVE_NAME: {\r\n        const index = draft.names.indexOf(action.name);\r\n        if (index > -1) {\r\n          draft.names.splice(index, 1);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import { applyMiddleware, combineReducers, createStore, Store } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { Persistor, persistReducer, persistStore } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport { genericReducer } from './Generic/Reducers';\r\nimport { milleBornesReducer } from './MilleBornes/Reducers';\r\nimport { muReducer } from './Mu/Reducers';\r\nimport { splitReducer } from './Split/Reducers';\r\nimport { systemReducer } from './System/Reducers';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  generic: genericReducer,\r\n  milleBornes: milleBornesReducer,\r\n  mu: muReducer,\r\n  split: splitReducer,\r\n  system: systemReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst bindMiddleware = (middleware: any) => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const { composeWithDevTools } = require('redux-devtools-extension');\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\ninterface IStoreData {\r\n  store: Store<AppState>;\r\n  persistor: Persistor;\r\n}\r\n\r\nconst store = createStore(persistedReducer, bindMiddleware([thunk]));\r\n\r\nconst data: IStoreData = {\r\n  store,\r\n  persistor: persistStore(store),\r\n};\r\n\r\nexport default data;\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport App from './Components/App';\r\nimport storeData from './Store';\r\n\r\nReactDOM.render((\r\n  <HashRouter>\r\n    <Provider store={storeData.store}>\r\n      <PersistGate loading={null} persistor={storeData.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </HashRouter>\r\n), document.getElementById('root'));\r\n"],"sourceRoot":""}