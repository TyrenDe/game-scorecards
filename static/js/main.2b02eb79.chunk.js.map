{"version":3,"sources":["Store/System/Types.ts","Theme.tsx","Components/Header/index.tsx","Components/Footer/index.tsx","Store/System/Actions.ts","Components/Home/index.tsx","Components/About/About.tsx","Components/Generic/ScoreCard.tsx","Store/Generic/Actions.ts","Store/Generic/Types.ts","Components/ConfirmationDialog.tsx","Components/Generic/index.tsx","Components/MilleBornes/SafetyRow.tsx","Components/MilleBornes/ScoreCard.tsx","Store/MilleBornes/Actions.ts","Store/MilleBornes/Types.ts","Components/MilleBornes/index.tsx","Store/Mu/Actions.ts","Store/Mu/Types.ts","Components/Mu/ScoreCard.tsx","Components/Mu/Trumps.tsx","Components/Mu/TrumpSelector.tsx","Components/Mu/ScoreHandDialog.tsx","Store/Qwixx/Types.ts","Components/Mu/StalemateDialog.tsx","Components/Mu/index.tsx","Store/Qwixx/Actions.ts","Store/Split/Types.ts","Components/Qwixx/ColorRow.tsx","Components/Qwixx/ScoreCard.tsx","Components/Qwixx/index.tsx","Components/Split/ScoreCard.tsx","Store/Split/Actions.ts","Components/Split/index.tsx","Components/Main/index.tsx","Components/App/index.tsx","Store/Generic/Reducers.ts","Store/MilleBornes/Reducers.ts","Store/Mu/Reducers.ts","Store/Split/Reducers.ts","Store/System/Reducers.ts","Store/Qwixx/Reducers.ts","Store/index.ts","serviceWorker.ts","index.tsx"],"names":["ThemeOptions","lightTheme","palette","primary","indigo","secondary","lightBlue","type","darkTheme","Themes","option","Light","light","dark","createMuiTheme","Header","position","value","this","props","location","pathname","variant","scrollButtons","label","to","component","Link","React","bind","withRouter","Footer","p","state","error","newName","showAddPlayerDialog","className","classes","appBar","chipWrapper","icon","chip","onClick","handleAdd","names","map","name","key","onDelete","handleDelete","open","maxWidth","fullWidth","onClose","handleDialogClose","required","autoFocus","onChange","handleNewNameChange","onKeyPress","handleKeyPress","length","color","disabled","handleAddName","event","preventDefault","target","trim","find","profile","toLowerCase","setState","addName","removeName","connect","system","dispatch","Mui","theme","top","bottom","margin","spacing","display","flexWrap","Home","About","ScoreCard","showScoreDialog","myScore","scores","scoreCardPaper","scoreButton","handleScoreRound","handleChange","handleUpdateScore","parseInt","isNaN","addScore","generic","width","padding","textAlign","ConfirmationDialog","showDialog","handleDialogConfirm","Generic","showConfirmationDialog","genericWrapper","handleReset","handleConfirmation","answer","reset","SafetyRow","item","xs","right","marginTop","center","checked","played","togglePlayed","hideCoupFourre","hidden","coupFourre","toggleCoupFourre","withStyles","verticalAlign","distance","rightOfWayPlayed","rightOfWayPlayedCF","drivingAcePlayed","drivingAcePlayedCF","fuelTankPlayed","fuelTankPlayedCF","punctureProofPlayed","punctureProofPlayedCF","delayedAction","safeTrip","extension","shutout","getScore","id","gutterBottom","aria-labelledby","valueLabelDisplay","step","min","max","marks","handleDistanceChanged","container","handleToggleRightOfWay","handleToggleRightOfWayCF","handleToggleDrivingAce","handleToggleDrivingAceCF","handleToggleFuelTank","handleToggleFuelTankCF","handleTogglePunctureProof","handleTogglePunctureProofCF","handleToggleDelayedAction","handleToggleSafeTrip","handleToggleShutout","Array","isArray","score","milleBornes","MilleBornes","milleBornesWrapper","Trumps","mu","TrumpSelector","selectBox","htmlFor","trump","handleTrumpChanged","inputProps","Black","Blue","Green","Red","Yellow","One","Seven","Zero","Two","Three","Four","Five","Six","Eight","Nine","None","onTrumpChanged","PointsPerBid","getChiefTeamBonus","overTrump","bid","Math","QwixxRanks","ScoreHandDialog","getDefaultState","prevProps","sm","handleBidChanged","handleOverTrumpChanged","underTrump","handleUnderTrumpChanged","createPlayerRow","canSave","points","chief","vice","partner","newPoints","Object","assign","chiefTeamPoints","chiefTeamBidMade","playerCount","currentPoints","currentBid","getChiefTeamBidMade","missedBy","handleChief","handleVice","handlePartner","handlePointsChange","sum","StalemateDialog","lastBidder","highestBidders","createStalemateRow","handleUpdateStalemate","indexOf","included","filter","concat","handleLastBidder","handleHighestBidder","Mu","showStalemateDialog","handleScoreHand","buttonSpacing","handleStalemate","muWrapper","marginLeft","addValue","rank","number","removeValue","SplitRanks","ColorRow","qwixx","Negative","renderNegative","isRedOrYellow","buttonList","index","push","getButton","reverse","style","backgroundColor","getLockIcon","getNegativeButton","renderScore","redScore","calcScore","yellowScore","greenScore","blueScore","negScore","values","count","includes","disabledButton","button","isLocked","toggleLock","unlock","lock","text","buttonClass","fontWeight","fontSize","textShadow","Qwixx","qwixxWrapper","ValueMap","A","K","Q","J","10","9","8","7","6","5","4","3","2","ScoreName","calculateScore","createRow","split","Ten","justify","alignItems","row","handleIncrease","getRankValues","handleDecrease","selectedIndex","avatars","avatarClass","avatar","selectedAvatar","toString","marginRight","minWidth","height","main","contrastText","marginBottom","Split","splitWrapper","Main","m","exact","path","exactpath","App","currentTheme","getTheme","selectedTheme","ThemeProvider","CssBaseline","initialState","types","Dark","middleware","persistConfig","storage","rootReducer","combineReducers","action","produce","draft","search_index","splice","newTheme","persistedReducer","persistReducer","store","createStore","thunk","applyMiddleware","data","persistor","persistStore","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","storeData","loading","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2b02eb79.chunk.js","sourcesContent":["export enum ThemeOptions {\r\n  Light,\r\n  Dark,\r\n}\r\n\r\nexport interface ISystemState {\r\n  selectedTheme: ThemeOptions;\r\n  names: string[];\r\n}\r\n\r\nexport const SYSTEM_CHANGE_THEME = 'SYSTEM_CHANGE_THEME';\r\nexport const SYSTEM_ADD_NAME = 'SYSTEM_ADD_NAME';\r\nexport const SYSTEM_REMOVE_NAME = 'SYSTEM_REMOVE_NAME';\r\n\r\nexport interface ISystemChangeThemeAction {\r\n  newTheme: ThemeOptions;\r\n  type: typeof SYSTEM_CHANGE_THEME;\r\n}\r\n\r\nexport interface ISystemAddNameAction {\r\n  name: string;\r\n  type: typeof SYSTEM_ADD_NAME;\r\n}\r\n\r\nexport interface ISystemRemoveNameAction {\r\n  name: string;\r\n  type: typeof SYSTEM_REMOVE_NAME;\r\n}\r\n\r\nexport type SystemActionTypes =\r\n  ISystemChangeThemeAction |\r\n  ISystemAddNameAction |\r\n  ISystemRemoveNameAction;\r\n","import { lightBlue, indigo } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeOptions } from 'Store/System/Types';\r\nimport { PaletteType } from '@material-ui/core';\r\n\r\nconst lightTheme = {\r\n  palette: {\r\n    primary: indigo,\r\n    secondary: lightBlue,\r\n    type: 'light' as PaletteType,\r\n  },\r\n};\r\n\r\nconst darkTheme = {\r\n  palette: {\r\n    primary: indigo,\r\n    secondary: lightBlue,\r\n    type: 'dark' as PaletteType,\r\n  },\r\n};\r\n\r\nexport class Themes {\r\n  public static getTheme(option: ThemeOptions) {\r\n    switch (option) {\r\n      case ThemeOptions.Light:\r\n        return Themes.light;\r\n    }\r\n\r\n    return Themes.dark;\r\n  }\r\n\r\n  private static light = createMuiTheme(lightTheme);\r\n  private static dark = createMuiTheme(darkTheme);\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { bind } from 'decko';\r\n\r\ntype IAllHeaderProps =\r\n  RouteComponentProps<any>;\r\n\r\nclass Header extends React.Component<IAllHeaderProps, {}> {\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <React.Fragment>\r\n        <nav>\r\n          <Mui.AppBar position='static'>\r\n            <Mui.Tabs value={this.props.location.pathname} variant='scrollable' scrollButtons='on'>\r\n              <Mui.Tab value='/' label='Home' to='/' component={Link} />\r\n              <Mui.Tab value='/split' label='Split' to='/split' component={Link} />\r\n              <Mui.Tab value='/millebornes' label='Mille Bornes' to='/millebornes' component={Link} />\r\n              <Mui.Tab value='/mu' label='Mü' to='/mu' component={Link} />\r\n              <Mui.Tab value='/qwixx' label='Qwixx' to='/qwixx' component={Link} />\r\n              <Mui.Tab value='/generic' label='Generic' to='/generic' component={Link} />\r\n              <Mui.Tab value='/about' label='About' to='/about' component={Link} />\r\n            </Mui.Tabs>\r\n          </Mui.AppBar>\r\n        </nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import * as Mui from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as system from 'Store/System';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  chipWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface IFooterProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IFooterActions {\r\n  addName(name: string): void;\r\n  removeName(name: string): void;\r\n}\r\n\r\ntype IAllFooterProps =\r\n  IFooterProps &\r\n  IFooterActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IFooterState {\r\n  error: string;\r\n  newName: string;\r\n  showAddPlayerDialog: boolean;\r\n}\r\n\r\nclass Footer extends React.Component<IAllFooterProps, IFooterState> {\r\n  constructor(p: IAllFooterProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      error: '',\r\n      newName: '',\r\n      showAddPlayerDialog: false,\r\n    };\r\n  }\r\n\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.AppBar position='fixed' className={this.props.classes.appBar}>\r\n          <div className={this.props.classes.chipWrapper}>\r\n            <Mui.Chip icon={<AddIcon />} label='Add Player' variant='outlined' className={this.props.classes.chip} onClick={this.handleAdd} />\r\n            {this.props.names.map((name) => <Mui.Chip key={name} label={name} variant='outlined' className={this.props.classes.chip} onDelete={() => this.handleDelete(name)} />)}\r\n          </div>\r\n        </Mui.AppBar>\r\n\r\n        <Mui.Dialog open={this.state.showAddPlayerDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogContent>\r\n            <Mui.TextField\r\n              fullWidth={true}\r\n              required={true}\r\n              autoFocus={true}\r\n              value={this.state.newName}\r\n              onChange={this.handleNewNameChange}\r\n              onKeyPress={this.handleKeyPress}\r\n              label='Player or Team Name'\r\n            />\r\n            {(this.state.error.length !== 0) ? <Mui.FormHelperText error={true}>{this.state.error}</Mui.FormHelperText> : null}\r\n          </Mui.DialogContent>\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              disabled={this.state.error.length !== 0 || this.state.newName.length === 0}\r\n              onClick={this.handleAddName}\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleKeyPress(event: React.KeyboardEvent<HTMLInputElement>): void {\r\n    if (event.key === 'Enter') {\r\n      if (this.state.error.length === 0) {\r\n        this.handleAddName();\r\n      }\r\n\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private handleNewNameChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n    const newName: string = event.target.value.trim();\r\n\r\n    let error: string = '';\r\n    const existingProfile: string | undefined = this.props.names.find((profile) => profile.toLowerCase() === newName.toLowerCase());\r\n    if (existingProfile) {\r\n      error = 'Player or team already exists';\r\n    }\r\n\r\n    this.setState({\r\n      error,\r\n      newName: event.target.value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleAddName(): void {\r\n    const newName: string = this.state.newName.trim();\r\n\r\n    if (newName.length > 0) {\r\n      this.props.addName(newName);\r\n      this.setState({\r\n        newName: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showAddPlayerDialog: false,\r\n      newName: '',\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleAdd(): void {\r\n    this.setState({\r\n      showAddPlayerDialog: true,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDelete(name: string): void {\r\n    this.props.removeName(name);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IFooterProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IFooterActions => ({\r\n  addName: (name: string) => dispatch(system.addName(name)),\r\n  removeName: (name: string) => dispatch(system.removeName(name)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Footer));\r\n","import * as types from './Types';\r\n\r\nexport function changeTheme(newTheme: types.ThemeOptions): types.SystemActionTypes {\r\n  return {\r\n    newTheme,\r\n    type: types.SYSTEM_CHANGE_THEME,\r\n  };\r\n}\r\n\r\nexport function addName(name: string): types.SystemActionTypes {\r\n  return {\r\n    name,\r\n    type: types.SYSTEM_ADD_NAME,\r\n  };\r\n}\r\n\r\nexport function removeName(name: string): types.SystemActionTypes {\r\n  return {\r\n    name,\r\n    type: types.SYSTEM_REMOVE_NAME,\r\n  };\r\n}\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport Footer from '../Footer';\r\nimport { bind } from 'decko';\r\n\r\nclass Home extends React.Component<{}, {}> {\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Typography variant='h5'>\r\n          <p>Welcome to a quick and dirty way to keep track of scores on the go. This site allows you to add players, then\r\n          track scores for those players in a variety of games.  This is designed to be lightweight and quick to use.\r\n          It does NOT keep track of stats, players, or games across browser sessions.</p>\r\n\r\n          <p>It does use the local browser storage to maintain state to avoid accidentally losing the current session game\r\n          data.</p>\r\n        </Mui.Typography>\r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\n\r\nclass About extends React.Component<{}, {}> {\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <Mui.Typography variant='h5'>\r\n        This site was created by Shane DeSeranno, Donald Gill, Daniel Ramey, and Lara Ramey to aid in scoring various games.\r\n      </Mui.Typography>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as generic from 'Store/Generic';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 170,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n  },\r\n  scoreButton: {\r\n    margin: theme.spacing(1),\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, number>;\r\n}\r\n\r\ninterface IScoreCardActions {\r\n  addScore(name: string, value: number): void;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  IScoreCardActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IScoreCardState {\r\n  showScoreDialog: boolean;\r\n  value: string;\r\n}\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, IScoreCardState> {\r\n  constructor(p: IAllScoreCardProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showScoreDialog: false,\r\n      value: '',\r\n    };\r\n  }\r\n\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    const myScore: number = this.props.scores[this.props.name] ? this.props.scores[this.props.name] : 0;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n          <Mui.Typography variant='h5'>{this.props.name}: {myScore}</Mui.Typography>\r\n          <Mui.Divider />\r\n          <Mui.Button className={this.props.classes.scoreButton} color='primary' variant='contained' onClick={this.handleScoreRound}>Add Score</Mui.Button>\r\n        </Mui.Paper>\r\n\r\n        <Mui.Dialog open={this.state.showScoreDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogTitle>\r\n            Scoring for: {this.props.name}\r\n          </Mui.DialogTitle>\r\n\r\n          <Mui.Divider />\r\n\r\n          <Mui.DialogContent>\r\n            <Mui.TextField\r\n              value={this.state.value}\r\n              type='number'\r\n              onChange={this.handleChange}\r\n              label='Points'\r\n              onKeyPress={this.handleKeyPress}\r\n              fullWidth={true}\r\n              autoFocus={true}\r\n            />\r\n          </Mui.DialogContent>\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              onClick={this.handleUpdateScore}\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleKeyPress(event: React.KeyboardEvent<HTMLInputElement>): void {\r\n    if (event.key === 'Enter') {\r\n      this.handleUpdateScore();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private handleChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n    this.setState({\r\n      value: event.target.value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showScoreDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleScoreRound(): void {\r\n    this.setState({\r\n      showScoreDialog: true,\r\n      value: '',\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateScore(): void {\r\n    const value = parseInt(this.state.value, 10);\r\n    if (!isNaN(value)) {\r\n      this.props.addScore(this.props.name, value);\r\n    }\r\n\r\n    this.setState({\r\n      showScoreDialog: false,\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.generic.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreCardActions => ({\r\n  addScore: (name: string, value: number) => dispatch(generic.addScore(name, value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as types from './Types';\r\n\r\nexport function resetAll(): types.GenericActionTypes {\r\n  return {\r\n    type: types.GENERIC_RESET_ALL,\r\n  };\r\n}\r\n\r\nexport function addScore(name: string, value: number): types.GenericActionTypes {\r\n  return {\r\n    name,\r\n    value,\r\n    type: types.GENERIC_ADD_SCORE,\r\n  };\r\n}\r\n","export interface IGenericState {\r\n  readonly scores: Record<string, number>;\r\n}\r\n\r\nexport const GENERIC_RESET_ALL = 'GENERIC_RESET_ALL';\r\nexport const GENERIC_ADD_SCORE = 'GENERIC_ADD_SCORE';\r\n\r\nexport interface IGenericResetAllAction {\r\n  type: typeof GENERIC_RESET_ALL;\r\n}\r\n\r\nexport interface IGenericAddScoreAction {\r\n  name: string;\r\n  value: number;\r\n  type: typeof GENERIC_ADD_SCORE;\r\n}\r\n\r\nexport type GenericActionTypes =\r\n  IGenericResetAllAction |\r\n  IGenericAddScoreAction;\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { bind } from 'decko';\r\n\r\ninterface IConfirmationDialogProps {\r\n  showDialog: boolean;\r\n  onClose(answer: boolean): void;\r\n}\r\n\r\ntype IAllConfirmationDialogProps =\r\n  IConfirmationDialogProps;\r\n\r\nclass ConfirmationDialog extends React.Component<IAllConfirmationDialogProps, {}> {\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <Mui.Dialog open={this.props.showDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n        <Mui.DialogContent>\r\n          <Mui.Typography>Are you sure you want to clear the scores?</Mui.Typography>\r\n        </Mui.DialogContent>\r\n\r\n        <Mui.DialogActions>\r\n          <Mui.Button\r\n            variant='contained'\r\n            color='primary'\r\n            onClick={this.handleDialogClose}\r\n          >\r\n            No\r\n            </Mui.Button>\r\n\r\n          <Mui.Button\r\n            onClick={this.handleDialogConfirm}\r\n            variant='contained'\r\n            color='primary'\r\n          >\r\n            Yes\r\n            </Mui.Button>\r\n        </Mui.DialogActions>\r\n      </Mui.Dialog>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleDialogConfirm(): void {\r\n    this.props.onClose(true);\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.props.onClose(false);\r\n  }\r\n}\r\n\r\nexport default ConfirmationDialog;\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as generic from 'Store/Generic';\r\nimport ScoreCard from './ScoreCard';\r\nimport { bind } from 'decko';\r\nimport ConfirmationDialog from '../ConfirmationDialog';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  genericWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface IGenericProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IGenericActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllGenericProps =\r\n  IGenericProps &\r\n  IGenericActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IGenericState {\r\n  showConfirmationDialog: boolean;\r\n}\r\n\r\nclass Generic extends React.Component<IAllGenericProps, IGenericState> {\r\n  constructor(p: IAllGenericProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showConfirmationDialog: false,\r\n    };\r\n  }\r\n\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    if (this.props.names.length === 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Mui.Typography variant='h5'>\r\n            This tab can be used to track generic scores where you just add or subtract values from the player.  For example, Hearts, Five Crowns, Spades, Sticheln, or any other game.\r\n          </Mui.Typography>\r\n          <Mui.Typography variant='h6'>\r\n            <b>NOTE:</b> You currently have no players defined.  To add new players, click <Link color='secondary' to='/'>here</Link> to return home.  You will find the option to add and remove players at the bottom.\r\n          </Mui.Typography>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.genericWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n\r\n        <ConfirmationDialog onClose={this.handleConfirmation} showDialog={this.state.showConfirmationDialog} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleConfirmation(answer: boolean): void {\r\n    if (answer) {\r\n      this.props.reset();\r\n    }\r\n\r\n    this.setState({\r\n      showConfirmationDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.setState({\r\n      showConfirmationDialog: true,\r\n    });\r\n  }\r\n}\r\nconst mapStateToProps = (state: AppState): IGenericProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IGenericActions => ({\r\n  reset: () => dispatch(generic.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Generic));\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { bind } from 'decko';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  marginTop: {\r\n    marginTop: 10,\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    verticalAlign: 'middle',\r\n  },\r\n  hidden: {\r\n    display: 'none',\r\n  },\r\n});\r\n\r\ninterface ISafetyRowProps {\r\n  name: string;\r\n  played: boolean;\r\n  coupFourre: boolean;\r\n  hideCoupFourre?: boolean;\r\n  togglePlayed(): void;\r\n  toggleCoupFourre(): void;\r\n}\r\n\r\ntype IAllSafetyRowProps =\r\n  ISafetyRowProps &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass SafetyRow extends React.Component<IAllSafetyRowProps, {}> {\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Grid item={true} xs={6} className={this.props.classes.right}>\r\n          <Mui.Typography className={this.props.classes.marginTop}>{this.props.name}:</Mui.Typography>\r\n        </Mui.Grid>\r\n        <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Checkbox checked={this.props.played} onChange={this.props.togglePlayed} /></Mui.Grid>\r\n        <Mui.Grid className={this.props.hideCoupFourre ? this.props.classes.hidden : this.props.classes.center} item={true} xs={3}><Mui.Checkbox disabled={!this.props.played} checked={this.props.coupFourre} onChange={this.props.toggleCoupFourre} /></Mui.Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(localStyles)(SafetyRow);\r\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as milleBornes from 'Store/MilleBornes';\r\nimport SafetyRow from './SafetyRow';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  marginTop: {\r\n    marginTop: 10,\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    verticalAlign: 'middle',\r\n  },\r\n  scoreButton: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 170,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, number>;\r\n}\r\n\r\ninterface IScoreCardActions {\r\n  addScore(name: string, value: number): void;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  IScoreCardActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IScoreCardState {\r\n  showScoreDialog: boolean;\r\n  distance: number;\r\n  rightOfWayPlayed: boolean;\r\n  rightOfWayPlayedCF: boolean;\r\n  drivingAcePlayed: boolean;\r\n  drivingAcePlayedCF: boolean;\r\n  fuelTankPlayed: boolean;\r\n  fuelTankPlayedCF: boolean;\r\n  punctureProofPlayed: boolean;\r\n  punctureProofPlayedCF: boolean;\r\n  delayedAction: boolean;\r\n  safeTrip: boolean;\r\n  extension: boolean;\r\n  shutout: boolean;\r\n}\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, IScoreCardState> {\r\n  constructor(p: IAllScoreCardProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showScoreDialog: false,\r\n      distance: 0,\r\n      rightOfWayPlayed: false,\r\n      rightOfWayPlayedCF: false,\r\n      drivingAcePlayed: false,\r\n      drivingAcePlayedCF: false,\r\n      fuelTankPlayed: false,\r\n      fuelTankPlayedCF: false,\r\n      punctureProofPlayed: false,\r\n      punctureProofPlayedCF: false,\r\n      delayedAction: false,\r\n      safeTrip: false,\r\n      extension: false,\r\n      shutout: false,\r\n    };\r\n  }\r\n\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n          <Mui.Typography variant='h5'>{this.props.name}: {this.getScore()}</Mui.Typography>\r\n          <Mui.Divider />\r\n          <Mui.Button className={this.props.classes.scoreButton} color='primary' variant='contained' onClick={this.handleScoreRound}>Add Score</Mui.Button>\r\n        </Mui.Paper>\r\n\r\n        <Mui.Dialog open={this.state.showScoreDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogTitle>\r\n            Scoring for: {this.props.name}\r\n          </Mui.DialogTitle>\r\n\r\n          <Mui.Divider />\r\n\r\n          <Mui.DialogContent>\r\n            <Mui.Typography id='distance-slider' gutterBottom={true}>Distance</Mui.Typography>\r\n            <Mui.Slider\r\n              aria-labelledby='distance-slider'\r\n              valueLabelDisplay='on'\r\n              step={25}\r\n              min={0}\r\n              max={1000}\r\n              marks={true}\r\n              value={this.state.distance}\r\n              onChange={this.handleDistanceChanged}\r\n            />\r\n\r\n            <Mui.Grid container={true}>\r\n              <Mui.Grid item={true} xs={6} className={this.props.classes.right}></Mui.Grid>\r\n              <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Typography>Played</Mui.Typography></Mui.Grid>\r\n              <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Typography>Coup-fourré</Mui.Typography></Mui.Grid>\r\n\r\n              <SafetyRow name='Right of Way' hideCoupFourre={true} played={this.state.rightOfWayPlayed} coupFourre={this.state.rightOfWayPlayedCF} togglePlayed={this.handleToggleRightOfWay} toggleCoupFourre={this.handleToggleRightOfWayCF} />\r\n              <SafetyRow name='Driving Ace' played={this.state.drivingAcePlayed} coupFourre={this.state.drivingAcePlayedCF} togglePlayed={this.handleToggleDrivingAce} toggleCoupFourre={this.handleToggleDrivingAceCF} />\r\n              <SafetyRow name='Extra Tank' played={this.state.fuelTankPlayed} coupFourre={this.state.fuelTankPlayedCF} togglePlayed={this.handleToggleFuelTank} toggleCoupFourre={this.handleToggleFuelTankCF} />\r\n              <SafetyRow name='Puncture Proof' played={this.state.punctureProofPlayed} coupFourre={this.state.punctureProofPlayedCF} togglePlayed={this.handleTogglePunctureProof} toggleCoupFourre={this.handleTogglePunctureProofCF} />\r\n\r\n              <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Delayed Action:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox disabled={this.state.distance < 1000} checked={this.state.delayedAction} onChange={this.handleToggleDelayedAction} /></Mui.Grid>\r\n\r\n              <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Safe Trip:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox disabled={this.state.distance < 1000} checked={this.state.safeTrip} onChange={this.handleToggleSafeTrip} /></Mui.Grid>\r\n\r\n              {/* <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Extension:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox checked={this.state.extension} onChange={this.handleToggleExtension} /></Mui.Grid> */}\r\n\r\n              <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Shutout:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox disabled={this.state.distance < 1000} checked={this.state.shutout} onChange={this.handleToggleShutout} /></Mui.Grid>\r\n            </Mui.Grid>\r\n          </Mui.DialogContent>\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              onClick={this.handleUpdateScore}\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleDistanceChanged(event: React.ChangeEvent<{}>, value: number | number[]): void {\r\n    if (Array.isArray(value)) {\r\n      value = value[value.length - 1];\r\n    }\r\n\r\n    this.setState({\r\n      distance: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleDelayedAction(): void {\r\n    this.setState({\r\n      delayedAction: !this.state.delayedAction,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleShutout(): void {\r\n    this.setState({\r\n      shutout: !this.state.shutout,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleSafeTrip(): void {\r\n    this.setState({\r\n      safeTrip: !this.state.safeTrip,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleRightOfWay(): void {\r\n    this.setState({\r\n      rightOfWayPlayed: !this.state.rightOfWayPlayed,\r\n      rightOfWayPlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleRightOfWayCF(): void {\r\n    this.setState({\r\n      rightOfWayPlayedCF: !this.state.rightOfWayPlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleDrivingAce(): void {\r\n    this.setState({\r\n      drivingAcePlayed: !this.state.drivingAcePlayed,\r\n      drivingAcePlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleDrivingAceCF(): void {\r\n    this.setState({\r\n      drivingAcePlayedCF: !this.state.drivingAcePlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleFuelTank(): void {\r\n    this.setState({\r\n      fuelTankPlayed: !this.state.fuelTankPlayed,\r\n      fuelTankPlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleFuelTankCF(): void {\r\n    this.setState({\r\n      fuelTankPlayedCF: !this.state.fuelTankPlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleTogglePunctureProof(): void {\r\n    this.setState({\r\n      punctureProofPlayed: !this.state.punctureProofPlayed,\r\n      punctureProofPlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleTogglePunctureProofCF(): void {\r\n    this.setState({\r\n      punctureProofPlayedCF: !this.state.punctureProofPlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showScoreDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateScore(): void {\r\n    let score: number = 0;\r\n\r\n    score += this.state.distance;\r\n\r\n    if (this.state.drivingAcePlayed) {\r\n      score += 100;\r\n      if (this.state.drivingAcePlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.fuelTankPlayed) {\r\n      score += 100;\r\n      if (this.state.fuelTankPlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.punctureProofPlayed) {\r\n      score += 100;\r\n      if (this.state.punctureProofPlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.rightOfWayPlayed) {\r\n      score += 100;\r\n      if (this.state.rightOfWayPlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.drivingAcePlayed && this.state.fuelTankPlayed && this.state.punctureProofPlayed && this.state.rightOfWayPlayed) {\r\n      score += 300;\r\n    }\r\n\r\n    if (this.state.distance === 1000) {\r\n      score += 400;\r\n\r\n      if (this.state.shutout) {\r\n        score += 500;\r\n      }\r\n\r\n      if (this.state.safeTrip) {\r\n        score += 300;\r\n      }\r\n\r\n      if (this.state.extension) {\r\n        score += 200;\r\n      }\r\n\r\n      if (this.state.delayedAction) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    this.props.addScore(this.props.name, score);\r\n    this.setState({\r\n      showScoreDialog: false,\r\n      distance: 0,\r\n      rightOfWayPlayed: false,\r\n      rightOfWayPlayedCF: false,\r\n      drivingAcePlayed: false,\r\n      drivingAcePlayedCF: false,\r\n      fuelTankPlayed: false,\r\n      fuelTankPlayedCF: false,\r\n      punctureProofPlayed: false,\r\n      punctureProofPlayedCF: false,\r\n      delayedAction: false,\r\n      safeTrip: false,\r\n      extension: false,\r\n      shutout: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private getScore(): number {\r\n    const score = this.props.scores[this.props.name];\r\n    return score ? score : 0;\r\n  }\r\n\r\n  @bind\r\n  private handleScoreRound(): void {\r\n    this.setState({\r\n      showScoreDialog: true,\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.milleBornes.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreCardActions => ({\r\n  addScore: (name: string, value: number) => dispatch(milleBornes.addScore(name, value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as types from './Types';\r\n\r\nexport function resetAll(): types.MilleBornesActionTypes {\r\n  return {\r\n    type: types.MILLE_BORNES_RESET_ALL,\r\n  };\r\n}\r\n\r\nexport function addScore(name: string, value: number): types.MilleBornesActionTypes {\r\n  return {\r\n    name,\r\n    value,\r\n    type: types.MILLE_BORNES_ADD_SCORE,\r\n  };\r\n}\r\n","export interface IMilleBornesState {\r\n  readonly scores: Record<string, number>;\r\n}\r\n\r\nexport const MILLE_BORNES_RESET_ALL = 'MILLE_BORNES_RESET_ALL';\r\nexport const MILLE_BORNES_ADD_SCORE = 'MILLE_BORNES_ADD_SCORE';\r\n\r\nexport interface IMilleBornesResetAllAction {\r\n  type: typeof MILLE_BORNES_RESET_ALL;\r\n}\r\n\r\nexport interface IMilleBornesAddScoreAction {\r\n  name: string;\r\n  value: number;\r\n  type: typeof MILLE_BORNES_ADD_SCORE;\r\n}\r\n\r\nexport type MilleBornesActionTypes =\r\n  IMilleBornesResetAllAction |\r\n  IMilleBornesAddScoreAction;\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { bind } from 'decko';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as milleBornes from 'Store/MilleBornes';\r\nimport ScoreCard from './ScoreCard';\r\nimport ConfirmationDialog from '../ConfirmationDialog';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  milleBornesWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface IMilleBornesProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IMilleBornesActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllMilleBornesProps =\r\n  IMilleBornesProps &\r\n  IMilleBornesActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IMilleBornesState {\r\n  showConfirmationDialog: boolean;\r\n}\r\n\r\nclass MilleBornes extends React.Component<IAllMilleBornesProps, IMilleBornesState> {\r\n  constructor(p: IAllMilleBornesProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showConfirmationDialog: false,\r\n    };\r\n  }\r\n\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    if (this.props.names.length === 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Mui.Typography variant='h5'>\r\n            This tab can be used to track scores for the game Mille Bornes.\r\n          </Mui.Typography>\r\n          <Mui.Typography variant='h6'>\r\n            <b>NOTE:</b> You currently have no players defined.  To add new players, click <Link color='secondary' to='/'>here</Link> to return home.  You will find the option to add and remove players at the bottom.\r\n          </Mui.Typography>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.milleBornesWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n        <ConfirmationDialog onClose={this.handleConfirmation} showDialog={this.state.showConfirmationDialog}/>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleConfirmation(answer: boolean): void {\r\n    if (answer) {\r\n      this.props.reset();\r\n    }\r\n\r\n    this.setState({\r\n      showConfirmationDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.setState({\r\n      showConfirmationDialog: true,\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IMilleBornesProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IMilleBornesActions => ({\r\n  reset: () => dispatch(milleBornes.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(MilleBornes));\r\n","import * as types from './Types';\r\n\r\nexport function resetAll(): types.MuActionTypes {\r\n  return {\r\n    type: types.MU_RESET_ALL,\r\n  };\r\n}\r\n\r\nexport function addScore(name: string, value: number): types.MuActionTypes {\r\n  return {\r\n    name,\r\n    value,\r\n    type: types.MU_ADD_SCORE,\r\n  };\r\n}\r\n","export interface IMuState {\r\n  readonly scores: Record<string, number>;\r\n}\r\n\r\nexport const MU_RESET_ALL = 'MU_RESET_ALL';\r\nexport const MU_ADD_SCORE = 'MU_ADD_SCORE';\r\n\r\nexport interface IMuResetAllAction {\r\n  type: typeof MU_RESET_ALL;\r\n}\r\n\r\nexport interface IMuAddScoreAction {\r\n  name: string;\r\n  value: number;\r\n  type: typeof MU_ADD_SCORE;\r\n}\r\n\r\nexport type MuActionTypes =\r\n  IMuResetAllAction |\r\n  IMuAddScoreAction;\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { bind } from 'decko';\r\n\r\nimport { AppState } from 'Store';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 170,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, number>;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, {}> {\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    const myScore: number = this.props.scores[this.props.name] ? this.props.scores[this.props.name] : 0;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n          <Mui.Typography variant='h5'>{this.props.name}: {myScore}</Mui.Typography>\r\n        </Mui.Paper>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.mu.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): {} => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","enum Trumps {\r\n  Black,\r\n  Blue,\r\n  Green,\r\n  Red,\r\n  Yellow,\r\n  One,\r\n  Seven,\r\n  Zero,\r\n  Two,\r\n  Three,\r\n  Four,\r\n  Five,\r\n  Six,\r\n  Eight,\r\n  Nine,\r\n  None,\r\n}\r\n\r\nexport default Trumps;\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { bind } from 'decko';\r\n\r\nimport Trumps from './Trumps';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  selectBox: {\r\n    width: 180,\r\n  },\r\n});\r\n\r\ninterface ITrumpSelectorProps {\r\n  label: string;\r\n  trump: Trumps;\r\n  onTrumpChanged(value: Trumps): void;\r\n}\r\n\r\ntype IAllTrumpSelectorProps =\r\n  ITrumpSelectorProps &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass TrumpSelector extends React.Component<IAllTrumpSelectorProps, {}> {\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <Mui.FormControl variant='filled' className={this.props.classes.selectBox}>\r\n        <Mui.InputLabel htmlFor='trump'>\r\n          {this.props.label}\r\n        </Mui.InputLabel>\r\n        <Mui.Select\r\n          value={this.props.trump}\r\n          onChange={this.handleTrumpChanged}\r\n          inputProps={{\r\n            name: 'trump',\r\n            id: 'trump',\r\n          }}\r\n        >\r\n          <Mui.MenuItem value={Trumps.Black}>Black</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Blue}>Blue</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Green}>Green</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Red}>Red</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Yellow}>Yellow</Mui.MenuItem>\r\n          <Mui.Divider />\r\n          <Mui.MenuItem value={Trumps.One}>1</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Seven}>7</Mui.MenuItem>\r\n          <Mui.Divider />\r\n          <Mui.MenuItem value={Trumps.Zero}>0</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Two}>2</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Three}>3</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Four}>4</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Five}>5</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Six}>6</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Eight}>8</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Nine}>9</Mui.MenuItem>\r\n          <Mui.Divider />\r\n          <Mui.MenuItem value={Trumps.None}>No Trump</Mui.MenuItem>\r\n        </Mui.Select>\r\n      </Mui.FormControl>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleTrumpChanged(event: React.ChangeEvent<{ name?: string; value: unknown }>): void {\r\n    this.props.onTrumpChanged(event.target.value as Trumps);\r\n  }\r\n}\r\n\r\nexport default Mui.withStyles(localStyles)(TrumpSelector);\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { bind } from 'decko';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as mu from 'Store/Mu';\r\nimport Trumps from './Trumps';\r\nimport TrumpSelector from './TrumpSelector';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  center: {\r\n    marginTop: 8,\r\n  },\r\n});\r\n\r\nconst PointsPerBid = [0, 0, 0, 0, 2, 3, 4];\r\nfunction getChiefTeamBidMade(playerCount: number, points: number): number {\r\n  let currentPoints = 62 - playerCount; // Hacky, but works, as 4 player = 58, 5 player = 57, 6 player = 56\r\n  let currentBid = 60 / playerCount;\r\n  while (currentPoints > points) {\r\n    currentBid--;\r\n    currentPoints -= PointsPerBid[playerCount];\r\n  }\r\n\r\n  return Math.max(0, currentBid);\r\n}\r\n\r\nfunction getChiefTeamBonus(overTrump: Trumps, bid: number): number {\r\n  switch (overTrump) {\r\n    case Trumps.Black:\r\n    case Trumps.Blue:\r\n    case Trumps.Green:\r\n    case Trumps.Red:\r\n    case Trumps.Yellow:\r\n      return 10 * Math.min(10, bid);\r\n\r\n    case Trumps.One:\r\n    case Trumps.Seven:\r\n      return 10 + 10 * Math.min(9, bid);\r\n\r\n    case Trumps.None:\r\n      return 30 + 10 * Math.min(7, bid);\r\n  }\r\n\r\n  // 0, 2, 3, 4, 5, 6, 8, 9\r\n  return 20 + 10 * Math.min(6, bid);\r\n}\r\n\r\ninterface IScoreHandDialogMappedProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IScoreHandDialogProps {\r\n  showDialog: boolean;\r\n  onClose(): void;\r\n}\r\n\r\ninterface IScoreHandDialogActions {\r\n  addScore(name: string, value: number): void;\r\n}\r\n\r\ntype IAllScoreHandDialogProps =\r\n  IScoreHandDialogMappedProps &\r\n  IScoreHandDialogProps &\r\n  IScoreHandDialogActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IScoreHandDialogState {\r\n  bid: number;\r\n  overTrump: Trumps;\r\n  underTrump: Trumps;\r\n  chief: string;\r\n  vice: string;\r\n  partner: string;\r\n  points: Record<string, string>;\r\n}\r\n\r\nclass ScoreHandDialog extends React.Component<IAllScoreHandDialogProps, IScoreHandDialogState> {\r\n  constructor(p: IAllScoreHandDialogProps) {\r\n    super(p);\r\n\r\n    this.state = this.getDefaultState();\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IAllScoreHandDialogProps): void {\r\n    if (!prevProps.showDialog && this.props.showDialog) {\r\n      this.setState(this.getDefaultState());\r\n    }\r\n  }\r\n\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <Mui.Dialog open={this.props.showDialog} maxWidth='sm' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogContent>\r\n            <Mui.Grid container={true} spacing={2}>\r\n              <Mui.Grid item={true} sm={4} xs={12}>\r\n                <Mui.Typography>Bid</Mui.Typography>\r\n                <Mui.Slider\r\n                  value={this.state.bid}\r\n                  onChange={this.handleBidChanged}\r\n                  min={1}\r\n                  max={60 / this.props.names.length}\r\n                  step={1}\r\n                  valueLabelDisplay='on'\r\n                  marks={true}\r\n                />\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} sm={4} xs={12}>\r\n                <TrumpSelector label='Over Trump' trump={this.state.overTrump} onTrumpChanged={this.handleOverTrumpChanged}/>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} sm={4} xs={12}>\r\n              <TrumpSelector label='Under Trump' trump={this.state.underTrump} onTrumpChanged={this.handleUnderTrumpChanged}/>\r\n              </Mui.Grid>\r\n\r\n              <Mui.Grid item={true} xs={2}>Name</Mui.Grid>\r\n              <Mui.Grid item={true} xs={2}>Chief</Mui.Grid>\r\n              <Mui.Grid item={true} xs={2}>Vice</Mui.Grid>\r\n              <Mui.Grid item={true} xs={2}>Partner</Mui.Grid>\r\n              <Mui.Grid item={true} xs={4}></Mui.Grid>\r\n              <Mui.Grid item={true} xs={12}><Mui.Divider /></Mui.Grid>\r\n\r\n              {this.props.names.map((name) => this.createPlayerRow(name))}\r\n            </Mui.Grid>\r\n          </Mui.DialogContent>\r\n\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              onClick={this.handleUpdateScore}\r\n              variant='contained'\r\n              color='primary'\r\n              disabled={!this.canSave()}\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private getDefaultState(): IScoreHandDialogState {\r\n    const points: Record<string, string> = {};\r\n    for (const name of this.props.names) {\r\n      points[name] = '0';\r\n    }\r\n\r\n    return {\r\n      bid: 1,\r\n      overTrump: Trumps.Black,\r\n      underTrump: Trumps.Blue,\r\n      chief: '',\r\n      vice: '',\r\n      partner: '',\r\n      points,\r\n    };\r\n  }\r\n\r\n  @bind\r\n  private handlePointsChange(name: string, value: string): void {\r\n    const newPoints = Object.assign({}, this.state.points);\r\n    newPoints[name] = value;\r\n    this.setState({\r\n      points: newPoints,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleChief(name: string): void {\r\n    this.setState({\r\n      chief: name,\r\n      vice: (this.state.vice === name) ? '' : this.state.vice,\r\n      partner: (this.state.partner === name) ? '' : this.state.partner,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleVice(name: string): void {\r\n    this.setState({\r\n      chief: (this.state.chief === name) ? '' : this.state.chief,\r\n      vice: name,\r\n      partner: (this.state.partner === name) ? '' : this.state.partner,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handlePartner(name: string): void {\r\n    this.setState({\r\n      chief: (this.state.chief === name) ? '' : this.state.chief,\r\n      vice: (this.state.vice === name) ? '' : this.state.vice,\r\n      partner: name,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleOverTrumpChanged(value: Trumps): void {\r\n    this.setState({\r\n      overTrump: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUnderTrumpChanged(value: Trumps): void {\r\n    this.setState({\r\n      underTrump: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateScore(): void {\r\n    // First check to see if the chief team made it\r\n    const chiefTeamPoints = parseInt(this.state.points[this.state.chief], 10) + parseInt(this.state.points[this.state.partner], 10);\r\n    const chiefTeamBidMade = getChiefTeamBidMade(this.props.names.length, chiefTeamPoints);\r\n\r\n    if (chiefTeamBidMade >= this.state.bid) {\r\n      // Chief made it!\r\n      for (const name of this.props.names) {\r\n        let score: number = parseInt(this.state.points[name], 10);\r\n        if (name === this.state.chief || name === this.state.partner) {\r\n          score += getChiefTeamBonus(this.state.overTrump, this.state.bid);\r\n        }\r\n\r\n        this.props.addScore(name, score);\r\n      }\r\n    } else {\r\n      // Chief missed it!\r\n      const missedBy = this.state.bid - chiefTeamBidMade;\r\n      for (const name of this.props.names) {\r\n        let score: number = parseInt(this.state.points[name], 10);\r\n        if (name === this.state.chief) {\r\n          score -= 10 * missedBy;\r\n        } else if (name !== this.state.partner) {\r\n          score += 5 * missedBy;\r\n        }\r\n\r\n        this.props.addScore(name, score);\r\n      }\r\n    }\r\n\r\n    this.props.onClose();\r\n  }\r\n\r\n  @bind\r\n  private createPlayerRow(name: string): JSX.Element {\r\n    return (\r\n      <React.Fragment key={name}>\r\n        <Mui.Grid className={this.props.classes.center} item={true} xs={2}>{name}</Mui.Grid>\r\n        <Mui.Grid item={true} xs={2}><Mui.Checkbox onClick={() => this.handleChief(name)} checked={this.state.chief === name} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={2}><Mui.Checkbox onClick={() => this.handleVice(name)} checked={this.state.vice === name} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={2}><Mui.Checkbox onClick={() => this.handlePartner(name)} checked={this.state.partner === name} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={4}>\r\n          <Mui.TextField\r\n            type='number'\r\n            value={this.state.points[name]}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => this.handlePointsChange(name, event.target.value)}\r\n            label='Points'\r\n            fullWidth={true}\r\n          />\r\n        </Mui.Grid>\r\n        <Mui.Grid item={true} xs={12}><Mui.Divider /></Mui.Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private canSave(): boolean {\r\n    if (this.state.chief.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    if (this.state.partner.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    let sum: number = 0;\r\n    for (const name of this.props.names) {\r\n      sum += parseInt(this.state.points[name], 10);\r\n    }\r\n\r\n    if (sum !== 60) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  @bind\r\n  private handleBidChanged(event: React.ChangeEvent<{}>, value: number | number[]): void {\r\n    if (Array.isArray(value)) {\r\n      value = value[value.length - 1];\r\n    }\r\n\r\n    this.setState({\r\n      bid: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.props.onClose();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreHandDialogMappedProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreHandDialogActions => ({\r\n  addScore: (name: string, value: number) => dispatch(mu.addScore(name, value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreHandDialog));\r\n","export enum QwixxRanks {\r\n  Red = 'Red',\r\n  Yellow = 'Yellow',\r\n  Green = 'Green',\r\n  Blue = 'Blue',\r\n\r\n  Negative = 'Negative',\r\n}\r\n\r\nexport interface IQwixxState {\r\n  readonly isLocked: Record<QwixxRanks, boolean>;\r\n  readonly values: Record<QwixxRanks, number[]>;\r\n}\r\n\r\nexport const QWIXX_RESET_ALL = 'QWIXX_RESET_ALL';\r\nexport const QWIXX_ADD_VALUE = 'QWIXX_ADD_VALUE';\r\nexport const QWIXX_REMOVE_VALUE = 'QWIXX_REMOVE_VALUE';\r\nexport const QWIXX_LOCK = 'QWIXX_LOCK';\r\nexport const QWIXX_UNLOCK = 'QWIXX_UNLOCK';\r\n\r\nexport interface IQwixxAddValueAction {\r\n  rank: QwixxRanks;\r\n  number: number;\r\n  type: typeof QWIXX_ADD_VALUE;\r\n}\r\n\r\nexport interface IQwixxRemoveValueAction {\r\n  rank: QwixxRanks;\r\n  number: number;\r\n  type: typeof QWIXX_REMOVE_VALUE;\r\n}\r\n\r\nexport interface IQwixxResetAllAction {\r\n  type: typeof QWIXX_RESET_ALL;\r\n}\r\n\r\nexport interface IQwixxLockAction {\r\n  rank: QwixxRanks;\r\n  type: typeof QWIXX_LOCK;\r\n}\r\n\r\nexport interface IQwixxUnlockAction {\r\n  rank: QwixxRanks;\r\n  type: typeof QWIXX_UNLOCK;\r\n}\r\n\r\nexport type QwixxActionTypes =\r\n  IQwixxAddValueAction |\r\n  IQwixxRemoveValueAction |\r\n  IQwixxResetAllAction |\r\n  IQwixxLockAction |\r\n  IQwixxUnlockAction;\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { bind } from 'decko';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as mu from 'Store/Mu';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  center: {\r\n    marginTop: 8,\r\n  },\r\n});\r\n\r\ninterface IStalemateDialogMappedProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IStalemateDialogProps {\r\n  showDialog: boolean;\r\n  onClose(): void;\r\n}\r\n\r\ninterface IStalemateDialogActions {\r\n  addScore(name: string, value: number): void;\r\n}\r\n\r\ntype IAllStalemateDialogProps =\r\n  IStalemateDialogMappedProps &\r\n  IStalemateDialogProps &\r\n  IStalemateDialogActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IStalemateDialogState {\r\n  bid: number;\r\n  lastBidder: string;\r\n  highestBidders: string[];\r\n}\r\n\r\nclass StalemateDialog extends React.Component<IAllStalemateDialogProps, IStalemateDialogState> {\r\n  constructor(p: IAllStalemateDialogProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      bid: 1,\r\n      lastBidder: '',\r\n      highestBidders: [],\r\n    };\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IAllStalemateDialogProps): void {\r\n    if (!prevProps.showDialog && this.props.showDialog) {\r\n      this.setState({\r\n        bid: 1,\r\n        lastBidder: '',\r\n        highestBidders: [],\r\n      });\r\n    }\r\n  }\r\n\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <Mui.Dialog open={this.props.showDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n        <Mui.DialogContent>\r\n          <Mui.Grid container={true}>\r\n            <Mui.Grid item={true} xs={12}>\r\n              <Mui.Typography>Bid</Mui.Typography>\r\n              <Mui.Slider\r\n                value={this.state.bid}\r\n                onChange={this.handleBidChanged}\r\n                min={1}\r\n                max={60 / this.props.names.length}\r\n                step={1}\r\n                valueLabelDisplay='on'\r\n                marks={true}\r\n              />\r\n            </Mui.Grid>\r\n\r\n            <Mui.Grid item={true} xs={4}>Name</Mui.Grid>\r\n            <Mui.Grid item={true} xs={4}>Last Bidder</Mui.Grid>\r\n            <Mui.Grid item={true} xs={4}>Highest Bidder</Mui.Grid>\r\n            <Mui.Grid item={true} xs={12}><Mui.Divider /></Mui.Grid>\r\n\r\n            {this.props.names.map((name) => this.createStalemateRow(name))}\r\n          </Mui.Grid>\r\n        </Mui.DialogContent>\r\n\r\n        <Mui.DialogActions>\r\n          <Mui.Button\r\n            variant='contained'\r\n            color='primary'\r\n            onClick={this.handleDialogClose}\r\n          >\r\n            Cancel\r\n            </Mui.Button>\r\n\r\n          <Mui.Button\r\n            onClick={this.handleUpdateStalemate}\r\n            variant='contained'\r\n            color='primary'\r\n            disabled={!this.canSave()}\r\n          >\r\n            Add\r\n            </Mui.Button>\r\n        </Mui.DialogActions>\r\n      </Mui.Dialog>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateStalemate(): void {\r\n    for (const name of this.props.names) {\r\n      if (this.state.lastBidder === name) {\r\n        this.props.addScore(name, -10 * this.state.bid);\r\n      } else if (this.state.highestBidders.indexOf(name) > -1) {\r\n        this.props.addScore(name, 5 * this.state.bid);\r\n      }\r\n    }\r\n\r\n    this.props.onClose();\r\n  }\r\n\r\n  @bind\r\n  private handleLastBidder(name: string): void {\r\n    const included = this.state.highestBidders.indexOf(name) !== -1;\r\n\r\n    this.setState({\r\n      lastBidder: name,\r\n      highestBidders: included ? this.state.highestBidders.filter((item) => item !== name) : this.state.highestBidders,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleHighestBidder(name: string): void {\r\n    const included = this.state.highestBidders.indexOf(name) !== -1;\r\n    if (included) {\r\n      this.setState({\r\n        highestBidders: this.state.highestBidders.filter((item) => item !== name),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        lastBidder: name === this.state.lastBidder ? '' : this.state.lastBidder,\r\n        highestBidders: this.state.highestBidders.concat(name),\r\n      });\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private createStalemateRow(name: string): JSX.Element {\r\n    return (\r\n      <React.Fragment key={name}>\r\n        <Mui.Grid className={this.props.classes.center} item={true} xs={4}>{name}</Mui.Grid>\r\n        <Mui.Grid item={true} xs={4}><Mui.Checkbox onClick={() => this.handleLastBidder(name)} checked={this.state.lastBidder === name} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={4}><Mui.Checkbox onClick={() => this.handleHighestBidder(name)} checked={this.state.highestBidders.indexOf(name) !== -1} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={12}><Mui.Divider /></Mui.Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private canSave(): boolean {\r\n    return this.state.highestBidders.length > 0 && this.state.lastBidder.length > 0;\r\n  }\r\n\r\n  @bind\r\n  private handleBidChanged(event: React.ChangeEvent<{}>, value: number | number[]): void {\r\n    if (Array.isArray(value)) {\r\n      value = value[value.length - 1];\r\n    }\r\n\r\n    this.setState({\r\n      bid: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.props.onClose();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IStalemateDialogMappedProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IStalemateDialogActions => ({\r\n  addScore: (name: string, value: number) => dispatch(mu.addScore(name, value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(StalemateDialog));\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { bind } from 'decko';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as mu from 'Store/Mu';\r\nimport ScoreCard from './ScoreCard';\r\nimport ScoreHandDialog from './ScoreHandDialog';\r\nimport StalemateDialog from './StalemateDialog';\r\nimport ConfirmationDialog from '../ConfirmationDialog';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  muWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  buttonSpacing: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n});\r\n\r\ninterface IMuProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IMuActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllMuProps =\r\n  IMuProps &\r\n  IMuActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IMuState {\r\n  showStalemateDialog: boolean;\r\n  showScoreDialog: boolean;\r\n  showConfirmationDialog: boolean;\r\n}\r\n\r\nclass Mu extends React.Component<IAllMuProps, IMuState> {\r\n  constructor(p: IAllMuProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showScoreDialog: false,\r\n      showStalemateDialog: false,\r\n      showConfirmationDialog: false,\r\n    };\r\n  }\r\n\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    if (this.props.names.length < 4) {\r\n      return (\r\n        <React.Fragment>\r\n          <Mui.Typography variant='h5'>\r\n            This tab can be used to track scores for the game of Mü.\r\n          </Mui.Typography>\r\n          <Mui.Typography variant='h6'>\r\n            <b>NOTE:</b> You currently have less than 4 players defined.  To add new players, click <Link color='secondary' to='/'>here</Link> to return home.  You will find the option to add and remove players at the bottom.\r\n          </Mui.Typography>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    if (this.props.names.length > 6) {\r\n      return (\r\n        <React.Fragment>\r\n          <Mui.Typography variant='h5'>\r\n          This tab can be used to track scores for the game of Mü.\r\n          </Mui.Typography>\r\n          <Mui.Typography variant='h6'>\r\n            <b>NOTE:</b> You currently have more than 6 players defined.  To remove players, click <Link color='secondary' to='/'>here</Link> to return home.  You will find the option to add and remove players at the bottom.\r\n          </Mui.Typography>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleScoreHand}>Score Hand</Mui.Button>\r\n        <Mui.Button className={this.props.classes.buttonSpacing} color='primary' variant='contained' onClick={this.handleStalemate}>Stalemate</Mui.Button>\r\n        <div className={this.props.classes.muWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n\r\n        <ScoreHandDialog onClose={this.handleDialogClose} showDialog={this.state.showScoreDialog} />\r\n        <StalemateDialog onClose={this.handleDialogClose} showDialog={this.state.showStalemateDialog} />\r\n        <ConfirmationDialog onClose={this.handleConfirmation} showDialog={this.state.showConfirmationDialog}/>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showScoreDialog: false,\r\n      showStalemateDialog: false,\r\n      showConfirmationDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleScoreHand(): void {\r\n    this.setState({\r\n      showScoreDialog: true,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleStalemate(): void {\r\n    this.setState({\r\n      showStalemateDialog: true,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleConfirmation(answer: boolean): void {\r\n    if (answer) {\r\n      this.props.reset();\r\n    }\r\n\r\n    this.setState({\r\n      showConfirmationDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.setState({\r\n      showConfirmationDialog: true,\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IMuProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IMuActions => ({\r\n  reset: () => dispatch(mu.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Mu));\r\n","import * as types from './Types';\r\n\r\nexport function addValue(rank: types.QwixxRanks, number: number): types.QwixxActionTypes {\r\n  return {\r\n    rank,\r\n    number,\r\n    type: types.QWIXX_ADD_VALUE,\r\n  };\r\n}\r\n\r\nexport function removeValue(rank: types.QwixxRanks, number: number): types.QwixxActionTypes {\r\n  return {\r\n    rank,\r\n    number,\r\n    type: types.QWIXX_REMOVE_VALUE,\r\n  };\r\n}\r\n\r\nexport function lock(rank: types.QwixxRanks): types.QwixxActionTypes {\r\n  return {\r\n    rank,\r\n    type: types.QWIXX_LOCK,\r\n  };\r\n}\r\n\r\nexport function unlock(rank: types.QwixxRanks): types.QwixxActionTypes {\r\n  return {\r\n    rank,\r\n    type: types.QWIXX_UNLOCK,\r\n  };\r\n}\r\n\r\nexport function resetAll(): types.QwixxActionTypes {\r\n  return {\r\n    type: types.QWIXX_RESET_ALL,\r\n  };\r\n}\r\n","export enum SplitRanks {\r\n  A = 'A',\r\n  K = 'K',\r\n  Q = 'Q',\r\n  J = 'J',\r\n  Ten = '10',\r\n  Nine = '9',\r\n  Eight = '8',\r\n  Seven = '7',\r\n  Six = '6',\r\n  Five = '5',\r\n  Four = '4',\r\n  Three = '3',\r\n  Two = '2',\r\n\r\n  Negative = 'Negative',\r\n}\r\n\r\nexport interface ISplitScore {\r\n  readonly values: Record<SplitRanks, number>;\r\n}\r\n\r\nexport interface ISplitState {\r\n  readonly scores: Record<string, ISplitScore>;\r\n}\r\n\r\nexport const SPLIT_RESET_ALL = 'SPLIT_RESET_ALL';\r\nexport const SPLIT_ADD_VALUE = 'SPLIT_ADD_VALUE';\r\nexport const SPLIT_REMOVE_VALUE = 'SPLIT_REMOVE_VALUE';\r\n\r\nexport interface ISplitAddValueAction {\r\n  name: string;\r\n  rank: SplitRanks;\r\n  type: typeof SPLIT_ADD_VALUE;\r\n}\r\n\r\nexport interface ISplitRemoveValueAction {\r\n  name: string;\r\n  rank: SplitRanks;\r\n  type: typeof SPLIT_REMOVE_VALUE;\r\n}\r\n\r\nexport interface ISplitResetAllAction {\r\n  type: typeof SPLIT_RESET_ALL;\r\n}\r\n\r\nexport type SplitActionTypes =\r\n  ISplitAddValueAction |\r\n  ISplitRemoveValueAction |\r\n  ISplitResetAllAction;\r\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport LockIcon from '@material-ui/icons/LockTwoTone';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpenTwoTone';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as qwixx from 'Store/Qwixx';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    padding: theme.spacing(1),\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n  },\r\n  button: {\r\n    color: 'black',\r\n    fontWeight: 'bold',\r\n    fontSize: 24,\r\n    textShadow: '-1px 1px 2px white, -1px -1px 2px white, 1px -1px 2px white, 1px 1px 2px white',\r\n  },\r\n  disabledButton: {\r\n    color: '#BBBBBB',\r\n    fontWeight: 'bold',\r\n    fontSize: 24,\r\n    textShadow: '-1px 1px 2px white, -1px -1px 2px white, 1px -1px 2px white, 1px 1px 2px white',\r\n  },\r\n});\r\n\r\ninterface IColorRowProps {\r\n  color: qwixx.QwixxRanks;\r\n}\r\n\r\ninterface IColorRowMappedProps {\r\n  readonly isLocked: Record<qwixx.QwixxRanks, boolean>;\r\n  readonly values: Record<qwixx.QwixxRanks, number[]>;\r\n}\r\n\r\ninterface IColorRowActions {\r\n  addValue(rank: qwixx.QwixxRanks, number: number): void;\r\n  removeValue(rank: qwixx.QwixxRanks, number: number): void;\r\n  lock(rank: qwixx.QwixxRanks): void;\r\n  unlock(rank: qwixx.QwixxRanks): void;\r\n}\r\n\r\ntype IAllColorRowProps =\r\n  IColorRowProps &\r\n  IColorRowMappedProps &\r\n  IColorRowActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass ColorRow extends React.Component<IAllColorRowProps, {}> {\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    if (this.props.color === qwixx.QwixxRanks.Negative) {\r\n      return this.renderNegative();\r\n    }\r\n\r\n    const isRedOrYellow: boolean = (this.props.color === qwixx.QwixxRanks.Red) || (this.props.color === qwixx.QwixxRanks.Yellow);\r\n\r\n    const buttonList: React.ReactNode[] = [];\r\n    for (let index = 2; index <= 12; index += 1) {\r\n      buttonList.push(this.getButton(index));\r\n    }\r\n\r\n    if (!isRedOrYellow) {\r\n      buttonList.reverse();\r\n    }\r\n\r\n    return (\r\n      <Mui.Grid container={true} style={{backgroundColor: this.props.color}}>\r\n        {buttonList}\r\n\r\n        { this.getLockIcon() }\r\n      </Mui.Grid>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private renderNegative(): React.ReactNode {\r\n    const buttonList: React.ReactNode[] = [];\r\n\r\n    for (let index = 0; index < 4; index++) {\r\n      buttonList.push(this.getNegativeButton(index));\r\n    }\r\n\r\n    return (\r\n      <Mui.Grid container={true}>\r\n        {buttonList}\r\n\r\n        <Mui.Grid item={true} xs={1}></Mui.Grid>\r\n\r\n        {this.renderScore()}\r\n      </Mui.Grid>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private renderScore(): React.ReactNode {\r\n    const redScore: number = this.calcScore(qwixx.QwixxRanks.Red);\r\n    const yellowScore: number = this.calcScore(qwixx.QwixxRanks.Yellow);\r\n    const greenScore: number = this.calcScore(qwixx.QwixxRanks.Green);\r\n    const blueScore: number = this.calcScore(qwixx.QwixxRanks.Blue);\r\n    const negScore: number = this.calcScore(qwixx.QwixxRanks.Negative);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Grid item={true} xs={1}><Mui.Typography style={{color: 'red', marginTop: 5}} variant='h4'>{redScore}</Mui.Typography></Mui.Grid>\r\n        <Mui.Grid item={true} xs={1}><Mui.Typography style={{color: 'yellow', marginTop: 5}} variant='h4'>{yellowScore}</Mui.Typography></Mui.Grid>\r\n        <Mui.Grid item={true} xs={1}><Mui.Typography style={{color: 'green', marginTop: 5}} variant='h4'>{greenScore}</Mui.Typography></Mui.Grid>\r\n        <Mui.Grid item={true} xs={1}><Mui.Typography style={{color: 'blue', marginTop: 5}} variant='h4'>{blueScore}</Mui.Typography></Mui.Grid>\r\n        <Mui.Grid item={true} xs={1}><Mui.Typography style={{color: '#BBBBBB', marginTop: 5}} variant='h4'>{negScore}</Mui.Typography></Mui.Grid>\r\n        <Mui.Grid item={true} xs={1}></Mui.Grid>\r\n        <Mui.Grid item={true} xs={1}><Mui.Typography style={{marginTop: 5}} variant='h4'>{redScore + yellowScore + greenScore + blueScore + negScore}</Mui.Typography></Mui.Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private calcScore(color: qwixx.QwixxRanks): number {\r\n    const scoreMap: number[] = [ 0, 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66, 78 ];\r\n    const values = this.props.values[color];\r\n\r\n    if (color === qwixx.QwixxRanks.Negative) {\r\n      return -5 * values.length;\r\n    }\r\n\r\n    const isRedOrYellow: boolean = (color === qwixx.QwixxRanks.Red) || (color === qwixx.QwixxRanks.Yellow);\r\n    var count = values.length;\r\n    if ((isRedOrYellow && values.includes(12)) || (!isRedOrYellow && values.includes(2)))\r\n    {\r\n      // They earned an extra X\r\n      count++;\r\n    }\r\n\r\n    return scoreMap[count];\r\n  }\r\n\r\n  @bind\r\n  private getNegativeButton(index: number): React.ReactNode {\r\n    const values = this.props.values[this.props.color];\r\n\r\n    if (values.includes(index)) {\r\n      return (\r\n        <Mui.Grid item={true} xs={1}><Mui.Button className={this.props.classes.disabledButton} onClick={() => this.removeValue(index)}>X</Mui.Button></Mui.Grid>\r\n      );\r\n    } else {\r\n      return (\r\n        <Mui.Grid item={true} xs={1}><Mui.Button className={this.props.classes.button} onClick={() => this.addValue(index)}>-5</Mui.Button></Mui.Grid>\r\n      );\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private getLockIcon(): React.ReactNode {\r\n    const icon = this.props.isLocked[this.props.color] ? <LockIcon/> : <LockOpenIcon/>;\r\n\r\n    return (\r\n      <Mui.Button className={this.props.classes.button} onClick={() => this.toggleLock()}>\r\n        { icon }\r\n      </Mui.Button>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private toggleLock(): void {\r\n    if (this.props.isLocked[this.props.color]) {\r\n      this.props.unlock(this.props.color);\r\n    } else {\r\n      this.props.lock(this.props.color);\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private getButton(index: number): React.ReactNode {\r\n    const values = this.props.values[this.props.color];\r\n    const isRedOrYellow: boolean = (this.props.color === qwixx.QwixxRanks.Red) || (this.props.color === qwixx.QwixxRanks.Yellow);\r\n\r\n    const highestValue: number = isRedOrYellow ? Math.max(...values) : Math.min(...values);\r\n\r\n    if (highestValue === index) {\r\n      let text: string = 'X';\r\n\r\n      if ((isRedOrYellow && index === 12) || (!isRedOrYellow && index === 2)) {\r\n        text = 'XX';\r\n      }\r\n      return (\r\n        <Mui.Grid item={true} xs={1}><Mui.Button className={this.props.classes.button} onClick={() => this.removeValue(index)}>{text}</Mui.Button></Mui.Grid>\r\n      );\r\n    } else if (values.includes(index)) {\r\n      return (\r\n        <Mui.Grid item={true} xs={1}><Mui.Button className={this.props.classes.button}>X</Mui.Button></Mui.Grid>\r\n      );\r\n    } else if (this.props.isLocked[this.props.color] || values.find((value) => (isRedOrYellow && value > index) || (!isRedOrYellow && value < index))) {\r\n      return (\r\n        <Mui.Grid item={true} xs={1}><Mui.Button className={this.props.classes.button}>--</Mui.Button></Mui.Grid>\r\n      );\r\n    } else {\r\n      let buttonClass: string = this.props.classes.button;\r\n      if (isRedOrYellow && index === 12 && values.length < 5) {\r\n        buttonClass = this.props.classes.disabledButton;\r\n      } else if (!isRedOrYellow && index === 2 && values.length < 5) {\r\n        buttonClass = this.props.classes.disabledButton;\r\n      }\r\n      return (\r\n        <Mui.Grid item={true} xs={1}><Mui.Button className={buttonClass} onClick={() => this.addValue(index)}>{index}</Mui.Button></Mui.Grid>\r\n      );\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private addValue(index: number): void {\r\n    const values = this.props.values[this.props.color];\r\n    const isRedOrYellow: boolean = (this.props.color === qwixx.QwixxRanks.Red) || (this.props.color === qwixx.QwixxRanks.Yellow);\r\n\r\n    if (this.props.color !== qwixx.QwixxRanks.Negative) {\r\n      if (isRedOrYellow && index === 12 && values.length < 5) {\r\n        return;\r\n      } else if (!isRedOrYellow && index === 2 && values.length < 5) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.props.addValue(this.props.color, index);\r\n  }\r\n\r\n  @bind\r\n  private removeValue(index: number): void {\r\n    this.props.removeValue(this.props.color, index);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IColorRowMappedProps => ({\r\n  isLocked: state.qwixx.isLocked,\r\n  values: state.qwixx.values,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IColorRowActions => ({\r\n  addValue: (rank: qwixx.QwixxRanks, number: number) => dispatch(qwixx.addValue(rank, number)),\r\n  removeValue: (rank: qwixx.QwixxRanks, number: number) => dispatch(qwixx.removeValue(rank, number)),\r\n  lock: (rank: qwixx.QwixxRanks) => dispatch(qwixx.lock(rank)),\r\n  unlock: (rank: qwixx.QwixxRanks) => dispatch(qwixx.unlock(rank)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ColorRow));\r\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as qwixx from 'Store/Qwixx';\r\nimport ColorRow from './ColorRow';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    padding: theme.spacing(1),\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  values: Record<qwixx.QwixxRanks, number[]>;\r\n}\r\n\r\ninterface IScoreCardActions {\r\n  addValue(rank: qwixx.QwixxRanks, number: number): void;\r\n  removeValue(rank: qwixx.QwixxRanks, number: number): void;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  IScoreCardActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, {}> {\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n        <Mui.Grid container={true}>\r\n          <Mui.Grid item={true} xs={12}>\r\n            <ColorRow color={qwixx.QwixxRanks.Red} />\r\n          </Mui.Grid>\r\n\r\n          <Mui.Grid item={true} xs={12}>\r\n            <ColorRow color={qwixx.QwixxRanks.Yellow} />\r\n          </Mui.Grid>\r\n\r\n          <Mui.Grid item={true} xs={12}>\r\n            <ColorRow color={qwixx.QwixxRanks.Green} />\r\n          </Mui.Grid>\r\n\r\n          <Mui.Grid item={true} xs={12}>\r\n            <ColorRow color={qwixx.QwixxRanks.Blue} />\r\n          </Mui.Grid>\r\n\r\n          <Mui.Grid item={true} xs={12}>\r\n            <ColorRow color={qwixx.QwixxRanks.Negative} />\r\n          </Mui.Grid>\r\n        </Mui.Grid>\r\n      </Mui.Paper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  values: state.qwixx.values,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreCardActions => ({\r\n  addValue: (rank: qwixx.QwixxRanks, number: number) => dispatch(qwixx.addValue(rank, number)),\r\n  removeValue: (rank: qwixx.QwixxRanks, number: number) => dispatch(qwixx.removeValue(rank, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { bind } from 'decko';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as qwixx from 'Store/Qwixx';\r\nimport ScoreCard from './ScoreCard';\r\nimport ConfirmationDialog from '../ConfirmationDialog';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  qwixxWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface IQwixxProps {\r\n}\r\n\r\ninterface IQwixxActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllQwixxProps =\r\n  IQwixxProps &\r\n  IQwixxActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IQwixxState {\r\n  showConfirmationDialog: boolean;\r\n}\r\n\r\nclass Qwixx extends React.Component<IAllQwixxProps, IQwixxState> {\r\n  constructor(p: IAllQwixxProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showConfirmationDialog: false,\r\n    };\r\n  }\r\n\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.qwixxWrapper}>\r\n          <ScoreCard />\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n        <ConfirmationDialog onClose={this.handleConfirmation} showDialog={this.state.showConfirmationDialog} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleConfirmation(answer: boolean): void {\r\n    if (answer) {\r\n      this.props.reset();\r\n    }\r\n\r\n    this.setState({\r\n      showConfirmationDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.setState({\r\n      showConfirmationDialog: true,\r\n    });\r\n  }\r\n}\r\nconst mapStateToProps = (state: AppState): IQwixxProps => ({\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IQwixxActions => ({\r\n  reset: () => dispatch(qwixx.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Qwixx));\r\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as split from 'Store/Split';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 360,\r\n    minWidth: 360,\r\n    padding: theme.spacing(1),\r\n  },\r\n  avatar: {\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    height: 30,\r\n    width: 30,\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  selectedAvatar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText,\r\n  },\r\n  row: {\r\n    marginTop: theme.spacing(0.25),\r\n    marginBottom: theme.spacing(0.25),\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, split.ISplitScore>;\r\n}\r\n\r\ninterface IScoreCardActions {\r\n  addValue(name: string, rank: split.SplitRanks): void;\r\n  removeValue(name: string, rank: split.SplitRanks): void;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  IScoreCardActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nconst ValueMap: Record<split.SplitRanks, number[]> = {\r\n  A: [0, 30, 70, 120, 180, 200],\r\n  K: [0, 20, 50, 90, 140, 200],\r\n  Q: [0, 20, 50, 90, 140, 200],\r\n  J: [0, 20, 50, 90, 140, 200],\r\n  10: [0, 10, 30, 60, 100, 200],\r\n  9: [0, 10, 30, 60, 100, 200],\r\n  8: [0, 10, 30, 60, 100, 200],\r\n  7: [0, 10, 30, 60, 100, 200],\r\n  6: [0, 10, 30, 60, 100, 200],\r\n  5: [0, 10, 30, 60, 100, 200],\r\n  4: [0, 10, 30, 60, 100, 200],\r\n  3: [0, 10, 30, 60, 100, 200],\r\n  2: [0, 5, 20, 40, 70, 200],\r\n\r\n  Negative: [],\r\n};\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, {}> {\r\n  private readonly ScoreName: string = 'SplitScore';\r\n\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    const myScore: split.ISplitScore = this.props.scores[this.ScoreName];\r\n\r\n    return (\r\n      <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n        <Mui.Grid container={true}>\r\n          <Mui.Grid item={true} xs={6} className={this.props.classes.right}>\r\n            <Mui.Typography variant='h5'>\r\n              Total:\r\n            </Mui.Typography>\r\n          </Mui.Grid>\r\n          <Mui.Grid item={true} xs={6} className={this.props.classes.center}>\r\n            <Mui.Typography variant='h5'>\r\n              {this.calculateScore(myScore)}\r\n            </Mui.Typography>\r\n          </Mui.Grid>\r\n        </Mui.Grid>\r\n        <Mui.Divider variant='middle' />\r\n        {this.createRow(myScore, split.SplitRanks.A)}\r\n        {this.createRow(myScore, split.SplitRanks.K)}\r\n        {this.createRow(myScore, split.SplitRanks.Q)}\r\n        {this.createRow(myScore, split.SplitRanks.J)}\r\n        {this.createRow(myScore, split.SplitRanks.Ten)}\r\n        {this.createRow(myScore, split.SplitRanks.Nine)}\r\n        {this.createRow(myScore, split.SplitRanks.Eight)}\r\n        {this.createRow(myScore, split.SplitRanks.Seven)}\r\n        {this.createRow(myScore, split.SplitRanks.Six)}\r\n        {this.createRow(myScore, split.SplitRanks.Five)}\r\n        {this.createRow(myScore, split.SplitRanks.Four)}\r\n        {this.createRow(myScore, split.SplitRanks.Three)}\r\n        {this.createRow(myScore, split.SplitRanks.Two)}\r\n        <Mui.Grid container={true} justify='center' alignItems='center' className={this.props.classes.row}>\r\n          <Mui.Grid item={true} xs={4}>\r\n            <Mui.Button variant='outlined' onClick={() => this.handleIncrease(split.SplitRanks.Negative)}>\r\n              -5\r\n            </Mui.Button>\r\n          </Mui.Grid>\r\n          <Mui.Grid item={true} xs={4} className={this.props.classes.center}>\r\n            <Mui.Typography variant='h5'>{this.getRankValues(myScore, split.SplitRanks.Negative)}</Mui.Typography>\r\n          </Mui.Grid>\r\n          <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n            <Mui.Button variant='outlined' onClick={() => this.handleDecrease(split.SplitRanks.Negative)}>\r\n              +5\r\n        </Mui.Button>\r\n          </Mui.Grid>\r\n        </Mui.Grid>\r\n      </Mui.Paper>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private getRankValues(myScore: split.ISplitScore, rank: split.SplitRanks): number {\r\n    const index = myScore ? myScore.values[rank] : 0;\r\n\r\n    if (rank === split.SplitRanks.Negative) {\r\n      return -5 * index;\r\n    }\r\n\r\n    return ValueMap[rank][index];\r\n  }\r\n\r\n  @bind\r\n  private calculateScore(myScore: split.ISplitScore): number {\r\n    return this.getRankValues(myScore, split.SplitRanks.Negative) +\r\n      this.getRankValues(myScore, split.SplitRanks.A) +\r\n      this.getRankValues(myScore, split.SplitRanks.K) +\r\n      this.getRankValues(myScore, split.SplitRanks.Q) +\r\n      this.getRankValues(myScore, split.SplitRanks.J) +\r\n      this.getRankValues(myScore, split.SplitRanks.Ten) +\r\n      this.getRankValues(myScore, split.SplitRanks.Nine) +\r\n      this.getRankValues(myScore, split.SplitRanks.Eight) +\r\n      this.getRankValues(myScore, split.SplitRanks.Seven) +\r\n      this.getRankValues(myScore, split.SplitRanks.Six) +\r\n      this.getRankValues(myScore, split.SplitRanks.Five) +\r\n      this.getRankValues(myScore, split.SplitRanks.Four) +\r\n      this.getRankValues(myScore, split.SplitRanks.Three) +\r\n      this.getRankValues(myScore, split.SplitRanks.Two);\r\n  }\r\n\r\n  @bind\r\n  private handleIncrease(rank: split.SplitRanks): void {\r\n    this.props.addValue(this.ScoreName, rank);\r\n  }\r\n\r\n  @bind\r\n  private handleDecrease(rank: split.SplitRanks): void {\r\n    this.props.removeValue(this.ScoreName, rank);\r\n  }\r\n\r\n  @bind\r\n  private createRow(myScore: split.ISplitScore, rank: split.SplitRanks): JSX.Element {\r\n    const selectedIndex = myScore ? myScore.values[rank] : 0;\r\n\r\n    const avatars: JSX.Element[] = [];\r\n    for (let index = 0; index < 6; index++) {\r\n      let avatarClass = this.props.classes.avatar;\r\n      if (index === selectedIndex) {\r\n        avatarClass = `${avatarClass} ${this.props.classes.selectedAvatar}`;\r\n      }\r\n\r\n      avatars.push(<Mui.Avatar key={`${rank.toString()}-${index}`} className={avatarClass}>{ValueMap[rank][index]}</Mui.Avatar>);\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Grid container={true} justify='center' alignItems='center' className={this.props.classes.row}>\r\n          <Mui.Button variant='outlined' onClick={() => this.handleIncrease(rank)} style={{ marginRight: 10 }}>\r\n            {rank.toString()}\r\n          </Mui.Button>\r\n          {avatars}\r\n        </Mui.Grid>\r\n        <Mui.Divider />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.split.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreCardActions => ({\r\n  addValue: (name: string, rank: split.SplitRanks) => dispatch(split.addValue(name, rank)),\r\n  removeValue: (name: string, rank: split.SplitRanks) => dispatch(split.removeValue(name, rank)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as types from './Types';\r\n\r\nexport function addValue(name: string, rank: types.SplitRanks): types.SplitActionTypes {\r\n  return {\r\n    name,\r\n    rank,\r\n    type: types.SPLIT_ADD_VALUE,\r\n  };\r\n}\r\n\r\nexport function removeValue(name: string, rank: types.SplitRanks): types.SplitActionTypes {\r\n  return {\r\n    name,\r\n    rank,\r\n    type: types.SPLIT_REMOVE_VALUE,\r\n  };\r\n}\r\n\r\nexport function resetAll(): types.SplitActionTypes {\r\n  return {\r\n    type: types.SPLIT_RESET_ALL,\r\n  };\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { bind } from 'decko';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as split from 'Store/Split';\r\nimport ScoreCard from './ScoreCard';\r\nimport ConfirmationDialog from '../ConfirmationDialog';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  splitWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface ISplitProps {\r\n}\r\n\r\ninterface ISplitActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllSplitProps =\r\n  ISplitProps &\r\n  ISplitActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface ISplitState {\r\n  showConfirmationDialog: boolean;\r\n}\r\n\r\nclass Split extends React.Component<IAllSplitProps, ISplitState> {\r\n  constructor(p: IAllSplitProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showConfirmationDialog: false,\r\n    };\r\n  }\r\n\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.splitWrapper}>\r\n          <ScoreCard />\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n        <ConfirmationDialog onClose={this.handleConfirmation} showDialog={this.state.showConfirmationDialog} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleConfirmation(answer: boolean): void {\r\n    if (answer) {\r\n      this.props.reset();\r\n    }\r\n\r\n    this.setState({\r\n      showConfirmationDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.setState({\r\n      showConfirmationDialog: true,\r\n    });\r\n  }\r\n}\r\nconst mapStateToProps = (state: AppState): ISplitProps => ({\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): ISplitActions => ({\r\n  reset: () => dispatch(split.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Split));\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { bind } from 'decko';\r\n\r\nimport Home from '../Home';\r\nimport About from '../About/About';\r\nimport Generic from '../Generic';\r\nimport MilleBornes from '../MilleBornes';\r\nimport Mu from '../Mu';\r\nimport Qwixx from '../Qwixx';\r\nimport Split from '../Split';\r\n\r\nclass Main extends React.Component<{}, {}> {\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <Mui.Box m={2}>\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route exact path='/split' component={Split} />\r\n          <Route exact path='/millebornes' component={MilleBornes} />\r\n          <Route exact path='/mu' component={Mu} />\r\n          <Route exact path='/qwixx' component={Qwixx} />\r\n          <Route exact path='/generic' component={Generic} />\r\n          <Route exactpath='/about' component={About} />\r\n        </Switch>\r\n      </Mui.Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import * as React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { bind } from 'decko';\r\n\r\nimport { AppState } from 'Store';\r\nimport { Themes } from 'Theme';\r\nimport * as system from 'Store/System';\r\nimport Header from '../Header';\r\nimport Main from '../Main';\r\n\r\ninterface IAppProps {\r\n  selectedTheme: system.ThemeOptions;\r\n}\r\n\r\nclass App extends React.Component<IAppProps, {}> {\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    const currentTheme = Themes.getTheme(this.props.selectedTheme);\r\n\r\n    return (\r\n      <ThemeProvider theme={currentTheme}>\r\n        <CssBaseline />\r\n        <Header />\r\n        <Main />\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IAppProps => ({\r\n  selectedTheme: state.system.selectedTheme,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): {} => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.IGenericState = {\r\n  scores: {},\r\n};\r\n\r\nexport function genericReducer(state = initialState, action: types.GenericActionTypes): types.IGenericState {\r\n  return produce(state, (draft: Draft<types.IGenericState>) => {\r\n    switch (action.type) {\r\n      case types.GENERIC_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.GENERIC_ADD_SCORE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = 0;\r\n        }\r\n\r\n        draft.scores[action.name] = draft.scores[action.name] + action.value;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.IMilleBornesState = {\r\n  scores: {},\r\n};\r\n\r\nexport function milleBornesReducer(state = initialState, action: types.MilleBornesActionTypes): types.IMilleBornesState {\r\n  return produce(state, (draft: Draft<types.IMilleBornesState>) => {\r\n    switch (action.type) {\r\n      case types.MILLE_BORNES_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.MILLE_BORNES_ADD_SCORE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = 0;\r\n        }\r\n\r\n        draft.scores[action.name] = draft.scores[action.name] + action.value;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.IMuState = {\r\n  scores: {},\r\n};\r\n\r\nexport function muReducer(state = initialState, action: types.MuActionTypes): types.IMuState {\r\n  return produce(state, (draft: Draft<types.IMuState>) => {\r\n    switch (action.type) {\r\n      case types.MU_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.MU_ADD_SCORE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = 0;\r\n        }\r\n\r\n        draft.scores[action.name] = draft.scores[action.name] + action.value;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.ISplitState = {\r\n  scores: {},\r\n};\r\n\r\nfunction createEmptyScore(): Record<types.SplitRanks, number> {\r\n  return { A: 0, K: 0, Q: 0, J: 0, 10: 0, 9: 0, 8: 0, 7: 0, 6: 0, 5: 0, 4: 0, 3: 0, 2: 0, Negative: 0};\r\n}\r\n\r\nexport function splitReducer(state = initialState, action: types.SplitActionTypes): types.ISplitState {\r\n  return produce(state, (draft: Draft<types.ISplitState>) => {\r\n    switch (action.type) {\r\n      case types.SPLIT_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.SPLIT_ADD_VALUE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = {\r\n            values: createEmptyScore(),\r\n          };\r\n        }\r\n\r\n        const value = draft.scores[action.name].values[action.rank];\r\n        const max: number = (action.rank === types.SplitRanks.Negative) ? 500 : 6;\r\n        draft.scores[action.name].values[action.rank] = (value + 1) % max;\r\n        break;\r\n      }\r\n      case types.SPLIT_REMOVE_VALUE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = {\r\n            values: createEmptyScore(),\r\n          };\r\n        }\r\n\r\n        const value = draft.scores[action.name].values[action.rank];\r\n        draft.scores[action.name].values[action.rank] = Math.max(0, value - 1);\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.ISystemState = {\r\n  selectedTheme: types.ThemeOptions.Dark,\r\n  names: [],\r\n};\r\n\r\nexport function systemReducer(state = initialState, action: types.SystemActionTypes): types.ISystemState {\r\n  return produce(state, (draft: Draft<types.ISystemState>) => {\r\n    switch (action.type) {\r\n      case types.SYSTEM_CHANGE_THEME: {\r\n        draft.selectedTheme = action.newTheme;\r\n        break;\r\n      }\r\n      case types.SYSTEM_ADD_NAME: {\r\n        draft.names.push(action.name);\r\n        break;\r\n      }\r\n      case types.SYSTEM_REMOVE_NAME: {\r\n        const index = draft.names.indexOf(action.name);\r\n        if (index > -1) {\r\n          draft.names.splice(index, 1);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.IQwixxState = {\r\n  isLocked: createEmptyLocked(),\r\n  values: createEmptyValues(),\r\n};\r\n\r\nfunction createEmptyLocked(): Record<types.QwixxRanks, boolean> {\r\n  return {\r\n    Red: false,\r\n    Yellow: false,\r\n    Green: false,\r\n    Blue: false,\r\n\r\n    Negative: false,\r\n  };\r\n}\r\n\r\nfunction createEmptyValues(): Record<types.QwixxRanks, number[]> {\r\n  return {\r\n    Red: [],\r\n    Yellow: [],\r\n    Green: [],\r\n    Blue: [],\r\n\r\n    Negative: [],\r\n  };\r\n}\r\n\r\nexport function qwixxReducer(state = initialState, action: types.QwixxActionTypes): types.IQwixxState {\r\n  return produce(state, (draft: Draft<types.IQwixxState>) => {\r\n    switch (action.type) {\r\n      case types.QWIXX_RESET_ALL: {\r\n        draft.isLocked = createEmptyLocked();\r\n        draft.values = createEmptyValues();\r\n        break;\r\n      }\r\n      case types.QWIXX_ADD_VALUE: {\r\n        draft.values[action.rank].push(action.number);\r\n        break;\r\n      }\r\n      case types.QWIXX_REMOVE_VALUE: {\r\n        const search_index = draft.values[action.rank].indexOf(action.number);\r\n        if (search_index >= 0) {\r\n          draft.values[action.rank].splice(search_index, 1);\r\n        }\r\n        break;\r\n      }\r\n      case types.QWIXX_LOCK: {\r\n        draft.isLocked[action.rank] = true;\r\n        break;\r\n      }\r\n      case types.QWIXX_UNLOCK: {\r\n        draft.isLocked[action.rank] = false;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import { applyMiddleware, combineReducers, createStore, Store } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { Persistor, persistReducer, persistStore } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport { genericReducer } from './Generic/Reducers';\r\nimport { milleBornesReducer } from './MilleBornes/Reducers';\r\nimport { muReducer } from './Mu/Reducers';\r\nimport { splitReducer } from './Split/Reducers';\r\nimport { systemReducer } from './System/Reducers';\r\nimport { qwixxReducer } from './Qwixx/Reducers';\r\n\r\nconst persistConfig = {\r\n  key: 'root-v2',\r\n  storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  generic: genericReducer,\r\n  milleBornes: milleBornesReducer,\r\n  mu: muReducer,\r\n  qwixx: qwixxReducer,\r\n  split: splitReducer,\r\n  system: systemReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst bindMiddleware = (middleware: any) => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const { composeWithDevTools } = require('redux-devtools-extension');\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\ninterface IStoreData {\r\n  store: Store<AppState>;\r\n  persistor: Persistor;\r\n}\r\n\r\nconst store = createStore(persistedReducer, bindMiddleware([thunk]));\r\n\r\nconst data: IStoreData = {\r\n  store,\r\n  persistor: persistStore(store),\r\n};\r\n\r\nexport default data;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport App from 'Components/App';\r\nimport storeData from 'Store';\r\nimport * as serviceWorker from 'serviceWorker';\r\n\r\nReactDOM.render((\r\n  <HashRouter>\r\n    <Provider store={storeData.store}>\r\n      <PersistGate loading={null} persistor={storeData.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </HashRouter>\r\n), document.getElementById('root'));\r\n\r\nserviceWorker.register();"],"sourceRoot":""}