{"version":3,"sources":["Theme.tsx","Header.tsx","Split/CardRank.tsx","BasePage.tsx","Home.tsx","Split/BoardRow.tsx","Split/SplitBoard.tsx","Split/Split.tsx","About.tsx","Main.tsx","App.tsx","index.tsx"],"names":["DarkTheme","PrimaryBackgroundColor","SecondaryBackgroundColor","InverseBackgroundColor","PrimaryColor","InverseColor","LinkColor","LinkHoverColor","CardRank","StyledHeader","styled","div","_templateObject","props","theme","Header","react","Link","to","React","BasePage","document","title","this","getPageName","Home","SquareHeader","button","BoardRow_templateObject","Square","_templateObject2","SelectedSquare","_templateObject3","BoardRow","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","event","onClick","index","selected","values","_this","className","handleClick","rank","renderValue","ScoreHeader","SplitBoard_templateObject","Score","SplitBoard_templateObject2","ScoreValue","SplitBoard_templateObject3","ScoreButton","_templateObject4","Split","state","negatives","A","K","Q","J","10","9","8","7","6","5","4","3","2","getRankValues","Ace","King","Queen","Jack","Ten","Nine","Eight","Seven","Six","Five","Four","Three","Two","_this2","Split_BoardRow","addOne","newState","copyState","setState","_this3","subNegative","addNegative","calculateScore","renderRow","SplitBoard","About","MainWindow","Main_templateObject","Main","Switch","Route","exact","path","component","GlobalStyle","createGlobalStyle","App_templateObject","App","styled_components_browser_esm","src_Header","src_Main","ReactDOM","HashRouter","src_App","getElementById"],"mappings":"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","file":"static/js/main.8085e189.chunk.js","sourcesContent":["export interface IScorecardTheme {\r\n  readonly PrimaryBackgroundColor: string;\r\n  readonly SecondaryBackgroundColor: string;\r\n  readonly InverseBackgroundColor: string;\r\n  readonly PrimaryColor: string;\r\n  readonly InverseColor: string;\r\n  readonly LinkColor: string;\r\n  readonly LinkHoverColor: string;\r\n}\r\n\r\nexport interface IStorecardThemeProps {\r\n  readonly theme?: IScorecardTheme;\r\n}\r\n\r\nexport const DarkTheme: IScorecardTheme = {\r\n  PrimaryBackgroundColor: \"#41464e\",\r\n  SecondaryBackgroundColor: \"#282c34\",\r\n  InverseBackgroundColor: \"#EEE9E1\",\r\n  \r\n  PrimaryColor: \"white\",\r\n  InverseColor: \"black\",\r\n  \r\n  LinkColor: \"#61dafb\",\r\n  LinkHoverColor: \"#acf1ff\",\r\n}","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { IStorecardThemeProps } from \"./Theme\";\r\n\r\nconst StyledHeader = styled.div`\r\n  background-color: ${ (props: IStorecardThemeProps) => props.theme!.SecondaryBackgroundColor };\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: calc(10px + 1vmin);\r\n  color: ${ (props: IStorecardThemeProps) => props.theme!.PrimaryColor };\r\n`;\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <StyledHeader>\r\n        <nav>\r\n          <ul>\r\n            <li><Link to='/'>Home</Link></li>\r\n            <li><Link to='/split'>Split</Link></li>\r\n            <li><Link to='/about'>About</Link></li>\r\n          </ul>\r\n        </nav>\r\n      </StyledHeader>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","export enum CardRank {\r\n  Ace = 'A',\r\n  King = 'K',\r\n  Queen = 'Q',\r\n  Jack = 'J',\r\n  Ten = '10',\r\n  Nine = '9',\r\n  Eight = '8',\r\n  Seven = '7',\r\n  Six = '6',\r\n  Five = '5',\r\n  Four = '4',\r\n  Three = '3',\r\n  Two = '2',\r\n}\r\n\r\nexport default CardRank;","import * as React from \"react\";\r\n\r\nabstract class BasePage<P = {}, S = {}, SS = any> extends React.Component<P, S, SS> {\r\n  public abstract getPageName(): string;\r\n\r\n  componentDidMount() {\r\n    document.title=\"Game Scorecards: \" + this.getPageName();\r\n  }\r\n}\r\n\r\nexport default BasePage;","import * as React from \"react\";\r\nimport BasePage from \"./BasePage\";\r\n\r\nclass Home extends BasePage {\r\n  public getPageName(): string {\r\n    return \"Home\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>This is the home page where we provide useful details.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { IStorecardThemeProps } from \"../Theme\";\r\nimport { CardRank } from \"./CardRank\";\r\n\r\nconst SquareHeader = styled.button`\r\n  background: ${ (props: IStorecardThemeProps) => props.theme!.SecondaryBackgroundColor };\r\n  color: ${ (props: IStorecardThemeProps) => props.theme!.PrimaryColor };\r\n  border: 1px solid ${ (props: IStorecardThemeProps) => props.theme!.InverseBackgroundColor };\r\n  float: left;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  line-height: 34px;\r\n  height: 34px;\r\n  margin-right: -1px;\r\n  margin-top: -1px;\r\n  padding: 0;\r\n  text-align: center;\r\n  width: 55px;\r\n`;\r\n\r\nconst Square = styled.div`\r\n  background: ${ (props: IStorecardThemeProps) => props.theme!.InverseBackgroundColor };\r\n  border: 1px solid ${ (props: IStorecardThemeProps) => props.theme!.SecondaryBackgroundColor };\r\n  float: left;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  line-height: 34px;\r\n  height: 34px;\r\n  margin-right: -1px;\r\n  margin-top: -1px;\r\n  padding: 0;\r\n  text-align: center;\r\n  width: 55px;\r\n  color: ${ (props: IStorecardThemeProps) => props.theme!.InverseColor };\r\n\r\n  ::after {\r\n    clear: both;\r\n    content: \"\";\r\n    display: table;\r\n  }\r\n`;\r\n\r\nconst SelectedSquare = styled(Square)`\r\n  background: ${ (props: IStorecardThemeProps) => props.theme!.PrimaryBackgroundColor };\r\n  color: ${ (props: IStorecardThemeProps) => props.theme!.PrimaryColor };\r\n  border: 1px dashed ${ (props: IStorecardThemeProps) => props.theme!.PrimaryColor };\r\n`;\r\n\r\ninterface IRowProp {\r\n  rank: CardRank;\r\n  values: number[];\r\n  selected: number;\r\n  onClick(event: React.MouseEvent<HTMLButtonElement>): void;\r\n}\r\n\r\nclass BoardRow extends React.Component<IRowProp> {\r\n  constructor(props: IRowProp) {\r\n    super(props);\r\n  }\r\n\r\n  private handleClick(event: React.MouseEvent<HTMLButtonElement>): void {\r\n    this.props.onClick(event);\r\n  }\r\n\r\n  renderValue(index: number) {\r\n    if (this.props.selected == index) {\r\n      return (\r\n        <SelectedSquare>{this.props.values[index]}</SelectedSquare>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <Square>{this.props.values[index]}</Square>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (<div className=\"splitRow\">\r\n      <SquareHeader onClick={(event) => { this.handleClick(event); }}>{this.props.rank}</SquareHeader>\r\n      {this.renderValue(0)}\r\n      {this.renderValue(1)}\r\n      {this.renderValue(2)}\r\n      {this.renderValue(3)}\r\n      {this.renderValue(4)}\r\n      {this.renderValue(5)}\r\n    </div>);\r\n  }\r\n}\r\n\r\nexport default BoardRow;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport CardRank from \"./CardRank\";\r\nimport BoardRow from \"./BoardRow\";\r\n\r\ntype CardRankMap = {[TKey in CardRank]: number};\r\n\r\nconst ScoreHeader = styled.div`\r\n  width: ${55 * 7}px;\r\n\r\n   ::after {\r\n    clear: both;\r\n    content: \"\";\r\n    display: table;\r\n  }\r\n`;\r\n\r\nconst Score = styled.div`\r\n  float: left;\r\n  margin: 0px 20px 0px 20px;\r\n`;\r\n\r\nconst ScoreValue = styled(Score)`\r\n  margin: 0px 0px 0px 40px;\r\n`;\r\n\r\nconst ScoreButton = styled.button`\r\n  float: left;\r\n`;\r\n\r\nexport interface IBoardState {\r\n  negatives: number,\r\n  values: CardRankMap,\r\n}\r\n\r\nclass Split extends React.Component<{}, IBoardState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      negatives: 0,\r\n      values: {\r\n        \"A\": 0,\r\n        \"K\": 0,\r\n        \"Q\": 0,\r\n        \"J\": 0,\r\n        \"10\": 0,\r\n        \"9\": 0,\r\n        \"8\": 0,\r\n        \"7\": 0,\r\n        \"6\": 0,\r\n        \"5\": 0,\r\n        \"4\": 0,\r\n        \"3\": 0,\r\n        \"2\": 0,\r\n      },\r\n    };\r\n  }\r\n\r\n  private static getRankValues(rank: CardRank): number[] {\r\n    switch (rank) {\r\n      case CardRank.Ace: return [0, 30, 70, 120, 180, 200];\r\n      case CardRank.King:\r\n      case CardRank.Queen:\r\n      case CardRank.Jack:\r\n        return [0, 20, 50, 90, 140, 200];\r\n      case CardRank.Ten:\r\n      case CardRank.Nine:\r\n      case CardRank.Eight:\r\n      case CardRank.Seven:\r\n      case CardRank.Six:\r\n      case CardRank.Five:\r\n      case CardRank.Four:\r\n      case CardRank.Three:\r\n        return [0, 10, 30, 60, 100, 200];\r\n      case CardRank.Two: return [0, 5, 20, 40, 70, 200];\r\n      default: return [];\r\n    }\r\n  }\r\n\r\n  private calculateScore(): number {\r\n    return this.state.negatives * -5 + \r\n      Split.getRankValues(CardRank.Ace)[this.state.values[CardRank.Ace]] +\r\n      Split.getRankValues(CardRank.King)[this.state.values[CardRank.King]] +\r\n      Split.getRankValues(CardRank.Queen)[this.state.values[CardRank.Queen]] +\r\n      Split.getRankValues(CardRank.Jack)[this.state.values[CardRank.Jack]] +\r\n      Split.getRankValues(CardRank.Ten)[this.state.values[CardRank.Ten]] +\r\n      Split.getRankValues(CardRank.Nine)[this.state.values[CardRank.Nine]] +\r\n      Split.getRankValues(CardRank.Eight)[this.state.values[CardRank.Eight]] +\r\n      Split.getRankValues(CardRank.Seven)[this.state.values[CardRank.Seven]] +\r\n      Split.getRankValues(CardRank.Six)[this.state.values[CardRank.Six]] +\r\n      Split.getRankValues(CardRank.Five)[this.state.values[CardRank.Five]] +\r\n      Split.getRankValues(CardRank.Four)[this.state.values[CardRank.Four]] +\r\n      Split.getRankValues(CardRank.Three)[this.state.values[CardRank.Three]] +\r\n      Split.getRankValues(CardRank.Two)[this.state.values[CardRank.Two]];\r\n  }\r\n\r\n  renderRow(rank: CardRank) {\r\n    return (\r\n      <BoardRow rank={rank} values={Split.getRankValues(rank)} selected={this.state.values[rank]} onClick={event => { this.addOne(rank); }}/>\r\n    );\r\n  }\r\n\r\n  private copyState(): IBoardState {\r\n    return {\r\n      negatives: this.state.negatives,\r\n      values: {\r\n        \"A\": this.state.values[CardRank.Ace],\r\n        \"K\": this.state.values[CardRank.King],\r\n        \"Q\": this.state.values[CardRank.Queen],\r\n        \"J\": this.state.values[CardRank.Jack],\r\n        \"10\": this.state.values[CardRank.Ten],\r\n        \"9\": this.state.values[CardRank.Nine],\r\n        \"8\": this.state.values[CardRank.Eight],\r\n        \"7\": this.state.values[CardRank.Seven],\r\n        \"6\": this.state.values[CardRank.Six],\r\n        \"5\": this.state.values[CardRank.Five],\r\n        \"4\": this.state.values[CardRank.Four],\r\n        \"3\": this.state.values[CardRank.Three],\r\n        \"2\": this.state.values[CardRank.Two],\r\n      },\r\n    };\r\n  }\r\n\r\n  private addOne(rank: CardRank) {\r\n    let newState = this.copyState();\r\n\r\n    newState.values[rank] = (newState.values[rank] + 1) % 6;\r\n\r\n    this.setState(newState);\r\n  }\r\n\r\n  private addNegative() {\r\n    let newState = this.copyState();\r\n\r\n    newState.negatives++;\r\n\r\n    this.setState(newState);\r\n  }\r\n\r\n  private subNegative() {\r\n    let newState = this.copyState();\r\n\r\n    newState.negatives--;\r\n    if (newState.negatives < 0) {\r\n      newState.negatives = 0;\r\n    }\r\n\r\n    this.setState(newState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ScoreHeader>\r\n          <ScoreButton onClick={() => this.subNegative()}>+5</ScoreButton>\r\n          <Score>Negative: {this.state.negatives * -5}</Score>\r\n          <ScoreButton onClick={() => this.addNegative()}>-5</ScoreButton>\r\n          <ScoreValue>Score: {this.calculateScore()}</ScoreValue>\r\n        </ScoreHeader>\r\n        { this.renderRow(CardRank.Ace) }\r\n        { this.renderRow(CardRank.King) }\r\n        { this.renderRow(CardRank.Queen) }\r\n        { this.renderRow(CardRank.Jack) }\r\n        { this.renderRow(CardRank.Ten) }\r\n        { this.renderRow(CardRank.Nine) }\r\n        { this.renderRow(CardRank.Eight) }\r\n        { this.renderRow(CardRank.Seven) }\r\n        { this.renderRow(CardRank.Six) }\r\n        { this.renderRow(CardRank.Five) }\r\n        { this.renderRow(CardRank.Four) }\r\n        { this.renderRow(CardRank.Three) }\r\n        { this.renderRow(CardRank.Two) }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Split;","import * as React from \"react\";\r\n\r\nimport BasePage from \"../BasePage\";\r\nimport SplitBoard from \"./SplitBoard\";\r\n\r\nclass Split extends BasePage {\r\n  public getPageName(): string {\r\n    return \"Split\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <SplitBoard/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Split;","import * as React from \"react\";\r\nimport BasePage from \"./BasePage\";\r\n\r\nclass About extends BasePage {\r\n  public getPageName(): string {\r\n    return \"About\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        This site was created by Shane DeSeranno and Donald Gill to aid in game scoring.\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;","import * as React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { IStorecardThemeProps } from \"./Theme\";\r\nimport Home from \"./Home\";\r\nimport Split from \"./Split/Split\";\r\nimport About from \"./About\";\r\n\r\nconst MainWindow = styled.div`\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: calc(10px + 1vmin);\r\n  color: ${ (props: IStorecardThemeProps) => props.theme!.PrimaryColor };\r\n  padding: 5px;\r\n`;\r\n\r\nclass Main extends React.Component {\r\n  render() {\r\n    return (\r\n      <MainWindow>\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route path='/split' component={Split} />\r\n          <Route path='/about' component={About} />\r\n        </Switch>\r\n      </MainWindow>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;","import * as React from \"react\";\r\n\r\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\r\nimport { DarkTheme, IStorecardThemeProps } from \"./Theme\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    background-color: ${ (props: IStorecardThemeProps) => props.theme!.PrimaryBackgroundColor };\r\n  }\r\n\r\n  nav ul {\r\n    list-style: none;\r\n    overflow: hidden;\r\n    position: relative;\r\n  }\r\n\r\n  nav ul li {\r\n    float: left;\r\n    margin: 0 20px 0 0;\r\n  }\r\n\r\n  a, a:visited {\r\n    color: ${ (props: IStorecardThemeProps) => props.theme!.LinkColor };\r\n  }\r\n\r\n  a:hover {\r\n    color: ${ (props: IStorecardThemeProps) => props.theme!.LinkHoverColor };\r\n  }\r\n`;\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={DarkTheme}>\r\n        <div>\r\n          <GlobalStyle />\r\n          <Header />\r\n          <Main />\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render((\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>\r\n), document.getElementById('root'));\r\n"],"sourceRoot":""}