{"version":3,"sources":["Store/Generic/Types.ts","Store/Generic/Reducers.ts","Store/MilleBornes/Types.ts","Store/Split/Types.ts","Store/MilleBornes/Reducers.ts","Store/System/Types.ts","Store/Split/Reducers.ts","Store/System/Reducers.ts","Store/index.ts","Theme.tsx","Components/Header/index.tsx","Components/Footer/index.tsx","Store/System/Actions.ts","Components/Home/index.tsx","Components/About/About.tsx","Components/Generic/ScoreCard.tsx","Store/Generic/Actions.ts","Components/Generic/index.tsx","Components/MilleBornes/SafetyRow.tsx","Components/MilleBornes/ScoreCard.tsx","Store/MilleBornes/Actions.ts","Components/MilleBornes/index.tsx","Components/Split/ScoreCard.tsx","Store/Split/Actions.ts","Components/Split/index.tsx","Components/Main/index.tsx","Components/App/index.tsx","index.tsx"],"names":["GENERIC_RESET_ALL","GENERIC_ADD_SCORE","initialState","scores","SplitRanks","MILLE_BORNES_RESET_ALL","MILLE_BORNES_ADD_SCORE","ThemeOptions","SPLIT_RESET_ALL","SPLIT_ADD_VALUE","SPLIT_REMOVE_VALUE","SYSTEM_CHANGE_THEME","SYSTEM_ADD_NAME","SYSTEM_REMOVE_NAME","selectedTheme","types","Dark","names","middleware","rootReducer","combineReducers","generic","state","action","produce","draft","type","name","value","milleBornes","split","values","A","K","Q","J","10","9","8","7","6","5","4","3","2","Negative","rank","max","Math","system","newTheme","push","index","indexOf","splice","store","createStore","thunk","applyMiddleware","lightTheme","palette","primary","indigo","secondary","lightBlue","darkTheme","Themes","option","Light","light","dark","createMuiTheme","Header","position","this","props","location","pathname","label","to","component","Link","React","withRouter","Footer","p","error","newName","showAddPlayerDialog","className","classes","appBar","chipWrapper","icon","variant","chip","onClick","handleAdd","map","key","onDelete","handleDelete","open","maxWidth","fullWidth","onClose","handleDialogClose","required","autoFocus","onChange","handleNewNameChange","onKeyPress","handleKeyPress","length","color","disabled","handleAddName","event","preventDefault","target","trim","find","profile","toLowerCase","setState","addName","removeName","bind","connect","dispatch","Mui","theme","top","bottom","margin","spacing","display","flexWrap","Home","About","ScoreCard","showScoreDialog","myScore","scoreCardPaper","scoreButton","handleScoreRound","handleChange","handleUpdateScore","parseInt","console","log","isNaN","addScore","width","padding","textAlign","Generic","genericWrapper","handleReset","reset","SafetyRow","item","xs","right","marginTop","center","checked","played","togglePlayed","coupFourre","toggleCoupFourre","withStyles","verticalAlign","distance","rightOfWayPlayed","rightOfWayPlayedCF","drivingAcePlayed","drivingAcePlayedCF","fuelTankPlayed","fuelTankPlayedCF","punctureProofPlayed","punctureProofPlayedCF","delayedAction","safeTrip","extension","shutout","getScore","id","gutterBottom","aria-labelledby","valueLabelDisplay","step","min","marks","handleDistanceChanged","container","handleToggleRightOfWay","handleToggleRightOfWayCF","handleToggleDrivingAce","handleToggleDrivingAceCF","handleToggleFuelTank","handleToggleFuelTankCF","handleTogglePunctureProof","handleTogglePunctureProofCF","handleToggleDelayedAction","handleToggleSafeTrip","handleToggleShutout","Array","isArray","score","MilleBornes","milleBornesWrapper","ValueMap","calculateScore","createRow","Ten","Nine","Eight","Seven","Six","Five","Four","Three","Two","justify","alignItems","row","handleIncrease","getRankValues","handleDecrease","addValue","removeValue","selectedIndex","avatars","avatarClass","avatar","selectedAvatar","toString","style","marginRight","minWidth","fontWeight","fontSize","height","backgroundColor","main","contrastText","marginBottom","Split","splitWrapper","Main","m","exact","path","App","currentTheme","getTheme","ThemeProvider","CssBaseline","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9f7ab270.chunk.js","sourcesContent":["export interface IGenericState {\r\n  readonly scores: Record<string, number>;\r\n}\r\n\r\nexport const GENERIC_RESET_ALL = 'GENERIC_RESET_ALL';\r\nexport const GENERIC_ADD_SCORE = 'GENERIC_ADD_SCORE';\r\n\r\nexport interface IGenericResetAllAction {\r\n  type: typeof GENERIC_RESET_ALL;\r\n}\r\n\r\nexport interface IGenericAddScoreAction {\r\n  name: string;\r\n  value: number;\r\n  type: typeof GENERIC_ADD_SCORE;\r\n}\r\n\r\nexport type GenericActionTypes =\r\n  IGenericResetAllAction |\r\n  IGenericAddScoreAction;\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.IGenericState = {\r\n  scores: {},\r\n};\r\n\r\nexport function genericReducer(state = initialState, action: types.GenericActionTypes): types.IGenericState {\r\n  return produce(state, (draft: Draft<types.IGenericState>) => {\r\n    switch (action.type) {\r\n      case types.GENERIC_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.GENERIC_ADD_SCORE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = 0;\r\n        }\r\n\r\n        draft.scores[action.name] = draft.scores[action.name] + action.value;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","export interface IMilleBornesState {\r\n  readonly scores: Record<string, number>;\r\n}\r\n\r\nexport const MILLE_BORNES_RESET_ALL = 'MILLE_BORNES_RESET_ALL';\r\nexport const MILLE_BORNES_ADD_SCORE = 'MILLE_BORNES_ADD_SCORE';\r\n\r\nexport interface IMilleBornesResetAllAction {\r\n  type: typeof MILLE_BORNES_RESET_ALL;\r\n}\r\n\r\nexport interface IMilleBornesAddScoreAction {\r\n  name: string;\r\n  value: number;\r\n  type: typeof MILLE_BORNES_ADD_SCORE;\r\n}\r\n\r\nexport type MilleBornesActionTypes =\r\n  IMilleBornesResetAllAction |\r\n  IMilleBornesAddScoreAction;\r\n","export enum SplitRanks {\r\n  A = 'A',\r\n  K = 'K',\r\n  Q = 'Q',\r\n  J = 'J',\r\n  Ten = '10',\r\n  Nine = '9',\r\n  Eight = '8',\r\n  Seven = '7',\r\n  Six = '6',\r\n  Five = '5',\r\n  Four = '4',\r\n  Three = '3',\r\n  Two = '2',\r\n\r\n  Negative = 'Negative',\r\n}\r\n\r\nexport interface ISplitScore {\r\n  readonly values: Record<SplitRanks, number>;\r\n}\r\n\r\nexport interface ISplitState {\r\n  readonly scores: Record<string, ISplitScore>;\r\n}\r\n\r\nexport const SPLIT_RESET_ALL = 'SPLIT_RESET_ALL';\r\nexport const SPLIT_ADD_VALUE = 'SPLIT_ADD_VALUE';\r\nexport const SPLIT_REMOVE_VALUE = 'SPLIT_REMOVE_VALUE';\r\n\r\nexport interface ISplitAddValueAction {\r\n  name: string;\r\n  rank: SplitRanks;\r\n  type: typeof SPLIT_ADD_VALUE;\r\n}\r\n\r\nexport interface ISplitRemoveValueAction {\r\n  name: string;\r\n  rank: SplitRanks;\r\n  type: typeof SPLIT_REMOVE_VALUE;\r\n}\r\n\r\nexport interface ISplitResetAllAction {\r\n  type: typeof SPLIT_RESET_ALL;\r\n}\r\n\r\nexport type SplitActionTypes =\r\n  ISplitAddValueAction |\r\n  ISplitRemoveValueAction |\r\n  ISplitResetAllAction;\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.IMilleBornesState = {\r\n  scores: {},\r\n};\r\n\r\nexport function milleBornesReducer(state = initialState, action: types.MilleBornesActionTypes): types.IMilleBornesState {\r\n  return produce(state, (draft: Draft<types.IMilleBornesState>) => {\r\n    switch (action.type) {\r\n      case types.MILLE_BORNES_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.MILLE_BORNES_ADD_SCORE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = 0;\r\n        }\r\n\r\n        draft.scores[action.name] = draft.scores[action.name] + action.value;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","export enum ThemeOptions {\r\n  Light,\r\n  Dark,\r\n}\r\n\r\nexport interface ISystemState {\r\n  selectedTheme: ThemeOptions;\r\n  names: string[];\r\n}\r\n\r\nexport const SYSTEM_CHANGE_THEME = 'SYSTEM_CHANGE_THEME';\r\nexport const SYSTEM_ADD_NAME = 'SYSTEM_ADD_NAME';\r\nexport const SYSTEM_REMOVE_NAME = 'SYSTEM_REMOVE_NAME';\r\n\r\nexport interface ISystemChangeThemeAction {\r\n  newTheme: ThemeOptions;\r\n  type: typeof SYSTEM_CHANGE_THEME;\r\n}\r\n\r\nexport interface ISystemAddNameAction {\r\n  name: string;\r\n  type: typeof SYSTEM_ADD_NAME;\r\n}\r\n\r\nexport interface ISystemRemoveNameAction {\r\n  name: string;\r\n  type: typeof SYSTEM_REMOVE_NAME;\r\n}\r\n\r\nexport type SystemActionTypes =\r\n  ISystemChangeThemeAction |\r\n  ISystemAddNameAction |\r\n  ISystemRemoveNameAction;\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.ISplitState = {\r\n  scores: {},\r\n};\r\n\r\nfunction createEmptyScore(): Record<types.SplitRanks, number> {\r\n  return { A: 0, K: 0, Q: 0, J: 0, 10: 0, 9: 0, 8: 0, 7: 0, 6: 0, 5: 0, 4: 0, 3: 0, 2: 0, Negative: 0};\r\n}\r\n\r\nexport function splitReducer(state = initialState, action: types.SplitActionTypes): types.ISplitState {\r\n  return produce(state, (draft: Draft<types.ISplitState>) => {\r\n    switch (action.type) {\r\n      case types.SPLIT_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.SPLIT_ADD_VALUE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = {\r\n            values: createEmptyScore(),\r\n          };\r\n        }\r\n\r\n        const value = draft.scores[action.name].values[action.rank];\r\n        const max: number = (action.rank === types.SplitRanks.Negative) ? 500 : 6;\r\n        draft.scores[action.name].values[action.rank] = (value + 1) % max;\r\n        break;\r\n      }\r\n      case types.SPLIT_REMOVE_VALUE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = {\r\n            values: createEmptyScore(),\r\n          };\r\n        }\r\n\r\n        const value = draft.scores[action.name].values[action.rank];\r\n        draft.scores[action.name].values[action.rank] = Math.max(0, value - 1);\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.ISystemState = {\r\n  selectedTheme: types.ThemeOptions.Dark,\r\n  names: (process.env.NODE_ENV === 'development') ? ['Shane', 'Lara', 'Don', 'Leah'] : [],\r\n};\r\n\r\nexport function systemReducer(state = initialState, action: types.SystemActionTypes): types.ISystemState {\r\n  return produce(state, (draft: Draft<types.ISystemState>) => {\r\n    switch (action.type) {\r\n      case types.SYSTEM_CHANGE_THEME: {\r\n        draft.selectedTheme = action.newTheme;\r\n        break;\r\n      }\r\n      case types.SYSTEM_ADD_NAME: {\r\n        draft.names.push(action.name);\r\n        break;\r\n      }\r\n      case types.SYSTEM_REMOVE_NAME: {\r\n        const index = draft.names.indexOf(action.name);\r\n        if (index > -1) {\r\n          draft.names.splice(index, 1);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import { applyMiddleware, combineReducers, createStore, Store } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { genericReducer } from './Generic/Reducers';\r\nimport { milleBornesReducer } from './MilleBornes/Reducers';\r\nimport { splitReducer } from './Split/Reducers';\r\nimport { systemReducer } from './System/Reducers';\r\n\r\nconst rootReducer = combineReducers({\r\n  generic: genericReducer,\r\n  milleBornes: milleBornesReducer,\r\n  split: splitReducer,\r\n  system: systemReducer,\r\n});\r\n\r\nconst bindMiddleware = (middleware: any) => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const { composeWithDevTools } = require('redux-devtools-extension');\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nconst store: Store<AppState> = createStore(rootReducer, bindMiddleware([thunk]));\r\nexport default store;\r\n","import { lightBlue, indigo } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeOptions } from './Store/System/Types';\r\nimport { PaletteType } from '@material-ui/core';\r\n\r\nconst lightTheme = {\r\n  palette: {\r\n    primary: indigo,\r\n    secondary: lightBlue,\r\n    type: 'light' as PaletteType,\r\n  },\r\n};\r\n\r\nconst darkTheme = {\r\n  palette: {\r\n    primary: indigo,\r\n    secondary: lightBlue,\r\n    type: 'dark' as PaletteType,\r\n  },\r\n};\r\n\r\nexport class Themes {\r\n  public static getTheme(option: ThemeOptions) {\r\n    switch (option) {\r\n      case ThemeOptions.Light:\r\n        return Themes.light;\r\n    }\r\n\r\n    return Themes.dark;\r\n  }\r\n\r\n  private static light = createMuiTheme(lightTheme);\r\n  private static dark = createMuiTheme(darkTheme);\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\r\n\r\ntype IAllHeaderProps =\r\n  RouteComponentProps<any>;\r\n\r\nclass Header extends React.Component<IAllHeaderProps, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <nav>\r\n          <Mui.AppBar position='static'>\r\n            <Mui.Tabs value={this.props.location.pathname}>\r\n              <Mui.Tab value='/' label='Home' to='/' component={Link} />\r\n              <Mui.Tab value='/split' label='Split' to='/split' component={Link} />\r\n              <Mui.Tab value='/millebornes' label='Mille Bornes' to='/millebornes' component={Link} />\r\n              <Mui.Tab value='/generic' label='Generic' to='/generic' component={Link} />\r\n              <Mui.Tab value='/about' label='About' to='/about' component={Link} />\r\n            </Mui.Tabs>\r\n          </Mui.AppBar>\r\n        </nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import * as Mui from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as system from '../../Store/System';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  chipWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface IFooterProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IFooterActions {\r\n  addName(name: string): void;\r\n  removeName(name: string): void;\r\n}\r\n\r\ntype IAllFooterProps =\r\n  IFooterProps &\r\n  IFooterActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IFooterState {\r\n  error: string;\r\n  newName: string;\r\n  showAddPlayerDialog: boolean;\r\n}\r\n\r\nclass Footer extends React.Component<IAllFooterProps, IFooterState> {\r\n  constructor(p: IAllFooterProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      error: '',\r\n      newName: '',\r\n      showAddPlayerDialog: false,\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.AppBar position='fixed' className={this.props.classes.appBar}>\r\n          <div className={this.props.classes.chipWrapper}>\r\n            <Mui.Chip icon={<AddIcon />} label='Add Player' variant='outlined' className={this.props.classes.chip} onClick={this.handleAdd} />\r\n            {this.props.names.map((name) => <Mui.Chip key={name} label={name} variant='outlined' className={this.props.classes.chip} onDelete={() => this.handleDelete(name)} />)}\r\n          </div>\r\n        </Mui.AppBar>\r\n\r\n        <Mui.Dialog open={this.state.showAddPlayerDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogContent>\r\n            <Mui.TextField\r\n              fullWidth={true}\r\n              required={true}\r\n              autoFocus={true}\r\n              value={this.state.newName}\r\n              onChange={this.handleNewNameChange}\r\n              onKeyPress={this.handleKeyPress}\r\n              label='Player or Team Name'\r\n            />\r\n            {(this.state.error.length !== 0) ? <Mui.FormHelperText error={true}>{this.state.error}</Mui.FormHelperText> : null}\r\n          </Mui.DialogContent>\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              disabled={this.state.error.length !== 0 || this.state.newName.length === 0}\r\n              onClick={this.handleAddName}\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleKeyPress(event: React.KeyboardEvent<HTMLInputElement>): void {\r\n    if (event.key === 'Enter') {\r\n      if (this.state.error.length === 0) {\r\n        this.handleAddName();\r\n      }\r\n\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private handleNewNameChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n    const newName: string = event.target.value.trim();\r\n\r\n    let error: string = '';\r\n    const existingProfile: string | undefined = this.props.names.find((profile) => profile.toLowerCase() === newName.toLowerCase());\r\n    if (existingProfile) {\r\n      error = 'Player or team already exists';\r\n    }\r\n\r\n    this.setState({\r\n      error,\r\n      newName: event.target.value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleAddName(): void {\r\n    const newName: string = this.state.newName.trim();\r\n\r\n    if (newName.length > 0) {\r\n      this.props.addName(newName);\r\n      this.setState({\r\n        newName: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showAddPlayerDialog: false,\r\n      newName: '',\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleAdd(): void {\r\n    this.setState({\r\n      showAddPlayerDialog: true,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDelete(name: string): void {\r\n    this.props.removeName(name);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IFooterProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IFooterActions => ({\r\n  addName: (name: string) => dispatch(system.addName(name)),\r\n  removeName: (name: string) => dispatch(system.removeName(name)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Footer));\r\n","import * as types from './Types';\r\n\r\nexport function changeTheme(newTheme: types.ThemeOptions): types.SystemActionTypes {\r\n  return {\r\n    newTheme,\r\n    type: types.SYSTEM_CHANGE_THEME,\r\n  };\r\n}\r\n\r\nexport function addName(name: string): types.SystemActionTypes {\r\n  return {\r\n    name,\r\n    type: types.SYSTEM_ADD_NAME,\r\n  };\r\n}\r\n\r\nexport function removeName(name: string): types.SystemActionTypes {\r\n  return {\r\n    name,\r\n    type: types.SYSTEM_REMOVE_NAME,\r\n  };\r\n}\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport Footer from '../Footer';\r\n\r\nclass Home extends React.Component<{}, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Typography>\r\n          This is the home page where we provide useful details.\r\n        </Mui.Typography>\r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\n\r\nclass About extends React.Component<{}, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <Mui.Typography>\r\n        This site was created by Shane DeSeranno, Donald Gill, and Lara Ramey to aid in scoring games.\r\n      </Mui.Typography>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as generic from '../../Store/Generic';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 170,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n  },\r\n  scoreButton: {\r\n    margin: theme.spacing(1),\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, number>;\r\n}\r\n\r\ninterface IScoreCardActions {\r\n  addScore(name: string, value: number): void;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  IScoreCardActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IScoreCardState {\r\n  showScoreDialog: boolean;\r\n  value: string;\r\n}\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, IScoreCardState> {\r\n  constructor(p: IAllScoreCardProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showScoreDialog: false,\r\n      value: '',\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const myScore: number = this.props.scores[this.props.name] ? this.props.scores[this.props.name] : 0;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n          <Mui.Typography variant='h5'>{this.props.name}: {myScore}</Mui.Typography>\r\n          <Mui.Divider />\r\n          <Mui.Button className={this.props.classes.scoreButton} color='primary' variant='contained' onClick={this.handleScoreRound}>Add Score</Mui.Button>\r\n        </Mui.Paper>\r\n\r\n        <Mui.Dialog open={this.state.showScoreDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogTitle>\r\n            Scoring for: {this.props.name}\r\n          </Mui.DialogTitle>\r\n\r\n          <Mui.Divider />\r\n\r\n          <Mui.DialogContent>\r\n            <Mui.TextField\r\n              value={this.state.value}\r\n              type='number'\r\n              onChange={this.handleChange}\r\n              label='Points'\r\n              onKeyPress={this.handleKeyPress}\r\n              fullWidth={true}\r\n              autoFocus={true}\r\n            />\r\n          </Mui.DialogContent>\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              onClick={this.handleUpdateScore}\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleKeyPress(event: React.KeyboardEvent<HTMLInputElement>): void {\r\n    if (event.key === 'Enter') {\r\n      this.handleUpdateScore();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private handleChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n    this.setState({\r\n      value: event.target.value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showScoreDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleScoreRound(): void {\r\n    this.setState({\r\n      showScoreDialog: true,\r\n      value: '',\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateScore(): void {\r\n    const value = parseInt(this.state.value, 10);\r\n    console.log(value);\r\n    if (!isNaN(value)) {\r\n      this.props.addScore(this.props.name, value);\r\n    }\r\n\r\n    this.setState({\r\n      showScoreDialog: false,\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.generic.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreCardActions => ({\r\n  addScore: (name: string, value: number) => dispatch(generic.addScore(name, value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as types from './Types';\r\n\r\nexport function resetAll(): types.GenericActionTypes {\r\n  return {\r\n    type: types.GENERIC_RESET_ALL,\r\n  };\r\n}\r\n\r\nexport function addScore(name: string, value: number): types.GenericActionTypes {\r\n  return {\r\n    name,\r\n    value,\r\n    type: types.GENERIC_ADD_SCORE,\r\n  };\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as generic from '../../Store/Generic';\r\nimport ScoreCard from './ScoreCard';\r\nimport { bind } from 'decko';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  genericWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface IGenericProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IGenericActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllGenericProps =\r\n  IGenericProps &\r\n  IGenericActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass Generic extends React.Component<IAllGenericProps, {}> {\r\n  public render(): JSX.Element {\r\n    if (this.props.names.length === 0) {\r\n      return (\r\n        <Mui.Typography>\r\n          Go back to Home and add some players first!\r\n        </Mui.Typography>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.genericWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.props.reset();\r\n  }\r\n}\r\nconst mapStateToProps = (state: AppState): IGenericProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IGenericActions => ({\r\n  reset: () => dispatch(generic.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Generic));\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  marginTop: {\r\n    marginTop: 10,\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    verticalAlign: 'middle',\r\n  },\r\n});\r\n\r\ninterface ISafetyRowProps {\r\n  name: string;\r\n  played: boolean;\r\n  coupFourre: boolean;\r\n  togglePlayed(): void;\r\n  toggleCoupFourre(): void;\r\n}\r\n\r\ntype IAllSafetyRowProps =\r\n  ISafetyRowProps &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass SafetyRow extends React.Component<IAllSafetyRowProps, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Grid item={true} xs={6} className={this.props.classes.right}>\r\n          <Mui.Typography className={this.props.classes.marginTop}>{this.props.name}:</Mui.Typography>\r\n        </Mui.Grid>\r\n        <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Checkbox checked={this.props.played} onChange={this.props.togglePlayed} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Checkbox disabled={!this.props.played} checked={this.props.coupFourre} onChange={this.props.toggleCoupFourre} /></Mui.Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(localStyles)(SafetyRow);\r\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as milleBornes from '../../Store/MilleBornes';\r\nimport SafetyRow from './SafetyRow';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  marginTop: {\r\n    marginTop: 10,\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    verticalAlign: 'middle',\r\n  },\r\n  scoreButton: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 170,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, number>;\r\n}\r\n\r\ninterface IScoreCardActions {\r\n  addScore(name: string, value: number): void;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  IScoreCardActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IScoreCardState {\r\n  showScoreDialog: boolean;\r\n  distance: number;\r\n  rightOfWayPlayed: boolean;\r\n  rightOfWayPlayedCF: boolean;\r\n  drivingAcePlayed: boolean;\r\n  drivingAcePlayedCF: boolean;\r\n  fuelTankPlayed: boolean;\r\n  fuelTankPlayedCF: boolean;\r\n  punctureProofPlayed: boolean;\r\n  punctureProofPlayedCF: boolean;\r\n  delayedAction: boolean;\r\n  safeTrip: boolean;\r\n  extension: boolean;\r\n  shutout: boolean;\r\n}\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, IScoreCardState> {\r\n  constructor(p: IAllScoreCardProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showScoreDialog: false,\r\n      distance: 0,\r\n      rightOfWayPlayed: false,\r\n      rightOfWayPlayedCF: false,\r\n      drivingAcePlayed: false,\r\n      drivingAcePlayedCF: false,\r\n      fuelTankPlayed: false,\r\n      fuelTankPlayedCF: false,\r\n      punctureProofPlayed: false,\r\n      punctureProofPlayedCF: false,\r\n      delayedAction: false,\r\n      safeTrip: false,\r\n      extension: false,\r\n      shutout: false,\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n          <Mui.Typography variant='h5'>{this.props.name}: {this.getScore()}</Mui.Typography>\r\n          <Mui.Divider />\r\n          <Mui.Button className={this.props.classes.scoreButton} color='primary' variant='contained' onClick={this.handleScoreRound}>Add Score</Mui.Button>\r\n        </Mui.Paper>\r\n\r\n        <Mui.Dialog open={this.state.showScoreDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogTitle>\r\n            Scoring for: {this.props.name}\r\n          </Mui.DialogTitle>\r\n\r\n          <Mui.Divider />\r\n\r\n          <Mui.DialogContent>\r\n            <Mui.Typography id='distance-slider' gutterBottom={true}>Distance</Mui.Typography>\r\n            <Mui.Slider\r\n              aria-labelledby='distance-slider'\r\n              valueLabelDisplay='on'\r\n              step={25}\r\n              min={0}\r\n              max={1000}\r\n              marks={true}\r\n              value={this.state.distance}\r\n              onChange={this.handleDistanceChanged}\r\n            />\r\n\r\n            <Mui.Grid container={true}>\r\n              <Mui.Grid item={true} xs={6} className={this.props.classes.right}></Mui.Grid>\r\n              <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Typography>Played</Mui.Typography></Mui.Grid>\r\n              <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Typography>Coup-fourré</Mui.Typography></Mui.Grid>\r\n\r\n              <SafetyRow name='Right of Way' played={this.state.rightOfWayPlayed} coupFourre={this.state.rightOfWayPlayedCF} togglePlayed={this.handleToggleRightOfWay} toggleCoupFourre={this.handleToggleRightOfWayCF} />\r\n              <SafetyRow name='Driving Ace' played={this.state.drivingAcePlayed} coupFourre={this.state.drivingAcePlayedCF} togglePlayed={this.handleToggleDrivingAce} toggleCoupFourre={this.handleToggleDrivingAceCF} />\r\n              <SafetyRow name='Fuel Tank' played={this.state.fuelTankPlayed} coupFourre={this.state.fuelTankPlayedCF} togglePlayed={this.handleToggleFuelTank} toggleCoupFourre={this.handleToggleFuelTankCF} />\r\n              <SafetyRow name='Puncture Proof' played={this.state.punctureProofPlayed} coupFourre={this.state.punctureProofPlayedCF} togglePlayed={this.handleTogglePunctureProof} toggleCoupFourre={this.handleTogglePunctureProofCF} />\r\n\r\n              <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Delayed Action:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox disabled={this.state.distance < 1000} checked={this.state.delayedAction} onChange={this.handleToggleDelayedAction} /></Mui.Grid>\r\n\r\n              <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Safe Trip:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox disabled={this.state.distance < 1000} checked={this.state.safeTrip} onChange={this.handleToggleSafeTrip} /></Mui.Grid>\r\n\r\n              {/* <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Extension:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox checked={this.state.extension} onChange={this.handleToggleExtension} /></Mui.Grid> */}\r\n\r\n              <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Shutout:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox disabled={this.state.distance < 1000} checked={this.state.shutout} onChange={this.handleToggleShutout} /></Mui.Grid>\r\n            </Mui.Grid>\r\n          </Mui.DialogContent>\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              onClick={this.handleUpdateScore}\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleDistanceChanged(event: React.ChangeEvent<{}>, value: number | number[]): void {\r\n    if (Array.isArray(value)) {\r\n      value = value[value.length - 1];\r\n    }\r\n\r\n    this.setState({\r\n      distance: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleDelayedAction(): void {\r\n    this.setState({\r\n      delayedAction: !this.state.delayedAction,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleShutout(): void {\r\n    this.setState({\r\n      shutout: !this.state.shutout,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleSafeTrip(): void {\r\n    this.setState({\r\n      safeTrip: !this.state.safeTrip,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleRightOfWay(): void {\r\n    this.setState({\r\n      rightOfWayPlayed: !this.state.rightOfWayPlayed,\r\n      rightOfWayPlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleRightOfWayCF(): void {\r\n    this.setState({\r\n      rightOfWayPlayedCF: !this.state.rightOfWayPlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleDrivingAce(): void {\r\n    this.setState({\r\n      drivingAcePlayed: !this.state.drivingAcePlayed,\r\n      drivingAcePlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleDrivingAceCF(): void {\r\n    this.setState({\r\n      drivingAcePlayedCF: !this.state.drivingAcePlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleFuelTank(): void {\r\n    this.setState({\r\n      fuelTankPlayed: !this.state.fuelTankPlayed,\r\n      fuelTankPlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleFuelTankCF(): void {\r\n    this.setState({\r\n      fuelTankPlayedCF: !this.state.fuelTankPlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleTogglePunctureProof(): void {\r\n    this.setState({\r\n      punctureProofPlayed: !this.state.punctureProofPlayed,\r\n      punctureProofPlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleTogglePunctureProofCF(): void {\r\n    this.setState({\r\n      punctureProofPlayedCF: !this.state.punctureProofPlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showScoreDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateScore(): void {\r\n    let score: number = 0;\r\n\r\n    score += this.state.distance;\r\n\r\n    if (this.state.drivingAcePlayed) {\r\n      score += 100;\r\n      if (this.state.drivingAcePlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.fuelTankPlayed) {\r\n      score += 100;\r\n      if (this.state.fuelTankPlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.punctureProofPlayed) {\r\n      score += 100;\r\n      if (this.state.punctureProofPlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.rightOfWayPlayed) {\r\n      score += 100;\r\n      if (this.state.rightOfWayPlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.drivingAcePlayed && this.state.fuelTankPlayed && this.state.punctureProofPlayed && this.state.rightOfWayPlayed) {\r\n      score += 300;\r\n    }\r\n\r\n    if (this.state.distance === 1000) {\r\n      score += 400;\r\n\r\n      if (this.state.shutout) {\r\n        score += 500;\r\n      }\r\n\r\n      if (this.state.safeTrip) {\r\n        score += 300;\r\n      }\r\n\r\n      if (this.state.extension) {\r\n        score += 200;\r\n      }\r\n\r\n      if (this.state.delayedAction) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    this.props.addScore(this.props.name, score);\r\n    this.setState({\r\n      showScoreDialog: false,\r\n      distance: 0,\r\n      rightOfWayPlayed: false,\r\n      rightOfWayPlayedCF: false,\r\n      drivingAcePlayed: false,\r\n      drivingAcePlayedCF: false,\r\n      fuelTankPlayed: false,\r\n      fuelTankPlayedCF: false,\r\n      punctureProofPlayed: false,\r\n      punctureProofPlayedCF: false,\r\n      delayedAction: false,\r\n      safeTrip: false,\r\n      extension: false,\r\n      shutout: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private getScore(): number {\r\n    const score = this.props.scores[this.props.name];\r\n    return score ? score : 0;\r\n  }\r\n\r\n  @bind\r\n  private handleScoreRound(): void {\r\n    this.setState({\r\n      showScoreDialog: true,\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.milleBornes.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreCardActions => ({\r\n  addScore: (name: string, value: number) => dispatch(milleBornes.addScore(name, value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as types from './Types';\r\n\r\nexport function resetAll(): types.MilleBornesActionTypes {\r\n  return {\r\n    type: types.MILLE_BORNES_RESET_ALL,\r\n  };\r\n}\r\n\r\nexport function addScore(name: string, value: number): types.MilleBornesActionTypes {\r\n  return {\r\n    name,\r\n    value,\r\n    type: types.MILLE_BORNES_ADD_SCORE,\r\n  };\r\n}\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as milleBornes from '../../Store/MilleBornes';\r\nimport ScoreCard from './ScoreCard';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  milleBornesWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface IMilleBornesProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IMilleBornesActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllMilleBornesProps =\r\n  IMilleBornesProps &\r\n  IMilleBornesActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass MilleBornes extends React.Component<IAllMilleBornesProps, {}> {\r\n  public render(): JSX.Element {\r\n    if (this.props.names.length === 0) {\r\n      return (\r\n        <Mui.Typography>\r\n          Go back to Home and add some players first!\r\n        </Mui.Typography>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.milleBornesWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.props.reset();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IMilleBornesProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IMilleBornesActions => ({\r\n  reset: () => dispatch(milleBornes.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(MilleBornes));\r\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as split from '../../Store/Split';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 360,\r\n    minWidth: 360,\r\n    padding: theme.spacing(1),\r\n  },\r\n  avatar: {\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    height: 30,\r\n    width: 30,\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  selectedAvatar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText,\r\n  },\r\n  row: {\r\n    marginTop: theme.spacing(0.25),\r\n    marginBottom: theme.spacing(0.25),\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, split.ISplitScore>;\r\n}\r\n\r\ninterface IScoreCardActions {\r\n  addValue(name: string, rank: split.SplitRanks): void;\r\n  removeValue(name: string, rank: split.SplitRanks): void;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  IScoreCardActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nconst ValueMap: Record<split.SplitRanks, number[]> = {\r\n  A: [0, 30, 70, 120, 180, 200],\r\n  K: [0, 20, 50, 90, 140, 200],\r\n  Q: [0, 20, 50, 90, 140, 200],\r\n  J: [0, 20, 50, 90, 140, 200],\r\n  10: [0, 10, 30, 60, 100, 200],\r\n  9: [0, 10, 30, 60, 100, 200],\r\n  8: [0, 10, 30, 60, 100, 200],\r\n  7: [0, 10, 30, 60, 100, 200],\r\n  6: [0, 10, 30, 60, 100, 200],\r\n  5: [0, 10, 30, 60, 100, 200],\r\n  4: [0, 10, 30, 60, 100, 200],\r\n  3: [0, 10, 30, 60, 100, 200],\r\n  2: [0, 5, 20, 40, 70, 200],\r\n\r\n  Negative: [],\r\n};\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, {}> {\r\n  public render(): JSX.Element {\r\n    const myScore: split.ISplitScore = this.props.scores[this.props.name];\r\n\r\n    return (\r\n      <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n        <Mui.Grid container={true}>\r\n          <Mui.Grid item={true} xs={6}>\r\n            <Mui.Typography variant='h5'>\r\n              {this.props.name}\r\n            </Mui.Typography>\r\n          </Mui.Grid>\r\n          <Mui.Grid item={true} xs={6} className={this.props.classes.right}>\r\n            <Mui.Typography variant='h5'>\r\n              {this.calculateScore(myScore)}\r\n            </Mui.Typography>\r\n          </Mui.Grid>\r\n        </Mui.Grid>\r\n        <Mui.Divider variant='middle' />\r\n        {this.createRow(myScore, split.SplitRanks.A)}\r\n        {this.createRow(myScore, split.SplitRanks.K)}\r\n        {this.createRow(myScore, split.SplitRanks.Q)}\r\n        {this.createRow(myScore, split.SplitRanks.J)}\r\n        {this.createRow(myScore, split.SplitRanks.Ten)}\r\n        {this.createRow(myScore, split.SplitRanks.Nine)}\r\n        {this.createRow(myScore, split.SplitRanks.Eight)}\r\n        {this.createRow(myScore, split.SplitRanks.Seven)}\r\n        {this.createRow(myScore, split.SplitRanks.Six)}\r\n        {this.createRow(myScore, split.SplitRanks.Five)}\r\n        {this.createRow(myScore, split.SplitRanks.Four)}\r\n        {this.createRow(myScore, split.SplitRanks.Three)}\r\n        {this.createRow(myScore, split.SplitRanks.Two)}\r\n        <Mui.Grid container={true} justify='center' alignItems='center' className={this.props.classes.row}>\r\n          <Mui.Grid item={true} xs={4}>\r\n            <Mui.Button variant='outlined' onClick={() => this.handleIncrease(split.SplitRanks.Negative)}>\r\n              -5\r\n            </Mui.Button>\r\n          </Mui.Grid>\r\n          <Mui.Grid item={true} xs={4} className={this.props.classes.center}>\r\n            <Mui.Typography variant='h5'>{this.getRankValues(myScore, split.SplitRanks.Negative)}</Mui.Typography>\r\n          </Mui.Grid>\r\n          <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n            <Mui.Button variant='outlined' onClick={() => this.handleDecrease(split.SplitRanks.Negative)}>\r\n              +5\r\n        </Mui.Button>\r\n          </Mui.Grid>\r\n        </Mui.Grid>\r\n      </Mui.Paper>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private getRankValues(myScore: split.ISplitScore, rank: split.SplitRanks): number {\r\n    const index = myScore ? myScore.values[rank] : 0;\r\n\r\n    if (rank === split.SplitRanks.Negative) {\r\n      return -5 * index;\r\n    }\r\n\r\n    return ValueMap[rank][index];\r\n  }\r\n\r\n  @bind\r\n  private calculateScore(myScore: split.ISplitScore): number {\r\n    return this.getRankValues(myScore, split.SplitRanks.Negative) +\r\n      this.getRankValues(myScore, split.SplitRanks.A) +\r\n      this.getRankValues(myScore, split.SplitRanks.K) +\r\n      this.getRankValues(myScore, split.SplitRanks.Q) +\r\n      this.getRankValues(myScore, split.SplitRanks.J) +\r\n      this.getRankValues(myScore, split.SplitRanks.Ten) +\r\n      this.getRankValues(myScore, split.SplitRanks.Nine) +\r\n      this.getRankValues(myScore, split.SplitRanks.Eight) +\r\n      this.getRankValues(myScore, split.SplitRanks.Seven) +\r\n      this.getRankValues(myScore, split.SplitRanks.Six) +\r\n      this.getRankValues(myScore, split.SplitRanks.Five) +\r\n      this.getRankValues(myScore, split.SplitRanks.Four) +\r\n      this.getRankValues(myScore, split.SplitRanks.Three) +\r\n      this.getRankValues(myScore, split.SplitRanks.Two);\r\n  }\r\n\r\n  @bind\r\n  private handleIncrease(rank: split.SplitRanks): void {\r\n    this.props.addValue(this.props.name, rank);\r\n  }\r\n\r\n  @bind\r\n  private handleDecrease(rank: split.SplitRanks): void {\r\n    this.props.removeValue(this.props.name, rank);\r\n  }\r\n\r\n  @bind\r\n  private createRow(myScore: split.ISplitScore, rank: split.SplitRanks): JSX.Element {\r\n    const selectedIndex = myScore ? myScore.values[rank] : 0;\r\n\r\n    const avatars: JSX.Element[] = [];\r\n    for (let index = 0; index < 6; index++) {\r\n      let avatarClass = this.props.classes.avatar;\r\n      if (index === selectedIndex) {\r\n        avatarClass = `${avatarClass} ${this.props.classes.selectedAvatar}`;\r\n      }\r\n\r\n      avatars.push(<Mui.Avatar key={`${rank.toString()}-${index}`} className={avatarClass}>{ValueMap[rank][index]}</Mui.Avatar>);\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Grid container={true} justify='center' alignItems='center' className={this.props.classes.row}>\r\n          <Mui.Button variant='outlined' onClick={() => this.handleIncrease(rank)} style={{ marginRight: 10 }}>\r\n            {rank.toString()}\r\n          </Mui.Button>\r\n          {avatars}\r\n        </Mui.Grid>\r\n        <Mui.Divider />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.split.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreCardActions => ({\r\n  addValue: (name: string, rank: split.SplitRanks) => dispatch(split.addValue(name, rank)),\r\n  removeValue: (name: string, rank: split.SplitRanks) => dispatch(split.removeValue(name, rank)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as types from './Types';\r\n\r\nexport function addValue(name: string, rank: types.SplitRanks): types.SplitActionTypes {\r\n  return {\r\n    name,\r\n    rank,\r\n    type: types.SPLIT_ADD_VALUE,\r\n  };\r\n}\r\n\r\nexport function removeValue(name: string, rank: types.SplitRanks): types.SplitActionTypes {\r\n  return {\r\n    name,\r\n    rank,\r\n    type: types.SPLIT_REMOVE_VALUE,\r\n  };\r\n}\r\n\r\nexport function resetAll(): types.SplitActionTypes {\r\n  return {\r\n    type: types.SPLIT_RESET_ALL,\r\n  };\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as split from '../../Store/Split';\r\nimport ScoreCard from './ScoreCard';\r\nimport { bind } from 'decko';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  splitWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface ISplitProps {\r\n  names: string[];\r\n}\r\n\r\ninterface ISplitActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllSplitProps =\r\n  ISplitProps &\r\n  ISplitActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass Split extends React.Component<IAllSplitProps, {}> {\r\n  public render(): JSX.Element {\r\n    if (this.props.names.length === 0) {\r\n      return (\r\n        <Mui.Typography>\r\n          Go back to Home and add some players first!\r\n        </Mui.Typography>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.splitWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.props.reset();\r\n  }\r\n}\r\nconst mapStateToProps = (state: AppState): ISplitProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): ISplitActions => ({\r\n  reset: () => dispatch(split.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Split));\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from '../Home';\r\nimport About from '../About/About';\r\nimport Generic from '../Generic';\r\nimport MilleBornes from '../MilleBornes';\r\nimport Split from '../Split';\r\n\r\nclass Main extends React.Component<{}, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <Mui.Box m={2}>\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route path='/split' component={Split} />\r\n          <Route path='/millebornes' component={MilleBornes} />\r\n          <Route path='/generic' component={Generic} />\r\n          <Route path='/about' component={About} />\r\n        </Switch>\r\n      </Mui.Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import * as React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport { Themes } from '../../Theme';\r\nimport * as system from '../../Store/System';\r\nimport Header from '../Header';\r\nimport Main from '../Main';\r\n\r\ninterface IAppProps {\r\n  selectedTheme: system.ThemeOptions;\r\n}\r\n\r\nclass App extends React.Component<IAppProps, {}> {\r\n  public render(): JSX.Element {\r\n    const currentTheme = Themes.getTheme(this.props.selectedTheme);\r\n\r\n    return (\r\n      <ThemeProvider theme={currentTheme}>\r\n        <CssBaseline />\r\n        <Header />\r\n        <Main />\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IAppProps => ({\r\n  selectedTheme: state.system.selectedTheme,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): {} => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './Store';\r\nimport App from './Components/App';\r\n\r\nReactDOM.render((\r\n  <HashRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </HashRouter>\r\n), document.getElementById('root'));\r\n"],"sourceRoot":""}