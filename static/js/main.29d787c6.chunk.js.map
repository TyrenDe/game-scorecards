{"version":3,"sources":["Theme.tsx","Components/App/Styles.tsx","Components/Header/Styles.tsx","Components/Header/Header.tsx","Components/Main/Styles.tsx","Components/BasePage/BasePage.tsx","Components/Home/Home.tsx","Components/Split/SplitBoard/Styles.tsx","Components/Split/CardRank.tsx","Components/Split/BoardRow/Styles.tsx","Components/MilleBornes/MilleBornes.tsx","Components/Split/BoardRow/BoardRow.tsx","Components/Split/SplitBoard/SplitBoard.tsx","Components/Split/Split.tsx","Components/About/About.tsx","Components/Main/Main.tsx","Components/App/App.tsx","index.tsx"],"names":["DarkTheme","PrimaryBackgroundColor","SecondaryBackgroundColor","InverseBackgroundColor","ButtonBackgroundColor","ButtonColor","PrimaryColor","InverseColor","LinkColor","LinkHoverColor","styledComponents","styled","default","createGlobalStyle","css","ThemeProvider","keyframes","GlobalStyle","_templateObject","props","theme","Page","div","_templateObject2","StyledHeader","Styles_templateObject","Header","react","Link","to","React","MainWindow","Main_Styles_templateObject","BasePage","document","title","this","getPageName","Home","CardRank","Board","SplitBoard_Styles_templateObject","ScoreHeader","Styles_templateObject2","Score","_templateObject3","ScoreValue","_templateObject4","ScoreButton","button","_templateObject5","AllRanks","Ace","King","Queen","Jack","Ten","Nine","Eight","Seven","Six","Five","Four","Three","Two","getRankValues","rank","GameStates","Row","BoardRow_Styles_templateObject","SquareHeader","BoardRow_Styles_templateObject2","Square","Styles_templateObject3","isSelected","BoardRow","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","event","onClick","_this","handleClick","values","map","value","index","key","selected","Split","state","negatives","A","K","Q","J","10","9","8","7","6","5","4","3","2","total","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","newState","objectSpread","setState","_this2","addNegative","subNegative","calculateScore","Split_BoardRow_BoardRow","addOne","SplitBoard","About","MilleBornes","gameState","EnterNames","team1Name","team2Name","Playing","GameOver","preventDefault","target","name","onSubmit","handleSubmit","type","onChange","handleTextChange","CurrentState","Main","Switch","Route","exact","path","component","App","Components_Header_Header","Components_Main_Main","ReactDOM","HashRouter","Components_App_App","getElementById"],"mappings":"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","file":"static/js/main.29d787c6.chunk.js","sourcesContent":["import * as styledComponents from \"styled-components\";\r\nimport { ThemedStyledComponentsModule } from \"styled-components\";\r\n\r\ninterface IScorecardTheme {\r\n  readonly PrimaryBackgroundColor: string;\r\n  readonly SecondaryBackgroundColor: string;\r\n  readonly InverseBackgroundColor: string;\r\n  readonly ButtonBackgroundColor: string;\r\n  readonly ButtonColor: string;\r\n  readonly PrimaryColor: string;\r\n  readonly InverseColor: string;\r\n  readonly LinkColor: string;\r\n  readonly LinkHoverColor: string;\r\n}\r\n\r\nexport const DarkTheme: IScorecardTheme = {\r\n  PrimaryBackgroundColor: \"#41464e\",\r\n  SecondaryBackgroundColor: \"#282c34\",\r\n  InverseBackgroundColor: \"#EEE9E1\",\r\n\r\n  ButtonBackgroundColor: \"#801515\",\r\n  ButtonColor: \"white\",\r\n\r\n  PrimaryColor: \"white\",\r\n  InverseColor: \"black\",\r\n\r\n  LinkColor: \"#61dafb\",\r\n  LinkHoverColor: \"#acf1ff\",\r\n}\r\n\r\nexport const LightTheme: IScorecardTheme = {\r\n  PrimaryBackgroundColor: \"#CEC9C1\",\r\n  SecondaryBackgroundColor: \"#EEE9E1\",\r\n  InverseBackgroundColor: \"#41464e\",\r\n\r\n  ButtonBackgroundColor: \"#FFAAAA\",\r\n  ButtonColor: \"black\",\r\n\r\n  PrimaryColor: \"black\",\r\n  InverseColor: \"white\",\r\n\r\n  LinkColor: \"#219acb\",\r\n  LinkHoverColor: \"#1156aa\",\r\n}\r\n\r\nconst {\r\n  default: styled,\r\n  css,\r\n  createGlobalStyle,\r\n  keyframes,\r\n  ThemeProvider\r\n} = styledComponents as ThemedStyledComponentsModule<IScorecardTheme>;\r\n\r\nexport { css, createGlobalStyle, keyframes, ThemeProvider };\r\nexport default styled;","import styled from \"../../Theme\";\r\nimport { createGlobalStyle } from \"../../Theme\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  background-color: ${ props => props.theme.PrimaryBackgroundColor };\r\n}\r\n\r\nnav ul {\r\n}\r\n\r\nnav ul li {\r\n}\r\n\r\na, a:visited {\r\n  color: ${ props => props.theme.LinkColor };\r\n}\r\n\r\na:hover {\r\n  color: ${ props => props.theme.LinkHoverColor };\r\n}\r\n`;\r\n\r\nexport const Page = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import styled from \"../../Theme\";\r\n\r\nexport const StyledHeader = styled.div`\r\n  background-color: ${ props => props.theme.SecondaryBackgroundColor };\r\n  color: ${ props => props.theme.PrimaryColor };\r\n\r\n  padding: 10px 0 10px 0;\r\n\r\n  nav ul {\r\n    list-style-type: none;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  nav ul li {\r\n    display: inline;\r\n    padding: 10px;\r\n  }\r\n`;\r\n","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { StyledHeader } from \"./Styles\";\r\n\r\nclass Header extends React.Component {\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <StyledHeader>\r\n        <nav>\r\n          <ul>\r\n            <li><Link to='/'>Home</Link></li>\r\n            <li><Link to='/split'>Split</Link></li>\r\n            <li><Link to='/millebornes'>Mille Bornes</Link></li>\r\n            <li><Link to='/about'>About</Link></li>\r\n          </ul>\r\n        </nav>\r\n      </StyledHeader>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import styled from \"../../Theme\";\r\n\r\nexport const MainWindow = styled.div`\r\n  color: ${ props => props.theme.PrimaryColor };\r\n\r\n  padding: 10px;\r\n`;\r\n","import * as React from \"react\";\r\n\r\nabstract class BasePage<P = {}, S = {}, SS = any> extends React.Component<P, S, SS> {\r\n  protected abstract getPageName(): string;\r\n\r\n  public componentDidMount(): void {\r\n    document.title = \"Game Scorecards: \" + this.getPageName();\r\n  }\r\n}\r\n\r\nexport default BasePage;\r\n","import * as React from \"react\";\r\n\r\nimport BasePage from \"../BasePage/BasePage\";\r\n\r\nclass Home extends BasePage {\r\n  protected getPageName(): string {\r\n    return \"Home\";\r\n  }\r\n\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <div>\r\n        <p>This is the home page where we provide useful details.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import styled from \"../../../Theme\";\r\n\r\nexport const Board = styled.div`\r\n  border: 1px solid ${ props => props.theme.PrimaryColor };\r\n  background-color: ${ props => props.theme.SecondaryBackgroundColor };\r\n\r\n  padding: 5px;\r\n  max-width: 400px;\r\n  margin: auto;\r\n`;\r\n\r\nexport const ScoreHeader = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  justify-content: space-between;\r\n  margin: auto;\r\n  padding-bottom: 5px;\r\n  border-bottom: 1px solid ${ props => props.theme.PrimaryColor };\r\n`;\r\n\r\nexport const Score = styled.div`\r\n  margin: auto;\r\n\r\n  min-width: 110px;\r\n  text-align: center;\r\n  font-size: small;\r\n`;\r\n\r\nexport const ScoreValue = styled(Score)`\r\n  font-weight: bold;\r\n  font-size: x-large;\r\n`;\r\n\r\nexport const ScoreButton = styled.button`\r\n  color: ${ props => props.theme.ButtonColor };\r\n  background-color: ${ props => props.theme.ButtonBackgroundColor };\r\n  border-bottom: 1px solid ${ props => props.theme.ButtonColor };\r\n\r\n  height: 40px;\r\n  width: 40px;\r\n  font-weight: bold;\r\n`;\r\n","export enum CardRank {\r\n  Ace = 'A',\r\n  King = 'K',\r\n  Queen = 'Q',\r\n  Jack = 'J',\r\n  Ten = '10',\r\n  Nine = '9',\r\n  Eight = '8',\r\n  Seven = '7',\r\n  Six = '6',\r\n  Five = '5',\r\n  Four = '4',\r\n  Three = '3',\r\n  Two = '2',\r\n}\r\n\r\nexport const AllRanks = [\r\n  CardRank.Ace,\r\n  CardRank.King,\r\n  CardRank.Queen,\r\n  CardRank.Jack,\r\n  CardRank.Ten,\r\n  CardRank.Nine,\r\n  CardRank.Eight,\r\n  CardRank.Seven,\r\n  CardRank.Six,\r\n  CardRank.Five,\r\n  CardRank.Four,\r\n  CardRank.Three,\r\n  CardRank.Two];\r\n\r\nexport function getRankValues(rank: CardRank): number[] {\r\n  switch (rank) {\r\n    case CardRank.Ace: return [0, 30, 70, 120, 180, 200];\r\n    case CardRank.King:\r\n    case CardRank.Queen:\r\n    case CardRank.Jack:\r\n      return [0, 20, 50, 90, 140, 200];\r\n    case CardRank.Ten:\r\n    case CardRank.Nine:\r\n    case CardRank.Eight:\r\n    case CardRank.Seven:\r\n    case CardRank.Six:\r\n    case CardRank.Five:\r\n    case CardRank.Four:\r\n    case CardRank.Three:\r\n      return [0, 10, 30, 60, 100, 200];\r\n    case CardRank.Two: return [0, 5, 20, 40, 70, 200];\r\n    default: return [];\r\n  }\r\n}\r\n\r\nexport default CardRank;","import styled from \"../../../Theme\";\r\n\r\nexport const Row = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  grid-gap: 10px;\r\n  grid-auto-rows: minmax(30px, auto);\r\n\r\n  padding-top: 5px;\r\n`;\r\n\r\nexport const SquareHeader = styled.button`\r\n  color: ${ props => props.theme.ButtonColor };\r\n  background-color: ${ props => props.theme.ButtonBackgroundColor };\r\n  border-bottom: 1px solid ${ props => props.theme.ButtonColor };\r\n\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const Square = styled<{isSelected: boolean}, \"div\">(\"div\")`\r\n  background: ${ props => props.isSelected ? props.theme.PrimaryBackgroundColor : props.theme.InverseBackgroundColor };\r\n  color: ${ props => props.isSelected ? props.theme.PrimaryColor : props.theme.InverseColor };\r\n  border: 1px solid ${ props => props.isSelected ? props.theme.PrimaryColor : props.theme.SecondaryBackgroundColor };\r\n\r\n  text-align: center;\r\n  padding-top: 2px;\r\n  font-weight: ${ props => props.isSelected ? \"bold\" : \"normal\" };\r\n`;\r\n","import * as React from \"react\";\r\n\r\nimport BasePage from \"../BasePage/BasePage\";\r\n\r\nenum GameStates {\r\n  EnterNames,\r\n  Playing,\r\n  GameOver\r\n}\r\n\r\ninterface IMilleBornesState {\r\n  gameState: GameStates;\r\n  team1Name: string;\r\n  team2Name: string;\r\n}\r\n\r\nclass MilleBornes extends BasePage<{}, IMilleBornesState> {\r\n  protected getPageName(): string {\r\n    return \"Mille Bornes\";\r\n  }\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      gameState: GameStates.EnterNames,\r\n      team1Name: \"\",\r\n      team2Name: \"\",\r\n    }\r\n  }\r\n\r\n  private handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\r\n    switch (this.state.gameState) {\r\n      case GameStates.EnterNames:\r\n        this.setState({ gameState: GameStates.Playing });\r\n        break;\r\n      case GameStates.Playing:\r\n        this.setState({ gameState: GameStates.GameOver });\r\n        break;\r\n      case GameStates.EnterNames:\r\n        this.setState({ gameState: GameStates.EnterNames });\r\n        break;\r\n    };\r\n    event.preventDefault();\r\n  }\r\n\r\n  private handleTextChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n    const target = event.target;\r\n    const name = target.name;\r\n\r\n    if (name == \"team1Name\") {\r\n      this.setState({\r\n        team1Name: target.value\r\n      });\r\n    } else {\r\n      this.setState({\r\n        team2Name: target.value\r\n      });\r\n    }\r\n  }\r\n\r\n  private CurrentState(): React.ReactNode {\r\n    switch (this.state.gameState) {\r\n      case GameStates.EnterNames:\r\n        return (\r\n          <form onSubmit={(event) => this.handleSubmit(event)}>\r\n            <label>\r\n              Team 1:\r\n              <input type=\"text\" name=\"team1Name\" onChange={(event) => this.handleTextChange(event)} />\r\n            </label>\r\n\r\n            <label>\r\n              Team 2:\r\n              <input type=\"text\" name=\"team2Name\" />\r\n            </label>\r\n\r\n            <input type=\"submit\" value=\"Start Game\" />\r\n          </form>\r\n        );\r\n      case GameStates.Playing:\r\n        return (\r\n          <div>\r\n            Add new round -&gt; Enter values for each team\r\n        </div>\r\n        );\r\n      case GameStates.GameOver:\r\n        return (\r\n          <div>\r\n          <div>Miles Traveled (if == 1000 then finished +400)</div>\r\n          <div>Safety Cards (1-4, if == 4 then +300(</div>\r\n          <div>Coup Fourré (1-4, *300)</div>\r\n          <div>Delayed Action (+300)</div>\r\n          <div>Safe trip (+300)</div>\r\n          <div>Shutout (+500)</div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    return (<div>Error?</div>);\r\n  }\r\n\r\n  public render(): React.ReactNode {\r\n    return this.CurrentState();\r\n  }\r\n}\r\n\r\nexport default MilleBornes;","import * as React from \"react\";\r\n\r\nimport { Row, SquareHeader, Square } from \"./Styles\";\r\n\r\nimport { CardRank } from \"../CardRank\";\r\n\r\ninterface IRowProp {\r\n  rank: CardRank;\r\n  values: number[];\r\n  selected: number;\r\n  onClick(event: React.MouseEvent<HTMLButtonElement>): void;\r\n}\r\n\r\nclass BoardRow extends React.Component<IRowProp> {\r\n  constructor(props: IRowProp) {\r\n    super(props);\r\n  }\r\n\r\n  private handleClick(event: React.MouseEvent<HTMLButtonElement>): void {\r\n    this.props.onClick(event);\r\n  }\r\n\r\n  public render(): React.ReactNode {\r\n    return (<Row>\r\n      <SquareHeader onClick={(event) => { this.handleClick(event); }}>{this.props.rank}</SquareHeader>\r\n      { this.props.values.map((value, index) =>\r\n        <Square\r\n          key={index}\r\n          isSelected={(this.props.selected == index)}>\r\n          {this.props.values[index]}\r\n        </Square>)}\r\n    </Row>);\r\n  }\r\n}\r\n\r\nexport default BoardRow;\r\n","import * as React from \"react\";\r\n\r\nimport { Board, ScoreHeader, ScoreValue, Score, ScoreButton } from \"./Styles\";\r\n\r\nimport { CardRank, AllRanks, getRankValues } from \"../CardRank\";\r\nimport BoardRow from \"../BoardRow/BoardRow\";\r\n\r\ntype CardRankMap = {[TKey in CardRank]: number};\r\n\r\nexport interface IBoardState {\r\n  negatives: number,\r\n  values: CardRankMap,\r\n}\r\n\r\nclass Split extends React.Component<{}, IBoardState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      negatives: 0,\r\n      values: {\r\n        \"A\": 0,\r\n        \"K\": 0,\r\n        \"Q\": 0,\r\n        \"J\": 0,\r\n        \"10\": 0,\r\n        \"9\": 0,\r\n        \"8\": 0,\r\n        \"7\": 0,\r\n        \"6\": 0,\r\n        \"5\": 0,\r\n        \"4\": 0,\r\n        \"3\": 0,\r\n        \"2\": 0,\r\n      },\r\n    };\r\n  }\r\n\r\n  private calculateScore(): number {\r\n    let total = this.state.negatives * -5;\r\n    for (let rank of AllRanks) {\r\n      total += getRankValues(rank)[this.state.values[rank]];\r\n    }\r\n    return total;\r\n  }\r\n\r\n  private addOne(rank: CardRank): void {\r\n    let newState = { ...this.state };\r\n\r\n    newState.values[rank] = (newState.values[rank] + 1) % 6;\r\n\r\n    this.setState(newState);\r\n  }\r\n\r\n  private addNegative(): void {\r\n    let newState = { ...this.state };\r\n\r\n    newState.negatives++;\r\n\r\n    this.setState(newState);\r\n  }\r\n\r\n  private subNegative(): void {\r\n    let newState = { ...this.state };\r\n\r\n    newState.negatives--;\r\n    if (newState.negatives < 0) {\r\n      newState.negatives = 0;\r\n    }\r\n\r\n    this.setState(newState);\r\n  }\r\n\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <Board>\r\n        <ScoreHeader>\r\n          <ScoreButton onClick={() => this.addNegative()}>-5</ScoreButton>\r\n          <Score>Negative: {this.state.negatives * -5}</Score>\r\n          <ScoreButton onClick={() => this.subNegative()}>+5</ScoreButton>\r\n          <ScoreValue>{this.calculateScore()}</ScoreValue>\r\n        </ScoreHeader>\r\n        { AllRanks.map((rank) => <BoardRow key={rank} rank={rank} values={getRankValues(rank)} selected={this.state.values[rank]} onClick={event => { this.addOne(rank); }}/>)}\r\n      </Board>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Split;\r\n","import * as React from \"react\";\r\n\r\nimport BasePage from \"../BasePage/BasePage\";\r\nimport SplitBoard from \"./SplitBoard/SplitBoard\";\r\n\r\nclass Split extends BasePage {\r\n  protected getPageName(): string {\r\n    return \"Split\";\r\n  }\r\n\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <SplitBoard/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Split;","import * as React from \"react\";\r\n\r\nimport BasePage from \"../BasePage/BasePage\";\r\n\r\nclass About extends BasePage {\r\n  protected getPageName(): string {\r\n    return \"About\";\r\n  }\r\n\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <div>\r\n        This site was created by Shane DeSeranno, Donald Gill, and Lara Ramey to aid in scoring games.\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import * as React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport { MainWindow } from \"./Styles\";\r\n\r\nimport Home from \"../Home/Home\";\r\nimport Split from \"../Split/Split\";\r\nimport About from \"../About/About\";\r\nimport MilleBornes from \"../MilleBornes/MilleBornes\";\r\n\r\nclass Main extends React.Component {\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <MainWindow>\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route path='/split' component={Split} />\r\n          <Route path='/millebornes' component={MilleBornes} />\r\n          <Route path='/about' component={About} />\r\n        </Switch>\r\n      </MainWindow>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import * as React from \"react\";\r\n\r\nimport { DarkTheme, LightTheme, ThemeProvider } from \"../../Theme\";\r\nimport { Page, GlobalStyle } from \"./Styles\";\r\n\r\nimport Header from \"../Header/Header\";\r\nimport Main from \"../Main/Main\";\r\n\r\nclass App extends React.Component {\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <ThemeProvider theme={DarkTheme}>\r\n        <Page>\r\n          <GlobalStyle />\r\n          <Header />\r\n          <Main />\r\n        </Page>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./Components/App/App\";\r\n\r\nReactDOM.render((\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>\r\n), document.getElementById('root'));\r\n"],"sourceRoot":""}