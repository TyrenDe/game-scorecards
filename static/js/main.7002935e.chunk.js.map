{"version":3,"sources":["Store/System/Types.ts","Theme.tsx","Components/Header/index.tsx","Components/Footer/index.tsx","Store/System/Actions.ts","Components/Home/index.tsx","Components/About/About.tsx","Components/Generic/ScoreCard.tsx","Store/Generic/Actions.ts","Store/Generic/Types.ts","Components/ConfirmationDialog.tsx","Components/Generic/index.tsx","Components/MilleBornes/SafetyRow.tsx","Components/MilleBornes/ScoreCard.tsx","Store/MilleBornes/Actions.ts","Store/MilleBornes/Types.ts","Components/MilleBornes/index.tsx","Store/Mu/Actions.ts","Store/Mu/Types.ts","Components/Mu/ScoreCard.tsx","Components/Mu/Trumps.tsx","Components/Mu/TrumpSelector.tsx","Components/Mu/ScoreHandDialog.tsx","Components/Mu/StalemateDialog.tsx","Components/Mu/index.tsx","Store/Qwixx/Types.ts","Store/Qwixx/Actions.ts","Components/Qwixx/ColorRow.tsx","Components/Qwixx/ScoreCard.tsx","Components/Qwixx/index.tsx","Store/Split/Types.ts","Components/Split/ScoreCard.tsx","Store/Split/Actions.ts","Components/Split/index.tsx","Components/Main/index.tsx","Components/App/index.tsx","Store/Generic/Reducers.ts","Store/MilleBornes/Reducers.ts","Store/Mu/Reducers.ts","Store/Split/Reducers.ts","Store/System/Reducers.ts","Store/Qwixx/Reducers.ts","Store/index.ts","serviceWorker.ts","index.tsx"],"names":["ThemeOptions","lightTheme","palette","primary","indigo","secondary","lightBlue","type","darkTheme","Themes","option","Light","light","dark","createMuiTheme","Header","React","render","position","value","this","props","location","pathname","variant","scrollButtons","label","to","component","Link","bind","withRouter","Footer","constructor","p","super","state","error","newName","showAddPlayerDialog","className","classes","appBar","chipWrapper","icon","chip","onClick","handleAdd","names","map","name","key","onDelete","handleDelete","open","maxWidth","fullWidth","onClose","handleDialogClose","required","autoFocus","onChange","handleNewNameChange","onKeyPress","handleKeyPress","length","color","disabled","handleAddName","event","preventDefault","target","trim","find","profile","toLowerCase","setState","addName","removeName","connect","system","dispatch","Mui","theme","top","bottom","margin","spacing","display","flexWrap","Home","About","ScoreCard","showScoreDialog","myScore","scores","scoreCardPaper","scoreButton","handleScoreRound","handleChange","handleUpdateScore","parseInt","isNaN","addScore","generic","width","padding","textAlign","ConfirmationDialog","showDialog","handleDialogConfirm","Generic","showConfirmationDialog","genericWrapper","handleReset","handleConfirmation","answer","reset","SafetyRow","item","xs","right","marginTop","center","checked","played","togglePlayed","hideCoupFourre","hidden","coupFourre","toggleCoupFourre","withStyles","verticalAlign","distance","rightOfWayPlayed","rightOfWayPlayedCF","drivingAcePlayed","drivingAcePlayedCF","fuelTankPlayed","fuelTankPlayedCF","punctureProofPlayed","punctureProofPlayedCF","delayedAction","safeTrip","extension","shutout","getScore","id","gutterBottom","aria-labelledby","valueLabelDisplay","step","min","max","marks","handleDistanceChanged","container","handleToggleRightOfWay","handleToggleRightOfWayCF","handleToggleDrivingAce","handleToggleDrivingAceCF","handleToggleFuelTank","handleToggleFuelTankCF","handleTogglePunctureProof","handleTogglePunctureProofCF","handleToggleDelayedAction","handleToggleSafeTrip","handleToggleShutout","Array","isArray","score","milleBornes","MilleBornes","milleBornesWrapper","Trumps","mu","TrumpSelector","selectBox","htmlFor","trump","handleTrumpChanged","inputProps","Black","Blue","Green","Red","Yellow","One","Seven","Zero","Two","Three","Four","Five","Six","Eight","Nine","None","onTrumpChanged","PointsPerBid","getChiefTeamBonus","overTrump","bid","Math","ScoreHandDialog","getDefaultState","componentDidUpdate","prevProps","sm","handleBidChanged","handleOverTrumpChanged","underTrump","handleUnderTrumpChanged","createPlayerRow","canSave","points","chief","vice","partner","handlePointsChange","newPoints","Object","assign","handleChief","handleVice","handlePartner","chiefTeamPoints","chiefTeamBidMade","playerCount","currentPoints","currentBid","getChiefTeamBidMade","missedBy","sum","StalemateDialog","lastBidder","highestBidders","createStalemateRow","handleUpdateStalemate","indexOf","handleLastBidder","included","filter","handleHighestBidder","concat","Mu","showStalemateDialog","handleScoreHand","buttonSpacing","handleStalemate","muWrapper","marginLeft","QwixxRanks","addValue","rank","number","removeValue","ColorRow","qwixx","Negative","renderNegative","isRedOrYellow","buttonList","index","push","getButton","reverse","style","backgroundColor","getLockIcon","getNegativeButton","renderScore","redScore","calcScore","yellowScore","greenScore","blueScore","negScore","values","count","includes","disabledButton","button","isLocked","toggleLock","unlock","lock","text","buttonClass","fontWeight","fontSize","textShadow","Qwixx","qwixxWrapper","SplitRanks","ValueMap","A","K","Q","J","10","9","8","7","6","5","4","3","2","ScoreName","calculateScore","createRow","split","Ten","justify","alignItems","row","handleIncrease","getRankValues","handleDecrease","selectedIndex","avatars","avatarClass","avatar","selectedAvatar","toString","marginRight","minWidth","height","main","contrastText","marginBottom","Split","splitWrapper","Main","m","exact","path","exactpath","App","currentTheme","getTheme","selectedTheme","ThemeProvider","CssBaseline","initialState","types","Dark","persistConfig","storage","rootReducer","combineReducers","action","produce","draft","search_index","splice","newTheme","persistedReducer","persistReducer","store","createStore","middleware","thunk","applyMiddleware","data","persistor","persistStore","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","storeData","loading","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7002935e.chunk.js","sourcesContent":["export enum ThemeOptions {\r\n  Light,\r\n  Dark,\r\n}\r\n\r\nexport interface ISystemState {\r\n  selectedTheme: ThemeOptions;\r\n  names: string[];\r\n}\r\n\r\nexport const SYSTEM_CHANGE_THEME = 'SYSTEM_CHANGE_THEME';\r\nexport const SYSTEM_ADD_NAME = 'SYSTEM_ADD_NAME';\r\nexport const SYSTEM_REMOVE_NAME = 'SYSTEM_REMOVE_NAME';\r\n\r\nexport interface ISystemChangeThemeAction {\r\n  newTheme: ThemeOptions;\r\n  type: typeof SYSTEM_CHANGE_THEME;\r\n}\r\n\r\nexport interface ISystemAddNameAction {\r\n  name: string;\r\n  type: typeof SYSTEM_ADD_NAME;\r\n}\r\n\r\nexport interface ISystemRemoveNameAction {\r\n  name: string;\r\n  type: typeof SYSTEM_REMOVE_NAME;\r\n}\r\n\r\nexport type SystemActionTypes =\r\n  ISystemChangeThemeAction |\r\n  ISystemAddNameAction |\r\n  ISystemRemoveNameAction;\r\n","import { lightBlue, indigo } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeOptions } from 'Store/System/Types';\r\nimport { PaletteType } from '@material-ui/core';\r\n\r\nconst lightTheme = {\r\n  palette: {\r\n    primary: indigo,\r\n    secondary: lightBlue,\r\n    type: 'light' as PaletteType,\r\n  },\r\n};\r\n\r\nconst darkTheme = {\r\n  palette: {\r\n    primary: indigo,\r\n    secondary: lightBlue,\r\n    type: 'dark' as PaletteType,\r\n  },\r\n};\r\n\r\nexport class Themes {\r\n  public static getTheme(option: ThemeOptions) {\r\n    switch (option) {\r\n      case ThemeOptions.Light:\r\n        return Themes.light;\r\n    }\r\n\r\n    return Themes.dark;\r\n  }\r\n\r\n  private static light = createMuiTheme(lightTheme);\r\n  private static dark = createMuiTheme(darkTheme);\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { bind } from 'decko';\r\n\r\ntype IAllHeaderProps =\r\n  RouteComponentProps<any>;\r\n\r\nclass Header extends React.Component<IAllHeaderProps, {}> {\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <React.Fragment>\r\n        <nav>\r\n          <Mui.AppBar position='static'>\r\n            <Mui.Tabs value={this.props.location.pathname} variant='scrollable' scrollButtons='on'>\r\n              <Mui.Tab value='/' label='Home' to='/' component={Link} />\r\n              <Mui.Tab value='/split' label='Split' to='/split' component={Link} />\r\n              <Mui.Tab value='/millebornes' label='Mille Bornes' to='/millebornes' component={Link} />\r\n              <Mui.Tab value='/mu' label='Mü' to='/mu' component={Link} />\r\n              <Mui.Tab value='/qwixx' label='Qwixx' to='/qwixx' component={Link} />\r\n              <Mui.Tab value='/generic' label='Generic' to='/generic' component={Link} />\r\n              <Mui.Tab value='/about' label='About' to='/about' component={Link} />\r\n            </Mui.Tabs>\r\n          </Mui.AppBar>\r\n        </nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import * as Mui from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as system from 'Store/System';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  chipWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface IFooterProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IFooterActions {\r\n  addName(name: string): void;\r\n  removeName(name: string): void;\r\n}\r\n\r\ntype IAllFooterProps =\r\n  IFooterProps &\r\n  IFooterActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IFooterState {\r\n  error: string;\r\n  newName: string;\r\n  showAddPlayerDialog: boolean;\r\n}\r\n\r\nclass Footer extends React.Component<IAllFooterProps, IFooterState> {\r\n  constructor(p: IAllFooterProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      error: '',\r\n      newName: '',\r\n      showAddPlayerDialog: false,\r\n    };\r\n  }\r\n\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.AppBar position='fixed' className={this.props.classes.appBar}>\r\n          <div className={this.props.classes.chipWrapper}>\r\n            <Mui.Chip icon={<AddIcon />} label='Add Player' variant='outlined' className={this.props.classes.chip} onClick={this.handleAdd} />\r\n            {this.props.names.map((name) => <Mui.Chip key={name} label={name} variant='outlined' className={this.props.classes.chip} onDelete={() => this.handleDelete(name)} />)}\r\n          </div>\r\n        </Mui.AppBar>\r\n\r\n        <Mui.Dialog open={this.state.showAddPlayerDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogContent>\r\n            <Mui.TextField\r\n              fullWidth={true}\r\n              required={true}\r\n              autoFocus={true}\r\n              value={this.state.newName}\r\n              onChange={this.handleNewNameChange}\r\n              onKeyPress={this.handleKeyPress}\r\n              label='Player or Team Name'\r\n            />\r\n            {(this.state.error.length !== 0) ? <Mui.FormHelperText error={true}>{this.state.error}</Mui.FormHelperText> : null}\r\n          </Mui.DialogContent>\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              disabled={this.state.error.length !== 0 || this.state.newName.length === 0}\r\n              onClick={this.handleAddName}\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleKeyPress(event: React.KeyboardEvent<HTMLInputElement>): void {\r\n    if (event.key === 'Enter') {\r\n      if (this.state.error.length === 0) {\r\n        this.handleAddName();\r\n      }\r\n\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private handleNewNameChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n    const newName: string = event.target.value.trim();\r\n\r\n    let error: string = '';\r\n    const existingProfile: string | undefined = this.props.names.find((profile) => profile.toLowerCase() === newName.toLowerCase());\r\n    if (existingProfile) {\r\n      error = 'Player or team already exists';\r\n    }\r\n\r\n    this.setState({\r\n      error,\r\n      newName: event.target.value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleAddName(): void {\r\n    const newName: string = this.state.newName.trim();\r\n\r\n    if (newName.length > 0) {\r\n      this.props.addName(newName);\r\n      this.setState({\r\n        newName: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showAddPlayerDialog: false,\r\n      newName: '',\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleAdd(): void {\r\n    this.setState({\r\n      showAddPlayerDialog: true,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDelete(name: string): void {\r\n    this.props.removeName(name);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IFooterProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IFooterActions => ({\r\n  addName: (name: string) => dispatch(system.addName(name)),\r\n  removeName: (name: string) => dispatch(system.removeName(name)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Footer));\r\n","import * as types from './Types';\r\n\r\nexport function changeTheme(newTheme: types.ThemeOptions): types.SystemActionTypes {\r\n  return {\r\n    newTheme,\r\n    type: types.SYSTEM_CHANGE_THEME,\r\n  };\r\n}\r\n\r\nexport function addName(name: string): types.SystemActionTypes {\r\n  return {\r\n    name,\r\n    type: types.SYSTEM_ADD_NAME,\r\n  };\r\n}\r\n\r\nexport function removeName(name: string): types.SystemActionTypes {\r\n  return {\r\n    name,\r\n    type: types.SYSTEM_REMOVE_NAME,\r\n  };\r\n}\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport Footer from '../Footer';\r\nimport { bind } from 'decko';\r\n\r\nclass Home extends React.Component<{}, {}> {\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Typography variant='h5'>\r\n          <p>Welcome to a quick and dirty way to keep track of scores on the go. This site allows you to add players, then\r\n          track scores for those players in a variety of games.  This is designed to be lightweight and quick to use.\r\n          It does NOT keep track of stats, players, or games across browser sessions.</p>\r\n\r\n          <p>It does use the local browser storage to maintain state to avoid accidentally losing the current session game\r\n          data.</p>\r\n        </Mui.Typography>\r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\n\r\nclass About extends React.Component<{}, {}> {\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <Mui.Typography variant='h5'>\r\n        This site was created by Shane DeSeranno, Donald Gill, Daniel Ramey, and Lara Ramey to aid in scoring various games.\r\n      </Mui.Typography>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as generic from 'Store/Generic';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 170,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n  },\r\n  scoreButton: {\r\n    margin: theme.spacing(1),\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, number>;\r\n}\r\n\r\ninterface IScoreCardActions {\r\n  addScore(name: string, value: number): void;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  IScoreCardActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IScoreCardState {\r\n  showScoreDialog: boolean;\r\n  value: string;\r\n}\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, IScoreCardState> {\r\n  constructor(p: IAllScoreCardProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showScoreDialog: false,\r\n      value: '',\r\n    };\r\n  }\r\n\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    const myScore: number = this.props.scores[this.props.name] ? this.props.scores[this.props.name] : 0;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n          <Mui.Typography variant='h5'>{this.props.name}: {myScore}</Mui.Typography>\r\n          <Mui.Divider />\r\n          <Mui.Button className={this.props.classes.scoreButton} color='primary' variant='contained' onClick={this.handleScoreRound}>Add Score</Mui.Button>\r\n        </Mui.Paper>\r\n\r\n        <Mui.Dialog open={this.state.showScoreDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogTitle>\r\n            Scoring for: {this.props.name}\r\n          </Mui.DialogTitle>\r\n\r\n          <Mui.Divider />\r\n\r\n          <Mui.DialogContent>\r\n            <Mui.TextField\r\n              value={this.state.value}\r\n              type='number'\r\n              onChange={this.handleChange}\r\n              label='Points'\r\n              onKeyPress={this.handleKeyPress}\r\n              fullWidth={true}\r\n              autoFocus={true}\r\n            />\r\n          </Mui.DialogContent>\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              onClick={this.handleUpdateScore}\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleKeyPress(event: React.KeyboardEvent<HTMLInputElement>): void {\r\n    if (event.key === 'Enter') {\r\n      this.handleUpdateScore();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private handleChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n    this.setState({\r\n      value: event.target.value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showScoreDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleScoreRound(): void {\r\n    this.setState({\r\n      showScoreDialog: true,\r\n      value: '',\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateScore(): void {\r\n    const value = parseInt(this.state.value, 10);\r\n    if (!isNaN(value)) {\r\n      this.props.addScore(this.props.name, value);\r\n    }\r\n\r\n    this.setState({\r\n      showScoreDialog: false,\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.generic.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreCardActions => ({\r\n  addScore: (name: string, value: number) => dispatch(generic.addScore(name, value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as types from './Types';\r\n\r\nexport function resetAll(): types.GenericActionTypes {\r\n  return {\r\n    type: types.GENERIC_RESET_ALL,\r\n  };\r\n}\r\n\r\nexport function addScore(name: string, value: number): types.GenericActionTypes {\r\n  return {\r\n    name,\r\n    value,\r\n    type: types.GENERIC_ADD_SCORE,\r\n  };\r\n}\r\n","export interface IGenericState {\r\n  readonly scores: Record<string, number>;\r\n}\r\n\r\nexport const GENERIC_RESET_ALL = 'GENERIC_RESET_ALL';\r\nexport const GENERIC_ADD_SCORE = 'GENERIC_ADD_SCORE';\r\n\r\nexport interface IGenericResetAllAction {\r\n  type: typeof GENERIC_RESET_ALL;\r\n}\r\n\r\nexport interface IGenericAddScoreAction {\r\n  name: string;\r\n  value: number;\r\n  type: typeof GENERIC_ADD_SCORE;\r\n}\r\n\r\nexport type GenericActionTypes =\r\n  IGenericResetAllAction |\r\n  IGenericAddScoreAction;\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { bind } from 'decko';\r\n\r\ninterface IConfirmationDialogProps {\r\n  showDialog: boolean;\r\n  onClose(answer: boolean): void;\r\n}\r\n\r\ntype IAllConfirmationDialogProps =\r\n  IConfirmationDialogProps;\r\n\r\nclass ConfirmationDialog extends React.Component<IAllConfirmationDialogProps, {}> {\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <Mui.Dialog open={this.props.showDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n        <Mui.DialogContent>\r\n          <Mui.Typography>Are you sure you want to clear the scores?</Mui.Typography>\r\n        </Mui.DialogContent>\r\n\r\n        <Mui.DialogActions>\r\n          <Mui.Button\r\n            variant='contained'\r\n            color='primary'\r\n            onClick={this.handleDialogClose}\r\n          >\r\n            No\r\n            </Mui.Button>\r\n\r\n          <Mui.Button\r\n            onClick={this.handleDialogConfirm}\r\n            variant='contained'\r\n            color='primary'\r\n          >\r\n            Yes\r\n            </Mui.Button>\r\n        </Mui.DialogActions>\r\n      </Mui.Dialog>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleDialogConfirm(): void {\r\n    this.props.onClose(true);\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.props.onClose(false);\r\n  }\r\n}\r\n\r\nexport default ConfirmationDialog;\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as generic from 'Store/Generic';\r\nimport ScoreCard from './ScoreCard';\r\nimport { bind } from 'decko';\r\nimport ConfirmationDialog from '../ConfirmationDialog';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  genericWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface IGenericProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IGenericActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllGenericProps =\r\n  IGenericProps &\r\n  IGenericActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IGenericState {\r\n  showConfirmationDialog: boolean;\r\n}\r\n\r\nclass Generic extends React.Component<IAllGenericProps, IGenericState> {\r\n  constructor(p: IAllGenericProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showConfirmationDialog: false,\r\n    };\r\n  }\r\n\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    if (this.props.names.length === 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Mui.Typography variant='h5'>\r\n            This tab can be used to track generic scores where you just add or subtract values from the player.  For example, Hearts, Five Crowns, Spades, Sticheln, or any other game.\r\n          </Mui.Typography>\r\n          <Mui.Typography variant='h6'>\r\n            <b>NOTE:</b> You currently have no players defined.  To add new players, click <Link color='secondary' to='/'>here</Link> to return home.  You will find the option to add and remove players at the bottom.\r\n          </Mui.Typography>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.genericWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n\r\n        <ConfirmationDialog onClose={this.handleConfirmation} showDialog={this.state.showConfirmationDialog} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleConfirmation(answer: boolean): void {\r\n    if (answer) {\r\n      this.props.reset();\r\n    }\r\n\r\n    this.setState({\r\n      showConfirmationDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.setState({\r\n      showConfirmationDialog: true,\r\n    });\r\n  }\r\n}\r\nconst mapStateToProps = (state: AppState): IGenericProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IGenericActions => ({\r\n  reset: () => dispatch(generic.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Generic));\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { bind } from 'decko';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  marginTop: {\r\n    marginTop: 10,\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    verticalAlign: 'middle',\r\n  },\r\n  hidden: {\r\n    display: 'none',\r\n  },\r\n});\r\n\r\ninterface ISafetyRowProps {\r\n  name: string;\r\n  played: boolean;\r\n  coupFourre: boolean;\r\n  hideCoupFourre?: boolean;\r\n  togglePlayed(): void;\r\n  toggleCoupFourre(): void;\r\n}\r\n\r\ntype IAllSafetyRowProps =\r\n  ISafetyRowProps &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass SafetyRow extends React.Component<IAllSafetyRowProps, {}> {\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Grid item={true} xs={6} className={this.props.classes.right}>\r\n          <Mui.Typography className={this.props.classes.marginTop}>{this.props.name}:</Mui.Typography>\r\n        </Mui.Grid>\r\n        <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Checkbox checked={this.props.played} onChange={this.props.togglePlayed} /></Mui.Grid>\r\n        <Mui.Grid className={this.props.hideCoupFourre ? this.props.classes.hidden : this.props.classes.center} item={true} xs={3}><Mui.Checkbox disabled={!this.props.played} checked={this.props.coupFourre} onChange={this.props.toggleCoupFourre} /></Mui.Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(localStyles)(SafetyRow);\r\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as milleBornes from 'Store/MilleBornes';\r\nimport SafetyRow from './SafetyRow';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  marginTop: {\r\n    marginTop: 10,\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    verticalAlign: 'middle',\r\n  },\r\n  scoreButton: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 170,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, number>;\r\n}\r\n\r\ninterface IScoreCardActions {\r\n  addScore(name: string, value: number): void;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  IScoreCardActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IScoreCardState {\r\n  showScoreDialog: boolean;\r\n  distance: number;\r\n  rightOfWayPlayed: boolean;\r\n  rightOfWayPlayedCF: boolean;\r\n  drivingAcePlayed: boolean;\r\n  drivingAcePlayedCF: boolean;\r\n  fuelTankPlayed: boolean;\r\n  fuelTankPlayedCF: boolean;\r\n  punctureProofPlayed: boolean;\r\n  punctureProofPlayedCF: boolean;\r\n  delayedAction: boolean;\r\n  safeTrip: boolean;\r\n  extension: boolean;\r\n  shutout: boolean;\r\n}\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, IScoreCardState> {\r\n  constructor(p: IAllScoreCardProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showScoreDialog: false,\r\n      distance: 0,\r\n      rightOfWayPlayed: false,\r\n      rightOfWayPlayedCF: false,\r\n      drivingAcePlayed: false,\r\n      drivingAcePlayedCF: false,\r\n      fuelTankPlayed: false,\r\n      fuelTankPlayedCF: false,\r\n      punctureProofPlayed: false,\r\n      punctureProofPlayedCF: false,\r\n      delayedAction: false,\r\n      safeTrip: false,\r\n      extension: false,\r\n      shutout: false,\r\n    };\r\n  }\r\n\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n          <Mui.Typography variant='h5'>{this.props.name}: {this.getScore()}</Mui.Typography>\r\n          <Mui.Divider />\r\n          <Mui.Button className={this.props.classes.scoreButton} color='primary' variant='contained' onClick={this.handleScoreRound}>Add Score</Mui.Button>\r\n        </Mui.Paper>\r\n\r\n        <Mui.Dialog open={this.state.showScoreDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogTitle>\r\n            Scoring for: {this.props.name}\r\n          </Mui.DialogTitle>\r\n\r\n          <Mui.Divider />\r\n\r\n          <Mui.DialogContent>\r\n            <Mui.Typography id='distance-slider' gutterBottom={true}>Distance</Mui.Typography>\r\n            <Mui.Slider\r\n              aria-labelledby='distance-slider'\r\n              valueLabelDisplay='on'\r\n              step={25}\r\n              min={0}\r\n              max={1000}\r\n              marks={true}\r\n              value={this.state.distance}\r\n              onChange={this.handleDistanceChanged}\r\n            />\r\n\r\n            <Mui.Grid container={true}>\r\n              <Mui.Grid item={true} xs={6} className={this.props.classes.right}></Mui.Grid>\r\n              <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Typography>Played</Mui.Typography></Mui.Grid>\r\n              <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Typography>Coup-fourré</Mui.Typography></Mui.Grid>\r\n\r\n              <SafetyRow name='Right of Way' hideCoupFourre={true} played={this.state.rightOfWayPlayed} coupFourre={this.state.rightOfWayPlayedCF} togglePlayed={this.handleToggleRightOfWay} toggleCoupFourre={this.handleToggleRightOfWayCF} />\r\n              <SafetyRow name='Driving Ace' played={this.state.drivingAcePlayed} coupFourre={this.state.drivingAcePlayedCF} togglePlayed={this.handleToggleDrivingAce} toggleCoupFourre={this.handleToggleDrivingAceCF} />\r\n              <SafetyRow name='Extra Tank' played={this.state.fuelTankPlayed} coupFourre={this.state.fuelTankPlayedCF} togglePlayed={this.handleToggleFuelTank} toggleCoupFourre={this.handleToggleFuelTankCF} />\r\n              <SafetyRow name='Puncture Proof' played={this.state.punctureProofPlayed} coupFourre={this.state.punctureProofPlayedCF} togglePlayed={this.handleTogglePunctureProof} toggleCoupFourre={this.handleTogglePunctureProofCF} />\r\n\r\n              <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Delayed Action:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox disabled={this.state.distance < 1000} checked={this.state.delayedAction} onChange={this.handleToggleDelayedAction} /></Mui.Grid>\r\n\r\n              <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Safe Trip:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox disabled={this.state.distance < 1000} checked={this.state.safeTrip} onChange={this.handleToggleSafeTrip} /></Mui.Grid>\r\n\r\n              {/* <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Extension:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox checked={this.state.extension} onChange={this.handleToggleExtension} /></Mui.Grid> */}\r\n\r\n              <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Shutout:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox disabled={this.state.distance < 1000} checked={this.state.shutout} onChange={this.handleToggleShutout} /></Mui.Grid>\r\n            </Mui.Grid>\r\n          </Mui.DialogContent>\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              onClick={this.handleUpdateScore}\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleDistanceChanged(event: React.ChangeEvent<{}>, value: number | number[]): void {\r\n    if (Array.isArray(value)) {\r\n      value = value[value.length - 1];\r\n    }\r\n\r\n    this.setState({\r\n      distance: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleDelayedAction(): void {\r\n    this.setState({\r\n      delayedAction: !this.state.delayedAction,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleShutout(): void {\r\n    this.setState({\r\n      shutout: !this.state.shutout,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleSafeTrip(): void {\r\n    this.setState({\r\n      safeTrip: !this.state.safeTrip,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleRightOfWay(): void {\r\n    this.setState({\r\n      rightOfWayPlayed: !this.state.rightOfWayPlayed,\r\n      rightOfWayPlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleRightOfWayCF(): void {\r\n    this.setState({\r\n      rightOfWayPlayedCF: !this.state.rightOfWayPlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleDrivingAce(): void {\r\n    this.setState({\r\n      drivingAcePlayed: !this.state.drivingAcePlayed,\r\n      drivingAcePlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleDrivingAceCF(): void {\r\n    this.setState({\r\n      drivingAcePlayedCF: !this.state.drivingAcePlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleFuelTank(): void {\r\n    this.setState({\r\n      fuelTankPlayed: !this.state.fuelTankPlayed,\r\n      fuelTankPlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleFuelTankCF(): void {\r\n    this.setState({\r\n      fuelTankPlayedCF: !this.state.fuelTankPlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleTogglePunctureProof(): void {\r\n    this.setState({\r\n      punctureProofPlayed: !this.state.punctureProofPlayed,\r\n      punctureProofPlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleTogglePunctureProofCF(): void {\r\n    this.setState({\r\n      punctureProofPlayedCF: !this.state.punctureProofPlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showScoreDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateScore(): void {\r\n    let score: number = 0;\r\n\r\n    score += this.state.distance;\r\n\r\n    if (this.state.drivingAcePlayed) {\r\n      score += 100;\r\n      if (this.state.drivingAcePlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.fuelTankPlayed) {\r\n      score += 100;\r\n      if (this.state.fuelTankPlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.punctureProofPlayed) {\r\n      score += 100;\r\n      if (this.state.punctureProofPlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.rightOfWayPlayed) {\r\n      score += 100;\r\n      if (this.state.rightOfWayPlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.drivingAcePlayed && this.state.fuelTankPlayed && this.state.punctureProofPlayed && this.state.rightOfWayPlayed) {\r\n      score += 300;\r\n    }\r\n\r\n    if (this.state.distance === 1000) {\r\n      score += 400;\r\n\r\n      if (this.state.shutout) {\r\n        score += 500;\r\n      }\r\n\r\n      if (this.state.safeTrip) {\r\n        score += 300;\r\n      }\r\n\r\n      if (this.state.extension) {\r\n        score += 200;\r\n      }\r\n\r\n      if (this.state.delayedAction) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    this.props.addScore(this.props.name, score);\r\n    this.setState({\r\n      showScoreDialog: false,\r\n      distance: 0,\r\n      rightOfWayPlayed: false,\r\n      rightOfWayPlayedCF: false,\r\n      drivingAcePlayed: false,\r\n      drivingAcePlayedCF: false,\r\n      fuelTankPlayed: false,\r\n      fuelTankPlayedCF: false,\r\n      punctureProofPlayed: false,\r\n      punctureProofPlayedCF: false,\r\n      delayedAction: false,\r\n      safeTrip: false,\r\n      extension: false,\r\n      shutout: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private getScore(): number {\r\n    const score = this.props.scores[this.props.name];\r\n    return score ? score : 0;\r\n  }\r\n\r\n  @bind\r\n  private handleScoreRound(): void {\r\n    this.setState({\r\n      showScoreDialog: true,\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.milleBornes.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreCardActions => ({\r\n  addScore: (name: string, value: number) => dispatch(milleBornes.addScore(name, value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as types from './Types';\r\n\r\nexport function resetAll(): types.MilleBornesActionTypes {\r\n  return {\r\n    type: types.MILLE_BORNES_RESET_ALL,\r\n  };\r\n}\r\n\r\nexport function addScore(name: string, value: number): types.MilleBornesActionTypes {\r\n  return {\r\n    name,\r\n    value,\r\n    type: types.MILLE_BORNES_ADD_SCORE,\r\n  };\r\n}\r\n","export interface IMilleBornesState {\r\n  readonly scores: Record<string, number>;\r\n}\r\n\r\nexport const MILLE_BORNES_RESET_ALL = 'MILLE_BORNES_RESET_ALL';\r\nexport const MILLE_BORNES_ADD_SCORE = 'MILLE_BORNES_ADD_SCORE';\r\n\r\nexport interface IMilleBornesResetAllAction {\r\n  type: typeof MILLE_BORNES_RESET_ALL;\r\n}\r\n\r\nexport interface IMilleBornesAddScoreAction {\r\n  name: string;\r\n  value: number;\r\n  type: typeof MILLE_BORNES_ADD_SCORE;\r\n}\r\n\r\nexport type MilleBornesActionTypes =\r\n  IMilleBornesResetAllAction |\r\n  IMilleBornesAddScoreAction;\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { bind } from 'decko';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as milleBornes from 'Store/MilleBornes';\r\nimport ScoreCard from './ScoreCard';\r\nimport ConfirmationDialog from '../ConfirmationDialog';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  milleBornesWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface IMilleBornesProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IMilleBornesActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllMilleBornesProps =\r\n  IMilleBornesProps &\r\n  IMilleBornesActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IMilleBornesState {\r\n  showConfirmationDialog: boolean;\r\n}\r\n\r\nclass MilleBornes extends React.Component<IAllMilleBornesProps, IMilleBornesState> {\r\n  constructor(p: IAllMilleBornesProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showConfirmationDialog: false,\r\n    };\r\n  }\r\n\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    if (this.props.names.length === 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Mui.Typography variant='h5'>\r\n            This tab can be used to track scores for the game Mille Bornes.\r\n          </Mui.Typography>\r\n          <Mui.Typography variant='h6'>\r\n            <b>NOTE:</b> You currently have no players defined.  To add new players, click <Link color='secondary' to='/'>here</Link> to return home.  You will find the option to add and remove players at the bottom.\r\n          </Mui.Typography>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.milleBornesWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n        <ConfirmationDialog onClose={this.handleConfirmation} showDialog={this.state.showConfirmationDialog}/>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleConfirmation(answer: boolean): void {\r\n    if (answer) {\r\n      this.props.reset();\r\n    }\r\n\r\n    this.setState({\r\n      showConfirmationDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.setState({\r\n      showConfirmationDialog: true,\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IMilleBornesProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IMilleBornesActions => ({\r\n  reset: () => dispatch(milleBornes.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(MilleBornes));\r\n","import * as types from './Types';\r\n\r\nexport function resetAll(): types.MuActionTypes {\r\n  return {\r\n    type: types.MU_RESET_ALL,\r\n  };\r\n}\r\n\r\nexport function addScore(name: string, value: number): types.MuActionTypes {\r\n  return {\r\n    name,\r\n    value,\r\n    type: types.MU_ADD_SCORE,\r\n  };\r\n}\r\n","export interface IMuState {\r\n  readonly scores: Record<string, number>;\r\n}\r\n\r\nexport const MU_RESET_ALL = 'MU_RESET_ALL';\r\nexport const MU_ADD_SCORE = 'MU_ADD_SCORE';\r\n\r\nexport interface IMuResetAllAction {\r\n  type: typeof MU_RESET_ALL;\r\n}\r\n\r\nexport interface IMuAddScoreAction {\r\n  name: string;\r\n  value: number;\r\n  type: typeof MU_ADD_SCORE;\r\n}\r\n\r\nexport type MuActionTypes =\r\n  IMuResetAllAction |\r\n  IMuAddScoreAction;\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { bind } from 'decko';\r\n\r\nimport { AppState } from 'Store';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 170,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, number>;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, {}> {\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    const myScore: number = this.props.scores[this.props.name] ? this.props.scores[this.props.name] : 0;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n          <Mui.Typography variant='h5'>{this.props.name}: {myScore}</Mui.Typography>\r\n        </Mui.Paper>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.mu.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): {} => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","enum Trumps {\r\n  Black,\r\n  Blue,\r\n  Green,\r\n  Red,\r\n  Yellow,\r\n  One,\r\n  Seven,\r\n  Zero,\r\n  Two,\r\n  Three,\r\n  Four,\r\n  Five,\r\n  Six,\r\n  Eight,\r\n  Nine,\r\n  None,\r\n}\r\n\r\nexport default Trumps;\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { bind } from 'decko';\r\n\r\nimport Trumps from './Trumps';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  selectBox: {\r\n    width: 180,\r\n  },\r\n});\r\n\r\ninterface ITrumpSelectorProps {\r\n  label: string;\r\n  trump: Trumps;\r\n  onTrumpChanged(value: Trumps): void;\r\n}\r\n\r\ntype IAllTrumpSelectorProps =\r\n  ITrumpSelectorProps &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass TrumpSelector extends React.Component<IAllTrumpSelectorProps, {}> {\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <Mui.FormControl variant='filled' className={this.props.classes.selectBox}>\r\n        <Mui.InputLabel htmlFor='trump'>\r\n          {this.props.label}\r\n        </Mui.InputLabel>\r\n        <Mui.Select\r\n          value={this.props.trump}\r\n          onChange={this.handleTrumpChanged}\r\n          inputProps={{\r\n            name: 'trump',\r\n            id: 'trump',\r\n          }}\r\n        >\r\n          <Mui.MenuItem value={Trumps.Black}>Black</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Blue}>Blue</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Green}>Green</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Red}>Red</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Yellow}>Yellow</Mui.MenuItem>\r\n          <Mui.Divider />\r\n          <Mui.MenuItem value={Trumps.One}>1</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Seven}>7</Mui.MenuItem>\r\n          <Mui.Divider />\r\n          <Mui.MenuItem value={Trumps.Zero}>0</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Two}>2</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Three}>3</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Four}>4</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Five}>5</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Six}>6</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Eight}>8</Mui.MenuItem>\r\n          <Mui.MenuItem value={Trumps.Nine}>9</Mui.MenuItem>\r\n          <Mui.Divider />\r\n          <Mui.MenuItem value={Trumps.None}>No Trump</Mui.MenuItem>\r\n        </Mui.Select>\r\n      </Mui.FormControl>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleTrumpChanged(event: React.ChangeEvent<{ name?: string; value: unknown }>): void {\r\n    this.props.onTrumpChanged(event.target.value as Trumps);\r\n  }\r\n}\r\n\r\nexport default Mui.withStyles(localStyles)(TrumpSelector);\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { bind } from 'decko';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as mu from 'Store/Mu';\r\nimport Trumps from './Trumps';\r\nimport TrumpSelector from './TrumpSelector';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  center: {\r\n    marginTop: 8,\r\n  },\r\n});\r\n\r\nconst PointsPerBid = [0, 0, 0, 0, 2, 3, 4];\r\nfunction getChiefTeamBidMade(playerCount: number, points: number): number {\r\n  let currentPoints = 62 - playerCount; // Hacky, but works, as 4 player = 58, 5 player = 57, 6 player = 56\r\n  let currentBid = 60 / playerCount;\r\n  while (currentPoints > points) {\r\n    currentBid--;\r\n    currentPoints -= PointsPerBid[playerCount];\r\n  }\r\n\r\n  return Math.max(0, currentBid);\r\n}\r\n\r\nfunction getChiefTeamBonus(overTrump: Trumps, bid: number): number {\r\n  switch (overTrump) {\r\n    case Trumps.Black:\r\n    case Trumps.Blue:\r\n    case Trumps.Green:\r\n    case Trumps.Red:\r\n    case Trumps.Yellow:\r\n      return 10 * Math.min(10, bid);\r\n\r\n    case Trumps.One:\r\n    case Trumps.Seven:\r\n      return 10 + 10 * Math.min(9, bid);\r\n\r\n    case Trumps.None:\r\n      return 30 + 10 * Math.min(7, bid);\r\n  }\r\n\r\n  // 0, 2, 3, 4, 5, 6, 8, 9\r\n  return 20 + 10 * Math.min(6, bid);\r\n}\r\n\r\ninterface IScoreHandDialogMappedProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IScoreHandDialogProps {\r\n  showDialog: boolean;\r\n  onClose(): void;\r\n}\r\n\r\ninterface IScoreHandDialogActions {\r\n  addScore(name: string, value: number): void;\r\n}\r\n\r\ntype IAllScoreHandDialogProps =\r\n  IScoreHandDialogMappedProps &\r\n  IScoreHandDialogProps &\r\n  IScoreHandDialogActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IScoreHandDialogState {\r\n  bid: number;\r\n  overTrump: Trumps;\r\n  underTrump: Trumps;\r\n  chief: string;\r\n  vice: string;\r\n  partner: string;\r\n  points: Record<string, string>;\r\n}\r\n\r\nclass ScoreHandDialog extends React.Component<IAllScoreHandDialogProps, IScoreHandDialogState> {\r\n  constructor(p: IAllScoreHandDialogProps) {\r\n    super(p);\r\n\r\n    this.state = this.getDefaultState();\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IAllScoreHandDialogProps): void {\r\n    if (!prevProps.showDialog && this.props.showDialog) {\r\n      this.setState(this.getDefaultState());\r\n    }\r\n  }\r\n\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <Mui.Dialog open={this.props.showDialog} maxWidth='sm' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogContent>\r\n            <Mui.Grid container={true} spacing={2}>\r\n              <Mui.Grid item={true} sm={4} xs={12}>\r\n                <Mui.Typography>Bid</Mui.Typography>\r\n                <Mui.Slider\r\n                  value={this.state.bid}\r\n                  onChange={this.handleBidChanged}\r\n                  min={1}\r\n                  max={60 / this.props.names.length}\r\n                  step={1}\r\n                  valueLabelDisplay='on'\r\n                  marks={true}\r\n                />\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} sm={4} xs={12}>\r\n                <TrumpSelector label='Over Trump' trump={this.state.overTrump} onTrumpChanged={this.handleOverTrumpChanged}/>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} sm={4} xs={12}>\r\n              <TrumpSelector label='Under Trump' trump={this.state.underTrump} onTrumpChanged={this.handleUnderTrumpChanged}/>\r\n              </Mui.Grid>\r\n\r\n              <Mui.Grid item={true} xs={2}>Name</Mui.Grid>\r\n              <Mui.Grid item={true} xs={2}>Chief</Mui.Grid>\r\n              <Mui.Grid item={true} xs={2}>Vice</Mui.Grid>\r\n              <Mui.Grid item={true} xs={2}>Partner</Mui.Grid>\r\n              <Mui.Grid item={true} xs={4}></Mui.Grid>\r\n              <Mui.Grid item={true} xs={12}><Mui.Divider /></Mui.Grid>\r\n\r\n              {this.props.names.map((name) => this.createPlayerRow(name))}\r\n            </Mui.Grid>\r\n          </Mui.DialogContent>\r\n\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              onClick={this.handleUpdateScore}\r\n              variant='contained'\r\n              color='primary'\r\n              disabled={!this.canSave()}\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private getDefaultState(): IScoreHandDialogState {\r\n    const points: Record<string, string> = {};\r\n    for (const name of this.props.names) {\r\n      points[name] = '0';\r\n    }\r\n\r\n    return {\r\n      bid: 1,\r\n      overTrump: Trumps.Black,\r\n      underTrump: Trumps.Blue,\r\n      chief: '',\r\n      vice: '',\r\n      partner: '',\r\n      points,\r\n    };\r\n  }\r\n\r\n  @bind\r\n  private handlePointsChange(name: string, value: string): void {\r\n    const newPoints = Object.assign({}, this.state.points);\r\n    newPoints[name] = value;\r\n    this.setState({\r\n      points: newPoints,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleChief(name: string): void {\r\n    this.setState({\r\n      chief: name,\r\n      vice: (this.state.vice === name) ? '' : this.state.vice,\r\n      partner: (this.state.partner === name) ? '' : this.state.partner,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleVice(name: string): void {\r\n    this.setState({\r\n      chief: (this.state.chief === name) ? '' : this.state.chief,\r\n      vice: name,\r\n      partner: (this.state.partner === name) ? '' : this.state.partner,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handlePartner(name: string): void {\r\n    this.setState({\r\n      chief: (this.state.chief === name) ? '' : this.state.chief,\r\n      vice: (this.state.vice === name) ? '' : this.state.vice,\r\n      partner: name,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleOverTrumpChanged(value: Trumps): void {\r\n    this.setState({\r\n      overTrump: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUnderTrumpChanged(value: Trumps): void {\r\n    this.setState({\r\n      underTrump: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateScore(): void {\r\n    // First check to see if the chief team made it\r\n    const chiefTeamPoints = parseInt(this.state.points[this.state.chief], 10) + parseInt(this.state.points[this.state.partner], 10);\r\n    const chiefTeamBidMade = getChiefTeamBidMade(this.props.names.length, chiefTeamPoints);\r\n\r\n    if (chiefTeamBidMade >= this.state.bid) {\r\n      // Chief made it!\r\n      for (const name of this.props.names) {\r\n        let score: number = parseInt(this.state.points[name], 10);\r\n        if (name === this.state.chief || name === this.state.partner) {\r\n          score += getChiefTeamBonus(this.state.overTrump, this.state.bid);\r\n        }\r\n\r\n        this.props.addScore(name, score);\r\n      }\r\n    } else {\r\n      // Chief missed it!\r\n      const missedBy = this.state.bid - chiefTeamBidMade;\r\n      for (const name of this.props.names) {\r\n        let score: number = parseInt(this.state.points[name], 10);\r\n        if (name === this.state.chief) {\r\n          score -= 10 * missedBy;\r\n        } else if (name !== this.state.partner) {\r\n          score += 5 * missedBy;\r\n        }\r\n\r\n        this.props.addScore(name, score);\r\n      }\r\n    }\r\n\r\n    this.props.onClose();\r\n  }\r\n\r\n  @bind\r\n  private createPlayerRow(name: string): JSX.Element {\r\n    return (\r\n      <React.Fragment key={name}>\r\n        <Mui.Grid className={this.props.classes.center} item={true} xs={2}>{name}</Mui.Grid>\r\n        <Mui.Grid item={true} xs={2}><Mui.Checkbox onClick={() => this.handleChief(name)} checked={this.state.chief === name} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={2}><Mui.Checkbox onClick={() => this.handleVice(name)} checked={this.state.vice === name} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={2}><Mui.Checkbox onClick={() => this.handlePartner(name)} checked={this.state.partner === name} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={4}>\r\n          <Mui.TextField\r\n            type='number'\r\n            value={this.state.points[name]}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => this.handlePointsChange(name, event.target.value)}\r\n            label='Points'\r\n            fullWidth={true}\r\n          />\r\n        </Mui.Grid>\r\n        <Mui.Grid item={true} xs={12}><Mui.Divider /></Mui.Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private canSave(): boolean {\r\n    if (this.state.chief.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    if (this.state.partner.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    let sum: number = 0;\r\n    for (const name of this.props.names) {\r\n      sum += parseInt(this.state.points[name], 10);\r\n    }\r\n\r\n    if (sum !== 60) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  @bind\r\n  private handleBidChanged(event: React.ChangeEvent<{}>, value: number | number[]): void {\r\n    if (Array.isArray(value)) {\r\n      value = value[value.length - 1];\r\n    }\r\n\r\n    this.setState({\r\n      bid: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.props.onClose();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreHandDialogMappedProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreHandDialogActions => ({\r\n  addScore: (name: string, value: number) => dispatch(mu.addScore(name, value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreHandDialog));\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { bind } from 'decko';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as mu from 'Store/Mu';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  center: {\r\n    marginTop: 8,\r\n  },\r\n});\r\n\r\ninterface IStalemateDialogMappedProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IStalemateDialogProps {\r\n  showDialog: boolean;\r\n  onClose(): void;\r\n}\r\n\r\ninterface IStalemateDialogActions {\r\n  addScore(name: string, value: number): void;\r\n}\r\n\r\ntype IAllStalemateDialogProps =\r\n  IStalemateDialogMappedProps &\r\n  IStalemateDialogProps &\r\n  IStalemateDialogActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IStalemateDialogState {\r\n  bid: number;\r\n  lastBidder: string;\r\n  highestBidders: string[];\r\n}\r\n\r\nclass StalemateDialog extends React.Component<IAllStalemateDialogProps, IStalemateDialogState> {\r\n  constructor(p: IAllStalemateDialogProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      bid: 1,\r\n      lastBidder: '',\r\n      highestBidders: [],\r\n    };\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IAllStalemateDialogProps): void {\r\n    if (!prevProps.showDialog && this.props.showDialog) {\r\n      this.setState({\r\n        bid: 1,\r\n        lastBidder: '',\r\n        highestBidders: [],\r\n      });\r\n    }\r\n  }\r\n\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <Mui.Dialog open={this.props.showDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n        <Mui.DialogContent>\r\n          <Mui.Grid container={true}>\r\n            <Mui.Grid item={true} xs={12}>\r\n              <Mui.Typography>Bid</Mui.Typography>\r\n              <Mui.Slider\r\n                value={this.state.bid}\r\n                onChange={this.handleBidChanged}\r\n                min={1}\r\n                max={60 / this.props.names.length}\r\n                step={1}\r\n                valueLabelDisplay='on'\r\n                marks={true}\r\n              />\r\n            </Mui.Grid>\r\n\r\n            <Mui.Grid item={true} xs={4}>Name</Mui.Grid>\r\n            <Mui.Grid item={true} xs={4}>Last Bidder</Mui.Grid>\r\n            <Mui.Grid item={true} xs={4}>Highest Bidder</Mui.Grid>\r\n            <Mui.Grid item={true} xs={12}><Mui.Divider /></Mui.Grid>\r\n\r\n            {this.props.names.map((name) => this.createStalemateRow(name))}\r\n          </Mui.Grid>\r\n        </Mui.DialogContent>\r\n\r\n        <Mui.DialogActions>\r\n          <Mui.Button\r\n            variant='contained'\r\n            color='primary'\r\n            onClick={this.handleDialogClose}\r\n          >\r\n            Cancel\r\n            </Mui.Button>\r\n\r\n          <Mui.Button\r\n            onClick={this.handleUpdateStalemate}\r\n            variant='contained'\r\n            color='primary'\r\n            disabled={!this.canSave()}\r\n          >\r\n            Add\r\n            </Mui.Button>\r\n        </Mui.DialogActions>\r\n      </Mui.Dialog>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateStalemate(): void {\r\n    for (const name of this.props.names) {\r\n      if (this.state.lastBidder === name) {\r\n        this.props.addScore(name, -10 * this.state.bid);\r\n      } else if (this.state.highestBidders.indexOf(name) > -1) {\r\n        this.props.addScore(name, 5 * this.state.bid);\r\n      }\r\n    }\r\n\r\n    this.props.onClose();\r\n  }\r\n\r\n  @bind\r\n  private handleLastBidder(name: string): void {\r\n    const included = this.state.highestBidders.indexOf(name) !== -1;\r\n\r\n    this.setState({\r\n      lastBidder: name,\r\n      highestBidders: included ? this.state.highestBidders.filter((item) => item !== name) : this.state.highestBidders,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleHighestBidder(name: string): void {\r\n    const included = this.state.highestBidders.indexOf(name) !== -1;\r\n    if (included) {\r\n      this.setState({\r\n        highestBidders: this.state.highestBidders.filter((item) => item !== name),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        lastBidder: name === this.state.lastBidder ? '' : this.state.lastBidder,\r\n        highestBidders: this.state.highestBidders.concat(name),\r\n      });\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private createStalemateRow(name: string): JSX.Element {\r\n    return (\r\n      <React.Fragment key={name}>\r\n        <Mui.Grid className={this.props.classes.center} item={true} xs={4}>{name}</Mui.Grid>\r\n        <Mui.Grid item={true} xs={4}><Mui.Checkbox onClick={() => this.handleLastBidder(name)} checked={this.state.lastBidder === name} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={4}><Mui.Checkbox onClick={() => this.handleHighestBidder(name)} checked={this.state.highestBidders.indexOf(name) !== -1} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={12}><Mui.Divider /></Mui.Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private canSave(): boolean {\r\n    return this.state.highestBidders.length > 0 && this.state.lastBidder.length > 0;\r\n  }\r\n\r\n  @bind\r\n  private handleBidChanged(event: React.ChangeEvent<{}>, value: number | number[]): void {\r\n    if (Array.isArray(value)) {\r\n      value = value[value.length - 1];\r\n    }\r\n\r\n    this.setState({\r\n      bid: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.props.onClose();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IStalemateDialogMappedProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IStalemateDialogActions => ({\r\n  addScore: (name: string, value: number) => dispatch(mu.addScore(name, value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(StalemateDialog));\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { bind } from 'decko';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as mu from 'Store/Mu';\r\nimport ScoreCard from './ScoreCard';\r\nimport ScoreHandDialog from './ScoreHandDialog';\r\nimport StalemateDialog from './StalemateDialog';\r\nimport ConfirmationDialog from '../ConfirmationDialog';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  muWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  buttonSpacing: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n});\r\n\r\ninterface IMuProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IMuActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllMuProps =\r\n  IMuProps &\r\n  IMuActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IMuState {\r\n  showStalemateDialog: boolean;\r\n  showScoreDialog: boolean;\r\n  showConfirmationDialog: boolean;\r\n}\r\n\r\nclass Mu extends React.Component<IAllMuProps, IMuState> {\r\n  constructor(p: IAllMuProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showScoreDialog: false,\r\n      showStalemateDialog: false,\r\n      showConfirmationDialog: false,\r\n    };\r\n  }\r\n\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    if (this.props.names.length < 4) {\r\n      return (\r\n        <React.Fragment>\r\n          <Mui.Typography variant='h5'>\r\n            This tab can be used to track scores for the game of Mü.\r\n          </Mui.Typography>\r\n          <Mui.Typography variant='h6'>\r\n            <b>NOTE:</b> You currently have less than 4 players defined.  To add new players, click <Link color='secondary' to='/'>here</Link> to return home.  You will find the option to add and remove players at the bottom.\r\n          </Mui.Typography>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    if (this.props.names.length > 6) {\r\n      return (\r\n        <React.Fragment>\r\n          <Mui.Typography variant='h5'>\r\n          This tab can be used to track scores for the game of Mü.\r\n          </Mui.Typography>\r\n          <Mui.Typography variant='h6'>\r\n            <b>NOTE:</b> You currently have more than 6 players defined.  To remove players, click <Link color='secondary' to='/'>here</Link> to return home.  You will find the option to add and remove players at the bottom.\r\n          </Mui.Typography>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleScoreHand}>Score Hand</Mui.Button>\r\n        <Mui.Button className={this.props.classes.buttonSpacing} color='primary' variant='contained' onClick={this.handleStalemate}>Stalemate</Mui.Button>\r\n        <div className={this.props.classes.muWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n\r\n        <ScoreHandDialog onClose={this.handleDialogClose} showDialog={this.state.showScoreDialog} />\r\n        <StalemateDialog onClose={this.handleDialogClose} showDialog={this.state.showStalemateDialog} />\r\n        <ConfirmationDialog onClose={this.handleConfirmation} showDialog={this.state.showConfirmationDialog}/>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showScoreDialog: false,\r\n      showStalemateDialog: false,\r\n      showConfirmationDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleScoreHand(): void {\r\n    this.setState({\r\n      showScoreDialog: true,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleStalemate(): void {\r\n    this.setState({\r\n      showStalemateDialog: true,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleConfirmation(answer: boolean): void {\r\n    if (answer) {\r\n      this.props.reset();\r\n    }\r\n\r\n    this.setState({\r\n      showConfirmationDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.setState({\r\n      showConfirmationDialog: true,\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IMuProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IMuActions => ({\r\n  reset: () => dispatch(mu.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Mu));\r\n","export enum QwixxRanks {\r\n  Red = 'Red',\r\n  Yellow = 'Yellow',\r\n  Green = 'Green',\r\n  Blue = 'Blue',\r\n\r\n  Negative = 'Negative',\r\n}\r\n\r\nexport interface IQwixxState {\r\n  readonly isLocked: Record<QwixxRanks, boolean>;\r\n  readonly values: Record<QwixxRanks, number[]>;\r\n}\r\n\r\nexport const QWIXX_RESET_ALL = 'QWIXX_RESET_ALL';\r\nexport const QWIXX_ADD_VALUE = 'QWIXX_ADD_VALUE';\r\nexport const QWIXX_REMOVE_VALUE = 'QWIXX_REMOVE_VALUE';\r\nexport const QWIXX_LOCK = 'QWIXX_LOCK';\r\nexport const QWIXX_UNLOCK = 'QWIXX_UNLOCK';\r\n\r\nexport interface IQwixxAddValueAction {\r\n  rank: QwixxRanks;\r\n  number: number;\r\n  type: typeof QWIXX_ADD_VALUE;\r\n}\r\n\r\nexport interface IQwixxRemoveValueAction {\r\n  rank: QwixxRanks;\r\n  number: number;\r\n  type: typeof QWIXX_REMOVE_VALUE;\r\n}\r\n\r\nexport interface IQwixxResetAllAction {\r\n  type: typeof QWIXX_RESET_ALL;\r\n}\r\n\r\nexport interface IQwixxLockAction {\r\n  rank: QwixxRanks;\r\n  type: typeof QWIXX_LOCK;\r\n}\r\n\r\nexport interface IQwixxUnlockAction {\r\n  rank: QwixxRanks;\r\n  type: typeof QWIXX_UNLOCK;\r\n}\r\n\r\nexport type QwixxActionTypes =\r\n  IQwixxAddValueAction |\r\n  IQwixxRemoveValueAction |\r\n  IQwixxResetAllAction |\r\n  IQwixxLockAction |\r\n  IQwixxUnlockAction;\r\n","import * as types from './Types';\r\n\r\nexport function addValue(rank: types.QwixxRanks, number: number): types.QwixxActionTypes {\r\n  return {\r\n    rank,\r\n    number,\r\n    type: types.QWIXX_ADD_VALUE,\r\n  };\r\n}\r\n\r\nexport function removeValue(rank: types.QwixxRanks, number: number): types.QwixxActionTypes {\r\n  return {\r\n    rank,\r\n    number,\r\n    type: types.QWIXX_REMOVE_VALUE,\r\n  };\r\n}\r\n\r\nexport function lock(rank: types.QwixxRanks): types.QwixxActionTypes {\r\n  return {\r\n    rank,\r\n    type: types.QWIXX_LOCK,\r\n  };\r\n}\r\n\r\nexport function unlock(rank: types.QwixxRanks): types.QwixxActionTypes {\r\n  return {\r\n    rank,\r\n    type: types.QWIXX_UNLOCK,\r\n  };\r\n}\r\n\r\nexport function resetAll(): types.QwixxActionTypes {\r\n  return {\r\n    type: types.QWIXX_RESET_ALL,\r\n  };\r\n}\r\n","import * as Mui from '@material-ui/core';\nimport { bind } from 'decko';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport LockIcon from '@material-ui/icons/LockTwoTone';\nimport LockOpenIcon from '@material-ui/icons/LockOpenTwoTone';\n\nimport { AppState } from 'Store';\nimport * as qwixx from 'Store/Qwixx';\n\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\n  scoreCardPaper: {\n    margin: theme.spacing(0),\n    padding: theme.spacing(0),\n  },\n  right: {\n    textAlign: 'right',\n  },\n  center: {\n    textAlign: 'center',\n  },\n  button: {\n    color: 'black',\n    fontWeight: 'bold',\n    fontSize: 24,\n    textShadow: '-1px 1px 2px white, -1px -1px 2px white, 1px -1px 2px white, 1px 1px 2px white',\n  },\n  disabledButton: {\n    color: '#BBBBBB',\n    fontWeight: 'bold',\n    fontSize: 24,\n    textShadow: '-1px 1px 2px white, -1px -1px 2px white, 1px -1px 2px white, 1px 1px 2px white',\n  },\n});\n\ninterface IColorRowProps {\n  color: qwixx.QwixxRanks;\n}\n\ninterface IColorRowMappedProps {\n  readonly isLocked: Record<qwixx.QwixxRanks, boolean>;\n  readonly values: Record<qwixx.QwixxRanks, number[]>;\n}\n\ninterface IColorRowActions {\n  addValue(rank: qwixx.QwixxRanks, number: number): void;\n  removeValue(rank: qwixx.QwixxRanks, number: number): void;\n  lock(rank: qwixx.QwixxRanks): void;\n  unlock(rank: qwixx.QwixxRanks): void;\n}\n\ntype IAllColorRowProps =\n  IColorRowProps &\n  IColorRowMappedProps &\n  IColorRowActions &\n  Mui.WithStyles<typeof localStyles>;\n\nclass ColorRow extends React.Component<IAllColorRowProps, {}> {\n  @bind\n  public render(): React.ReactNode {\n    if (this.props.color === qwixx.QwixxRanks.Negative) {\n      return this.renderNegative();\n    }\n\n    const isRedOrYellow: boolean = (this.props.color === qwixx.QwixxRanks.Red) || (this.props.color === qwixx.QwixxRanks.Yellow);\n\n    const buttonList: React.ReactNode[] = [];\n    for (let index = 2; index <= 12; index += 1) {\n      buttonList.push(this.getButton(index));\n    }\n\n    if (!isRedOrYellow) {\n      buttonList.reverse();\n    }\n\n    return (\n      <Mui.Grid container={true} style={{backgroundColor: this.props.color}}>\n        {buttonList}\n\n        { this.getLockIcon() }\n      </Mui.Grid>\n    );\n  }\n\n  @bind\n  private renderNegative(): React.ReactNode {\n    const buttonList: React.ReactNode[] = [];\n\n    for (let index = 0; index < 4; index++) {\n      buttonList.push(this.getNegativeButton(index));\n    }\n\n    return (\n      <Mui.Grid container={true}>\n        {buttonList}\n\n        <Mui.Grid item={true} xs={1}></Mui.Grid>\n\n        {this.renderScore()}\n      </Mui.Grid>\n    );\n  }\n\n  @bind\n  private renderScore(): React.ReactNode {\n    const redScore: number = this.calcScore(qwixx.QwixxRanks.Red);\n    const yellowScore: number = this.calcScore(qwixx.QwixxRanks.Yellow);\n    const greenScore: number = this.calcScore(qwixx.QwixxRanks.Green);\n    const blueScore: number = this.calcScore(qwixx.QwixxRanks.Blue);\n    const negScore: number = this.calcScore(qwixx.QwixxRanks.Negative);\n\n    return (\n      <React.Fragment>\n        <Mui.Grid item={true} xs={1}><Mui.Typography style={{color: 'red', marginTop: 5}} variant='h4'>{redScore}</Mui.Typography></Mui.Grid>\n        <Mui.Grid item={true} xs={1}><Mui.Typography style={{color: 'yellow', marginTop: 5}} variant='h4'>{yellowScore}</Mui.Typography></Mui.Grid>\n        <Mui.Grid item={true} xs={1}><Mui.Typography style={{color: 'green', marginTop: 5}} variant='h4'>{greenScore}</Mui.Typography></Mui.Grid>\n        <Mui.Grid item={true} xs={1}><Mui.Typography style={{color: 'blue', marginTop: 5}} variant='h4'>{blueScore}</Mui.Typography></Mui.Grid>\n        <Mui.Grid item={true} xs={1}><Mui.Typography style={{color: '#BBBBBB', marginTop: 5}} variant='h4'>{negScore}</Mui.Typography></Mui.Grid>\n        <Mui.Grid item={true} xs={1}></Mui.Grid>\n        <Mui.Grid item={true} xs={1}><Mui.Typography style={{marginTop: 5}} variant='h4'>{redScore + yellowScore + greenScore + blueScore + negScore}</Mui.Typography></Mui.Grid>\n      </React.Fragment>\n    );\n  }\n\n  @bind\n  private calcScore(color: qwixx.QwixxRanks): number {\n    const scoreMap: number[] = [ 0, 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66, 78 ];\n    const values = this.props.values[color];\n\n    if (color === qwixx.QwixxRanks.Negative) {\n      return -5 * values.length;\n    }\n\n    const isRedOrYellow: boolean = (color === qwixx.QwixxRanks.Red) || (color === qwixx.QwixxRanks.Yellow);\n    var count = values.length;\n    if ((isRedOrYellow && values.includes(12)) || (!isRedOrYellow && values.includes(2)))\n    {\n      // They earned an extra X\n      count++;\n    }\n\n    return scoreMap[count];\n  }\n\n  @bind\n  private getNegativeButton(index: number): React.ReactNode {\n    const values = this.props.values[this.props.color];\n\n    if (values.includes(index)) {\n      return (\n        <Mui.Grid item={true} xs={1}><Mui.Button className={this.props.classes.disabledButton} onClick={() => this.removeValue(index)}>X</Mui.Button></Mui.Grid>\n      );\n    } else {\n      return (\n        <Mui.Grid item={true} xs={1}><Mui.Button className={this.props.classes.button} onClick={() => this.addValue(index)}>-5</Mui.Button></Mui.Grid>\n      );\n    }\n  }\n\n  @bind\n  private getLockIcon(): React.ReactNode {\n    const icon = this.props.isLocked[this.props.color] ? <LockIcon/> : <LockOpenIcon/>;\n\n    return (\n      <Mui.Grid item={true} xs={1}>\n        <Mui.Button style={{marginTop: 6}} className={this.props.classes.button} onClick={() => this.toggleLock()}>\n          { icon }\n        </Mui.Button>\n      </Mui.Grid>\n    );\n  }\n\n  @bind\n  private toggleLock(): void {\n    if (this.props.isLocked[this.props.color]) {\n      this.props.unlock(this.props.color);\n    } else {\n      this.props.lock(this.props.color);\n    }\n  }\n\n  @bind\n  private getButton(index: number): React.ReactNode {\n    const values = this.props.values[this.props.color];\n    const isRedOrYellow: boolean = (this.props.color === qwixx.QwixxRanks.Red) || (this.props.color === qwixx.QwixxRanks.Yellow);\n\n    const highestValue: number = isRedOrYellow ? Math.max(...values) : Math.min(...values);\n\n    if (highestValue === index) {\n      let text: string = 'X';\n\n      if ((isRedOrYellow && index === 12) || (!isRedOrYellow && index === 2)) {\n        text = 'XX';\n      }\n      return (\n        <Mui.Grid item={true} xs={1}><Mui.Button className={this.props.classes.button} onClick={() => this.removeValue(index)}>{text}</Mui.Button></Mui.Grid>\n      );\n    } else if (values.includes(index)) {\n      return (\n        <Mui.Grid item={true} xs={1}><Mui.Button className={this.props.classes.button}>X</Mui.Button></Mui.Grid>\n      );\n    } else if (this.props.isLocked[this.props.color] || values.find((value) => (isRedOrYellow && value > index) || (!isRedOrYellow && value < index))) {\n      return (\n        <Mui.Grid item={true} xs={1}><Mui.Button className={this.props.classes.button}>--</Mui.Button></Mui.Grid>\n      );\n    } else {\n      let buttonClass: string = this.props.classes.button;\n      if (isRedOrYellow && index === 12 && values.length < 5) {\n        buttonClass = this.props.classes.disabledButton;\n      } else if (!isRedOrYellow && index === 2 && values.length < 5) {\n        buttonClass = this.props.classes.disabledButton;\n      }\n      return (\n        <Mui.Grid item={true} xs={1}><Mui.Button className={buttonClass} onClick={() => this.addValue(index)}>{index}</Mui.Button></Mui.Grid>\n      );\n    }\n  }\n\n  @bind\n  private addValue(index: number): void {\n    const values = this.props.values[this.props.color];\n    const isRedOrYellow: boolean = (this.props.color === qwixx.QwixxRanks.Red) || (this.props.color === qwixx.QwixxRanks.Yellow);\n\n    if (this.props.color !== qwixx.QwixxRanks.Negative) {\n      if (isRedOrYellow && index === 12 && values.length < 5) {\n        return;\n      } else if (!isRedOrYellow && index === 2 && values.length < 5) {\n        return;\n      }\n    }\n\n    this.props.addValue(this.props.color, index);\n  }\n\n  @bind\n  private removeValue(index: number): void {\n    if (this.props.isLocked[this.props.color]) {\n      // Can't do this if it's locked!\n      return;\n    }\n\n    this.props.removeValue(this.props.color, index);\n  }\n}\n\nconst mapStateToProps = (state: AppState): IColorRowMappedProps => ({\n  isLocked: state.qwixx.isLocked,\n  values: state.qwixx.values,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): IColorRowActions => ({\n  addValue: (rank: qwixx.QwixxRanks, number: number) => dispatch(qwixx.addValue(rank, number)),\n  removeValue: (rank: qwixx.QwixxRanks, number: number) => dispatch(qwixx.removeValue(rank, number)),\n  lock: (rank: qwixx.QwixxRanks) => dispatch(qwixx.lock(rank)),\n  unlock: (rank: qwixx.QwixxRanks) => dispatch(qwixx.unlock(rank)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ColorRow));\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as qwixx from 'Store/Qwixx';\r\nimport ColorRow from './ColorRow';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    padding: theme.spacing(1),\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  values: Record<qwixx.QwixxRanks, number[]>;\r\n}\r\n\r\ninterface IScoreCardActions {\r\n  addValue(rank: qwixx.QwixxRanks, number: number): void;\r\n  removeValue(rank: qwixx.QwixxRanks, number: number): void;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  IScoreCardActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, {}> {\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n        <Mui.Grid container={true}>\r\n          <Mui.Grid item={true} xs={12}>\r\n            <ColorRow color={qwixx.QwixxRanks.Red} />\r\n          </Mui.Grid>\r\n\r\n          <Mui.Grid item={true} xs={12}>\r\n            <ColorRow color={qwixx.QwixxRanks.Yellow} />\r\n          </Mui.Grid>\r\n\r\n          <Mui.Grid item={true} xs={12}>\r\n            <ColorRow color={qwixx.QwixxRanks.Green} />\r\n          </Mui.Grid>\r\n\r\n          <Mui.Grid item={true} xs={12}>\r\n            <ColorRow color={qwixx.QwixxRanks.Blue} />\r\n          </Mui.Grid>\r\n\r\n          <Mui.Grid item={true} xs={12}>\r\n            <ColorRow color={qwixx.QwixxRanks.Negative} />\r\n          </Mui.Grid>\r\n        </Mui.Grid>\r\n      </Mui.Paper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  values: state.qwixx.values,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreCardActions => ({\r\n  addValue: (rank: qwixx.QwixxRanks, number: number) => dispatch(qwixx.addValue(rank, number)),\r\n  removeValue: (rank: qwixx.QwixxRanks, number: number) => dispatch(qwixx.removeValue(rank, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { bind } from 'decko';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as qwixx from 'Store/Qwixx';\r\nimport ScoreCard from './ScoreCard';\r\nimport ConfirmationDialog from '../ConfirmationDialog';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  qwixxWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface IQwixxProps {\r\n}\r\n\r\ninterface IQwixxActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllQwixxProps =\r\n  IQwixxProps &\r\n  IQwixxActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IQwixxState {\r\n  showConfirmationDialog: boolean;\r\n}\r\n\r\nclass Qwixx extends React.Component<IAllQwixxProps, IQwixxState> {\r\n  constructor(p: IAllQwixxProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showConfirmationDialog: false,\r\n    };\r\n  }\r\n\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.qwixxWrapper}>\r\n          <ScoreCard />\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n        <ConfirmationDialog onClose={this.handleConfirmation} showDialog={this.state.showConfirmationDialog} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleConfirmation(answer: boolean): void {\r\n    if (answer) {\r\n      this.props.reset();\r\n    }\r\n\r\n    this.setState({\r\n      showConfirmationDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.setState({\r\n      showConfirmationDialog: true,\r\n    });\r\n  }\r\n}\r\nconst mapStateToProps = (state: AppState): IQwixxProps => ({\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IQwixxActions => ({\r\n  reset: () => dispatch(qwixx.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Qwixx));\r\n","export enum SplitRanks {\r\n  A = 'A',\r\n  K = 'K',\r\n  Q = 'Q',\r\n  J = 'J',\r\n  Ten = '10',\r\n  Nine = '9',\r\n  Eight = '8',\r\n  Seven = '7',\r\n  Six = '6',\r\n  Five = '5',\r\n  Four = '4',\r\n  Three = '3',\r\n  Two = '2',\r\n\r\n  Negative = 'Negative',\r\n}\r\n\r\nexport interface ISplitScore {\r\n  readonly values: Record<SplitRanks, number>;\r\n}\r\n\r\nexport interface ISplitState {\r\n  readonly scores: Record<string, ISplitScore>;\r\n}\r\n\r\nexport const SPLIT_RESET_ALL = 'SPLIT_RESET_ALL';\r\nexport const SPLIT_ADD_VALUE = 'SPLIT_ADD_VALUE';\r\nexport const SPLIT_REMOVE_VALUE = 'SPLIT_REMOVE_VALUE';\r\n\r\nexport interface ISplitAddValueAction {\r\n  name: string;\r\n  rank: SplitRanks;\r\n  type: typeof SPLIT_ADD_VALUE;\r\n}\r\n\r\nexport interface ISplitRemoveValueAction {\r\n  name: string;\r\n  rank: SplitRanks;\r\n  type: typeof SPLIT_REMOVE_VALUE;\r\n}\r\n\r\nexport interface ISplitResetAllAction {\r\n  type: typeof SPLIT_RESET_ALL;\r\n}\r\n\r\nexport type SplitActionTypes =\r\n  ISplitAddValueAction |\r\n  ISplitRemoveValueAction |\r\n  ISplitResetAllAction;\r\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as split from 'Store/Split';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 360,\r\n    minWidth: 360,\r\n    padding: theme.spacing(1),\r\n  },\r\n  avatar: {\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    height: 30,\r\n    width: 30,\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  selectedAvatar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText,\r\n  },\r\n  row: {\r\n    marginTop: theme.spacing(0.25),\r\n    marginBottom: theme.spacing(0.25),\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, split.ISplitScore>;\r\n}\r\n\r\ninterface IScoreCardActions {\r\n  addValue(name: string, rank: split.SplitRanks): void;\r\n  removeValue(name: string, rank: split.SplitRanks): void;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  IScoreCardActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nconst ValueMap: Record<split.SplitRanks, number[]> = {\r\n  A: [0, 30, 70, 120, 180, 200],\r\n  K: [0, 20, 50, 90, 140, 200],\r\n  Q: [0, 20, 50, 90, 140, 200],\r\n  J: [0, 20, 50, 90, 140, 200],\r\n  10: [0, 10, 30, 60, 100, 200],\r\n  9: [0, 10, 30, 60, 100, 200],\r\n  8: [0, 10, 30, 60, 100, 200],\r\n  7: [0, 10, 30, 60, 100, 200],\r\n  6: [0, 10, 30, 60, 100, 200],\r\n  5: [0, 10, 30, 60, 100, 200],\r\n  4: [0, 10, 30, 60, 100, 200],\r\n  3: [0, 10, 30, 60, 100, 200],\r\n  2: [0, 5, 20, 40, 70, 200],\r\n\r\n  Negative: [],\r\n};\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, {}> {\r\n  private readonly ScoreName: string = 'SplitScore';\r\n\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    const myScore: split.ISplitScore = this.props.scores[this.ScoreName];\r\n\r\n    return (\r\n      <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n        <Mui.Grid container={true}>\r\n          <Mui.Grid item={true} xs={6} className={this.props.classes.right}>\r\n            <Mui.Typography variant='h5'>\r\n              Total:\r\n            </Mui.Typography>\r\n          </Mui.Grid>\r\n          <Mui.Grid item={true} xs={6} className={this.props.classes.center}>\r\n            <Mui.Typography variant='h5'>\r\n              {this.calculateScore(myScore)}\r\n            </Mui.Typography>\r\n          </Mui.Grid>\r\n        </Mui.Grid>\r\n        <Mui.Divider variant='middle' />\r\n        {this.createRow(myScore, split.SplitRanks.A)}\r\n        {this.createRow(myScore, split.SplitRanks.K)}\r\n        {this.createRow(myScore, split.SplitRanks.Q)}\r\n        {this.createRow(myScore, split.SplitRanks.J)}\r\n        {this.createRow(myScore, split.SplitRanks.Ten)}\r\n        {this.createRow(myScore, split.SplitRanks.Nine)}\r\n        {this.createRow(myScore, split.SplitRanks.Eight)}\r\n        {this.createRow(myScore, split.SplitRanks.Seven)}\r\n        {this.createRow(myScore, split.SplitRanks.Six)}\r\n        {this.createRow(myScore, split.SplitRanks.Five)}\r\n        {this.createRow(myScore, split.SplitRanks.Four)}\r\n        {this.createRow(myScore, split.SplitRanks.Three)}\r\n        {this.createRow(myScore, split.SplitRanks.Two)}\r\n        <Mui.Grid container={true} justify='center' alignItems='center' className={this.props.classes.row}>\r\n          <Mui.Grid item={true} xs={4}>\r\n            <Mui.Button variant='outlined' onClick={() => this.handleIncrease(split.SplitRanks.Negative)}>\r\n              -5\r\n            </Mui.Button>\r\n          </Mui.Grid>\r\n          <Mui.Grid item={true} xs={4} className={this.props.classes.center}>\r\n            <Mui.Typography variant='h5'>{this.getRankValues(myScore, split.SplitRanks.Negative)}</Mui.Typography>\r\n          </Mui.Grid>\r\n          <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n            <Mui.Button variant='outlined' onClick={() => this.handleDecrease(split.SplitRanks.Negative)}>\r\n              +5\r\n        </Mui.Button>\r\n          </Mui.Grid>\r\n        </Mui.Grid>\r\n      </Mui.Paper>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private getRankValues(myScore: split.ISplitScore, rank: split.SplitRanks): number {\r\n    const index = myScore ? myScore.values[rank] : 0;\r\n\r\n    if (rank === split.SplitRanks.Negative) {\r\n      return -5 * index;\r\n    }\r\n\r\n    return ValueMap[rank][index];\r\n  }\r\n\r\n  @bind\r\n  private calculateScore(myScore: split.ISplitScore): number {\r\n    return this.getRankValues(myScore, split.SplitRanks.Negative) +\r\n      this.getRankValues(myScore, split.SplitRanks.A) +\r\n      this.getRankValues(myScore, split.SplitRanks.K) +\r\n      this.getRankValues(myScore, split.SplitRanks.Q) +\r\n      this.getRankValues(myScore, split.SplitRanks.J) +\r\n      this.getRankValues(myScore, split.SplitRanks.Ten) +\r\n      this.getRankValues(myScore, split.SplitRanks.Nine) +\r\n      this.getRankValues(myScore, split.SplitRanks.Eight) +\r\n      this.getRankValues(myScore, split.SplitRanks.Seven) +\r\n      this.getRankValues(myScore, split.SplitRanks.Six) +\r\n      this.getRankValues(myScore, split.SplitRanks.Five) +\r\n      this.getRankValues(myScore, split.SplitRanks.Four) +\r\n      this.getRankValues(myScore, split.SplitRanks.Three) +\r\n      this.getRankValues(myScore, split.SplitRanks.Two);\r\n  }\r\n\r\n  @bind\r\n  private handleIncrease(rank: split.SplitRanks): void {\r\n    this.props.addValue(this.ScoreName, rank);\r\n  }\r\n\r\n  @bind\r\n  private handleDecrease(rank: split.SplitRanks): void {\r\n    this.props.removeValue(this.ScoreName, rank);\r\n  }\r\n\r\n  @bind\r\n  private createRow(myScore: split.ISplitScore, rank: split.SplitRanks): JSX.Element {\r\n    const selectedIndex = myScore ? myScore.values[rank] : 0;\r\n\r\n    const avatars: JSX.Element[] = [];\r\n    for (let index = 0; index < 6; index++) {\r\n      let avatarClass = this.props.classes.avatar;\r\n      if (index === selectedIndex) {\r\n        avatarClass = `${avatarClass} ${this.props.classes.selectedAvatar}`;\r\n      }\r\n\r\n      avatars.push(<Mui.Avatar key={`${rank.toString()}-${index}`} className={avatarClass}>{ValueMap[rank][index]}</Mui.Avatar>);\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Grid container={true} justify='center' alignItems='center' className={this.props.classes.row}>\r\n          <Mui.Button variant='outlined' onClick={() => this.handleIncrease(rank)} style={{ marginRight: 10 }}>\r\n            {rank.toString()}\r\n          </Mui.Button>\r\n          {avatars}\r\n        </Mui.Grid>\r\n        <Mui.Divider />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.split.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreCardActions => ({\r\n  addValue: (name: string, rank: split.SplitRanks) => dispatch(split.addValue(name, rank)),\r\n  removeValue: (name: string, rank: split.SplitRanks) => dispatch(split.removeValue(name, rank)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as types from './Types';\r\n\r\nexport function addValue(name: string, rank: types.SplitRanks): types.SplitActionTypes {\r\n  return {\r\n    name,\r\n    rank,\r\n    type: types.SPLIT_ADD_VALUE,\r\n  };\r\n}\r\n\r\nexport function removeValue(name: string, rank: types.SplitRanks): types.SplitActionTypes {\r\n  return {\r\n    name,\r\n    rank,\r\n    type: types.SPLIT_REMOVE_VALUE,\r\n  };\r\n}\r\n\r\nexport function resetAll(): types.SplitActionTypes {\r\n  return {\r\n    type: types.SPLIT_RESET_ALL,\r\n  };\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { bind } from 'decko';\r\n\r\nimport { AppState } from 'Store';\r\nimport * as split from 'Store/Split';\r\nimport ScoreCard from './ScoreCard';\r\nimport ConfirmationDialog from '../ConfirmationDialog';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  splitWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface ISplitProps {\r\n}\r\n\r\ninterface ISplitActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllSplitProps =\r\n  ISplitProps &\r\n  ISplitActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface ISplitState {\r\n  showConfirmationDialog: boolean;\r\n}\r\n\r\nclass Split extends React.Component<IAllSplitProps, ISplitState> {\r\n  constructor(p: IAllSplitProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showConfirmationDialog: false,\r\n    };\r\n  }\r\n\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.splitWrapper}>\r\n          <ScoreCard />\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n        <ConfirmationDialog onClose={this.handleConfirmation} showDialog={this.state.showConfirmationDialog} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleConfirmation(answer: boolean): void {\r\n    if (answer) {\r\n      this.props.reset();\r\n    }\r\n\r\n    this.setState({\r\n      showConfirmationDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.setState({\r\n      showConfirmationDialog: true,\r\n    });\r\n  }\r\n}\r\nconst mapStateToProps = (state: AppState): ISplitProps => ({\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): ISplitActions => ({\r\n  reset: () => dispatch(split.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Split));\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { bind } from 'decko';\r\n\r\nimport Home from '../Home';\r\nimport About from '../About/About';\r\nimport Generic from '../Generic';\r\nimport MilleBornes from '../MilleBornes';\r\nimport Mu from '../Mu';\r\nimport Qwixx from '../Qwixx';\r\nimport Split from '../Split';\r\n\r\nclass Main extends React.Component<{}, {}> {\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <Mui.Box m={2}>\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route exact path='/split' component={Split} />\r\n          <Route exact path='/millebornes' component={MilleBornes} />\r\n          <Route exact path='/mu' component={Mu} />\r\n          <Route exact path='/qwixx' component={Qwixx} />\r\n          <Route exact path='/generic' component={Generic} />\r\n          <Route exactpath='/about' component={About} />\r\n        </Switch>\r\n      </Mui.Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import * as React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { bind } from 'decko';\r\n\r\nimport { AppState } from 'Store';\r\nimport { Themes } from 'Theme';\r\nimport * as system from 'Store/System';\r\nimport Header from '../Header';\r\nimport Main from '../Main';\r\n\r\ninterface IAppProps {\r\n  selectedTheme: system.ThemeOptions;\r\n}\r\n\r\nclass App extends React.Component<IAppProps, {}> {\r\n  @bind\r\n  public render(): React.ReactNode {\r\n    const currentTheme = Themes.getTheme(this.props.selectedTheme);\r\n\r\n    return (\r\n      <ThemeProvider theme={currentTheme}>\r\n        <CssBaseline />\r\n        <Header />\r\n        <Main />\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IAppProps => ({\r\n  selectedTheme: state.system.selectedTheme,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): {} => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.IGenericState = {\r\n  scores: {},\r\n};\r\n\r\nexport function genericReducer(state = initialState, action: types.GenericActionTypes): types.IGenericState {\r\n  return produce(state, (draft: Draft<types.IGenericState>) => {\r\n    switch (action.type) {\r\n      case types.GENERIC_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.GENERIC_ADD_SCORE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = 0;\r\n        }\r\n\r\n        draft.scores[action.name] = draft.scores[action.name] + action.value;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.IMilleBornesState = {\r\n  scores: {},\r\n};\r\n\r\nexport function milleBornesReducer(state = initialState, action: types.MilleBornesActionTypes): types.IMilleBornesState {\r\n  return produce(state, (draft: Draft<types.IMilleBornesState>) => {\r\n    switch (action.type) {\r\n      case types.MILLE_BORNES_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.MILLE_BORNES_ADD_SCORE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = 0;\r\n        }\r\n\r\n        draft.scores[action.name] = draft.scores[action.name] + action.value;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.IMuState = {\r\n  scores: {},\r\n};\r\n\r\nexport function muReducer(state = initialState, action: types.MuActionTypes): types.IMuState {\r\n  return produce(state, (draft: Draft<types.IMuState>) => {\r\n    switch (action.type) {\r\n      case types.MU_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.MU_ADD_SCORE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = 0;\r\n        }\r\n\r\n        draft.scores[action.name] = draft.scores[action.name] + action.value;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.ISplitState = {\r\n  scores: {},\r\n};\r\n\r\nfunction createEmptyScore(): Record<types.SplitRanks, number> {\r\n  return { A: 0, K: 0, Q: 0, J: 0, 10: 0, 9: 0, 8: 0, 7: 0, 6: 0, 5: 0, 4: 0, 3: 0, 2: 0, Negative: 0};\r\n}\r\n\r\nexport function splitReducer(state = initialState, action: types.SplitActionTypes): types.ISplitState {\r\n  return produce(state, (draft: Draft<types.ISplitState>) => {\r\n    switch (action.type) {\r\n      case types.SPLIT_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.SPLIT_ADD_VALUE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = {\r\n            values: createEmptyScore(),\r\n          };\r\n        }\r\n\r\n        const value = draft.scores[action.name].values[action.rank];\r\n        const max: number = (action.rank === types.SplitRanks.Negative) ? 500 : 6;\r\n        draft.scores[action.name].values[action.rank] = (value + 1) % max;\r\n        break;\r\n      }\r\n      case types.SPLIT_REMOVE_VALUE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = {\r\n            values: createEmptyScore(),\r\n          };\r\n        }\r\n\r\n        const value = draft.scores[action.name].values[action.rank];\r\n        draft.scores[action.name].values[action.rank] = Math.max(0, value - 1);\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.ISystemState = {\r\n  selectedTheme: types.ThemeOptions.Dark,\r\n  names: [],\r\n};\r\n\r\nexport function systemReducer(state = initialState, action: types.SystemActionTypes): types.ISystemState {\r\n  return produce(state, (draft: Draft<types.ISystemState>) => {\r\n    switch (action.type) {\r\n      case types.SYSTEM_CHANGE_THEME: {\r\n        draft.selectedTheme = action.newTheme;\r\n        break;\r\n      }\r\n      case types.SYSTEM_ADD_NAME: {\r\n        draft.names.push(action.name);\r\n        break;\r\n      }\r\n      case types.SYSTEM_REMOVE_NAME: {\r\n        const index = draft.names.indexOf(action.name);\r\n        if (index > -1) {\r\n          draft.names.splice(index, 1);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.IQwixxState = {\r\n  isLocked: createEmptyLocked(),\r\n  values: createEmptyValues(),\r\n};\r\n\r\nfunction createEmptyLocked(): Record<types.QwixxRanks, boolean> {\r\n  return {\r\n    Red: false,\r\n    Yellow: false,\r\n    Green: false,\r\n    Blue: false,\r\n\r\n    Negative: false,\r\n  };\r\n}\r\n\r\nfunction createEmptyValues(): Record<types.QwixxRanks, number[]> {\r\n  return {\r\n    Red: [],\r\n    Yellow: [],\r\n    Green: [],\r\n    Blue: [],\r\n\r\n    Negative: [],\r\n  };\r\n}\r\n\r\nexport function qwixxReducer(state = initialState, action: types.QwixxActionTypes): types.IQwixxState {\r\n  return produce(state, (draft: Draft<types.IQwixxState>) => {\r\n    switch (action.type) {\r\n      case types.QWIXX_RESET_ALL: {\r\n        draft.isLocked = createEmptyLocked();\r\n        draft.values = createEmptyValues();\r\n        break;\r\n      }\r\n      case types.QWIXX_ADD_VALUE: {\r\n        draft.values[action.rank].push(action.number);\r\n        break;\r\n      }\r\n      case types.QWIXX_REMOVE_VALUE: {\r\n        const search_index = draft.values[action.rank].indexOf(action.number);\r\n        if (search_index >= 0) {\r\n          draft.values[action.rank].splice(search_index, 1);\r\n        }\r\n        break;\r\n      }\r\n      case types.QWIXX_LOCK: {\r\n        draft.isLocked[action.rank] = true;\r\n        break;\r\n      }\r\n      case types.QWIXX_UNLOCK: {\r\n        draft.isLocked[action.rank] = false;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import { applyMiddleware, combineReducers, createStore, Store } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { Persistor, persistReducer, persistStore } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport { genericReducer } from './Generic/Reducers';\r\nimport { milleBornesReducer } from './MilleBornes/Reducers';\r\nimport { muReducer } from './Mu/Reducers';\r\nimport { splitReducer } from './Split/Reducers';\r\nimport { systemReducer } from './System/Reducers';\r\nimport { qwixxReducer } from './Qwixx/Reducers';\r\n\r\nconst persistConfig = {\r\n  key: 'root-v2',\r\n  storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  generic: genericReducer,\r\n  milleBornes: milleBornesReducer,\r\n  mu: muReducer,\r\n  qwixx: qwixxReducer,\r\n  split: splitReducer,\r\n  system: systemReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst bindMiddleware = (middleware: any) => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const { composeWithDevTools } = require('redux-devtools-extension');\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\ninterface IStoreData {\r\n  store: Store<AppState>;\r\n  persistor: Persistor;\r\n}\r\n\r\nconst store = createStore(persistedReducer, bindMiddleware([thunk]));\r\n\r\nconst data: IStoreData = {\r\n  store,\r\n  persistor: persistStore(store),\r\n};\r\n\r\nexport default data;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport App from 'Components/App';\r\nimport storeData from 'Store';\r\nimport * as serviceWorker from 'serviceWorker';\r\n\r\nReactDOM.render((\r\n  <HashRouter>\r\n    <Provider store={storeData.store}>\r\n      <PersistGate loading={null} persistor={storeData.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </HashRouter>\r\n), document.getElementById('root'));\r\n\r\nserviceWorker.register();"],"sourceRoot":""}