{"version":3,"sources":["Store/Split/Types.ts","Store/MilleBornes/Types.ts","Store/MilleBornes/Reducers.ts","Store/System/Types.ts","Store/Split/Reducers.ts","Store/System/Reducers.ts","Store/index.ts","Theme.tsx","Components/Header/index.tsx","Components/Footer/index.tsx","Store/System/Actions.ts","Components/Home/index.tsx","Components/Split/ScoreCard.tsx","Store/Split/Actions.ts","Components/Split/index.tsx","Components/About/About.tsx","Components/MilleBornes/SafetyRow.tsx","Components/MilleBornes/ScoreCard.tsx","Store/MilleBornes/Actions.ts","Components/MilleBornes/index.tsx","Components/Main/index.tsx","Components/App/index.tsx","index.tsx"],"names":["SplitRanks","MILLE_BORNES_RESET_ALL","MILLE_BORNES_ADD_SCORE","initialState","scores","ThemeOptions","SPLIT_RESET_ALL","SPLIT_ADD_VALUE","SPLIT_REMOVE_VALUE","SYSTEM_CHANGE_THEME","SYSTEM_ADD_NAME","SYSTEM_REMOVE_NAME","selectedTheme","types","Dark","names","middleware","rootReducer","combineReducers","milleBornes","state","action","produce","draft","type","name","value","split","values","A","K","Q","J","10","9","8","7","6","5","4","3","2","Negative","rank","max","Math","system","newTheme","push","index","indexOf","splice","store","createStore","thunk","applyMiddleware","lightTheme","palette","primary","indigo","secondary","lightBlue","darkTheme","Themes","option","Light","light","dark","createMuiTheme","Header","position","this","props","location","pathname","label","to","component","Link","React","withRouter","Footer","p","dialogInputRef","error","newName","showAddPlayerDialog","className","classes","appBar","chipWrapper","icon","variant","chip","onClick","handleAdd","map","key","onDelete","handleDelete","open","maxWidth","fullWidth","onClose","handleDialogClose","required","autoFocus","onChange","handleNewNameChange","onKeyPress","handleKeyPress","ref","length","color","disabled","handleAddName","event","preventDefault","target","trim","find","profile","toLowerCase","setState","addName","current","focus","removeName","bind","connect","dispatch","Mui","theme","top","bottom","margin","spacing","display","flexWrap","Home","ValueMap","ScoreCard","myScore","scoreCardPaper","container","item","xs","right","calculateScore","createRow","Ten","Nine","Eight","Seven","Six","Five","Four","Three","Two","justify","alignItems","row","handleIncrease","center","getRankValues","handleDecrease","addValue","removeValue","selectedIndex","avatars","avatarClass","avatar","selectedAvatar","toString","style","marginRight","width","minWidth","padding","fontWeight","fontSize","height","backgroundColor","main","contrastText","marginTop","marginBottom","textAlign","Split","handleReset","splitWrapper","reset","About","SafetyRow","checked","played","togglePlayed","coupFourre","toggleCoupFourre","withStyles","verticalAlign","showScoreDialog","distance","rightOfWayPlayed","rightOfWayPlayedCF","drivingAcePlayed","drivingAcePlayedCF","fuelTankPlayed","fuelTankPlayedCF","punctureProofPlayed","punctureProofPlayedCF","delayedAction","safeTrip","extension","shutout","getScore","scoreButton","handleScoreRound","id","gutterBottom","aria-labelledby","valueLabelDisplay","step","min","marks","handleDistanceChanged","handleToggleRightOfWay","handleToggleRightOfWayCF","handleToggleDrivingAce","handleToggleDrivingAceCF","handleToggleFuelTank","handleToggleFuelTankCF","handleTogglePunctureProof","handleTogglePunctureProofCF","handleToggleDelayedAction","handleToggleSafeTrip","handleToggleShutout","handleUpdateScore","Array","isArray","score","addScore","MilleBornes","milleBornesWrapper","Main","m","exact","path","App","currentTheme","getTheme","ThemeProvider","CssBaseline","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e4b3d35a.chunk.js","sourcesContent":["export enum SplitRanks {\r\n  A = 'A',\r\n  K = 'K',\r\n  Q = 'Q',\r\n  J = 'J',\r\n  Ten = '10',\r\n  Nine = '9',\r\n  Eight = '8',\r\n  Seven = '7',\r\n  Six = '6',\r\n  Five = '5',\r\n  Four = '4',\r\n  Three = '3',\r\n  Two = '2',\r\n\r\n  Negative = 'Negative',\r\n}\r\n\r\nexport interface ISplitScore {\r\n  readonly values: Record<SplitRanks, number>;\r\n}\r\n\r\nexport interface ISplitState {\r\n  readonly scores: Record<string, ISplitScore>;\r\n}\r\n\r\nexport const SPLIT_RESET_ALL = 'SPLIT_RESET_ALL';\r\nexport const SPLIT_ADD_VALUE = 'SPLIT_ADD_VALUE';\r\nexport const SPLIT_REMOVE_VALUE = 'SPLIT_REMOVE_VALUE';\r\n\r\nexport interface ISplitAddValueAction {\r\n  name: string;\r\n  rank: SplitRanks;\r\n  type: typeof SPLIT_ADD_VALUE;\r\n}\r\n\r\nexport interface ISplitRemoveValueAction {\r\n  name: string;\r\n  rank: SplitRanks;\r\n  type: typeof SPLIT_REMOVE_VALUE;\r\n}\r\n\r\nexport interface ISplitResetAllAction {\r\n  type: typeof SPLIT_RESET_ALL;\r\n}\r\n\r\nexport type SplitActionTypes =\r\n  ISplitAddValueAction |\r\n  ISplitRemoveValueAction |\r\n  ISplitResetAllAction;\r\n","export interface IMilleBornesState {\r\n  readonly scores: Record<string, number>;\r\n}\r\n\r\nexport const MILLE_BORNES_RESET_ALL = 'MILLE_BORNES_RESET_ALL';\r\nexport const MILLE_BORNES_ADD_SCORE = 'MILLE_BORNES_ADD_SCORE';\r\n\r\nexport interface IMilleBornesResetAllAction {\r\n  type: typeof MILLE_BORNES_RESET_ALL;\r\n}\r\n\r\nexport interface IMilleBornesAddScoreAction {\r\n  name: string;\r\n  value: number;\r\n  type: typeof MILLE_BORNES_ADD_SCORE;\r\n}\r\n\r\nexport type MilleBornesActionTypes =\r\n  IMilleBornesResetAllAction |\r\n  IMilleBornesAddScoreAction;\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.IMilleBornesState = {\r\n  scores: {},\r\n};\r\n\r\nexport function milleBornesReducer(state = initialState, action: types.MilleBornesActionTypes): types.IMilleBornesState {\r\n  return produce(state, (draft: Draft<types.IMilleBornesState>) => {\r\n    switch (action.type) {\r\n      case types.MILLE_BORNES_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.MILLE_BORNES_ADD_SCORE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = 0;\r\n        }\r\n\r\n        draft.scores[action.name] = draft.scores[action.name] + action.value;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","export enum ThemeOptions {\r\n  Light,\r\n  Dark,\r\n}\r\n\r\nexport interface ISystemState {\r\n  selectedTheme: ThemeOptions;\r\n  names: string[];\r\n}\r\n\r\nexport const SYSTEM_CHANGE_THEME = 'SYSTEM_CHANGE_THEME';\r\nexport const SYSTEM_ADD_NAME = 'SYSTEM_ADD_NAME';\r\nexport const SYSTEM_REMOVE_NAME = 'SYSTEM_REMOVE_NAME';\r\n\r\nexport interface ISystemChangeThemeAction {\r\n  newTheme: ThemeOptions;\r\n  type: typeof SYSTEM_CHANGE_THEME;\r\n}\r\n\r\nexport interface ISystemAddNameAction {\r\n  name: string;\r\n  type: typeof SYSTEM_ADD_NAME;\r\n}\r\n\r\nexport interface ISystemRemoveNameAction {\r\n  name: string;\r\n  type: typeof SYSTEM_REMOVE_NAME;\r\n}\r\n\r\nexport type SystemActionTypes =\r\n  ISystemChangeThemeAction |\r\n  ISystemAddNameAction |\r\n  ISystemRemoveNameAction;\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.ISplitState = {\r\n  scores: {},\r\n};\r\n\r\nfunction createEmptyScore(): Record<types.SplitRanks, number> {\r\n  return { A: 0, K: 0, Q: 0, J: 0, 10: 0, 9: 0, 8: 0, 7: 0, 6: 0, 5: 0, 4: 0, 3: 0, 2: 0, Negative: 0};\r\n}\r\n\r\nexport function splitReducer(state = initialState, action: types.SplitActionTypes): types.ISplitState {\r\n  return produce(state, (draft: Draft<types.ISplitState>) => {\r\n    switch (action.type) {\r\n      case types.SPLIT_RESET_ALL: {\r\n        draft.scores = {};\r\n        break;\r\n      }\r\n      case types.SPLIT_ADD_VALUE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = {\r\n            values: createEmptyScore(),\r\n          };\r\n        }\r\n\r\n        const value = draft.scores[action.name].values[action.rank];\r\n        const max: number = (action.rank === types.SplitRanks.Negative) ? 500 : 6;\r\n        draft.scores[action.name].values[action.rank] = (value + 1) % max;\r\n        break;\r\n      }\r\n      case types.SPLIT_REMOVE_VALUE: {\r\n        if (!draft.scores[action.name]) {\r\n          draft.scores[action.name] = {\r\n            values: createEmptyScore(),\r\n          };\r\n        }\r\n\r\n        const value = draft.scores[action.name].values[action.rank];\r\n        draft.scores[action.name].values[action.rank] = Math.max(0, value - 1);\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import produce, { Draft } from 'immer';\r\nimport * as types from './Types';\r\n\r\nconst initialState: types.ISystemState = {\r\n  selectedTheme: types.ThemeOptions.Dark,\r\n  names: (process.env.NODE_ENV === 'development') ? ['Shane', 'Lara', 'Don', 'Leah'] : [],\r\n};\r\n\r\nexport function systemReducer(state = initialState, action: types.SystemActionTypes): types.ISystemState {\r\n  return produce(state, (draft: Draft<types.ISystemState>) => {\r\n    switch (action.type) {\r\n      case types.SYSTEM_CHANGE_THEME: {\r\n        draft.selectedTheme = action.newTheme;\r\n        break;\r\n      }\r\n      case types.SYSTEM_ADD_NAME: {\r\n        draft.names.push(action.name);\r\n        break;\r\n      }\r\n      case types.SYSTEM_REMOVE_NAME: {\r\n        const index = draft.names.indexOf(action.name);\r\n        if (index > -1) {\r\n          draft.names.splice(index, 1);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  });\r\n}\r\n","import { applyMiddleware, combineReducers, createStore, Store } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { milleBornesReducer } from './MilleBornes/Reducers';\r\nimport { splitReducer } from './Split/Reducers';\r\nimport { systemReducer } from './System/Reducers';\r\n\r\nconst rootReducer = combineReducers({\r\n  milleBornes: milleBornesReducer,\r\n  split: splitReducer,\r\n  system: systemReducer,\r\n});\r\n\r\nconst bindMiddleware = (middleware: any) => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const { composeWithDevTools } = require('redux-devtools-extension');\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nconst store: Store<AppState> = createStore(rootReducer, bindMiddleware([thunk]));\r\nexport default store;\r\n","import { lightBlue, indigo } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeOptions } from './Store/System/Types';\r\nimport { PaletteType } from '@material-ui/core';\r\n\r\nconst lightTheme = {\r\n  palette: {\r\n    primary: indigo,\r\n    secondary: lightBlue,\r\n    type: 'light' as PaletteType,\r\n  },\r\n};\r\n\r\nconst darkTheme = {\r\n  palette: {\r\n    primary: indigo,\r\n    secondary: lightBlue,\r\n    type: 'dark' as PaletteType,\r\n  },\r\n};\r\n\r\nexport class Themes {\r\n  public static getTheme(option: ThemeOptions) {\r\n    switch (option) {\r\n      case ThemeOptions.Light:\r\n        return Themes.light;\r\n    }\r\n\r\n    return Themes.dark;\r\n  }\r\n\r\n  private static light = createMuiTheme(lightTheme);\r\n  private static dark = createMuiTheme(darkTheme);\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\r\n\r\ntype IAllHeaderProps =\r\n  RouteComponentProps<any>;\r\n\r\nclass Header extends React.Component<IAllHeaderProps, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <nav>\r\n          <Mui.AppBar position='static'>\r\n            <Mui.Tabs value={this.props.location.pathname}>\r\n              <Mui.Tab value='/' label='Home' to='/' component={Link} />\r\n              <Mui.Tab value='/split' label='Split' to='/split' component={Link} />\r\n              <Mui.Tab value='/millebornes' label='Mille Bornes' to='/millebornes' component={Link} />\r\n              <Mui.Tab value='/about' label='About' to='/about' component={Link} />\r\n            </Mui.Tabs>\r\n          </Mui.AppBar>\r\n        </nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import * as Mui from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as system from '../../Store/System';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  chipWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface IFooterProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IFooterActions {\r\n  addName(name: string): void;\r\n  removeName(name: string): void;\r\n}\r\n\r\ntype IAllFooterProps =\r\n  IFooterProps &\r\n  IFooterActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IFooterState {\r\n  error: string;\r\n  newName: string;\r\n  showAddPlayerDialog: boolean;\r\n}\r\n\r\nclass Footer extends React.Component<IAllFooterProps, IFooterState> {\r\n  private dialogInputRef: React.RefObject<HTMLInputElement>;\r\n\r\n  constructor(p: IAllFooterProps) {\r\n    super(p);\r\n\r\n    this.dialogInputRef = React.createRef();\r\n    this.state = {\r\n      error: '',\r\n      newName: '',\r\n      showAddPlayerDialog: false,\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.AppBar position='fixed' className={this.props.classes.appBar}>\r\n          <div className={this.props.classes.chipWrapper}>\r\n            <Mui.Chip icon={<AddIcon />} label='Add Player' variant='outlined' className={this.props.classes.chip} onClick={this.handleAdd} />\r\n            {this.props.names.map((name) => <Mui.Chip key={name} label={name} variant='outlined' className={this.props.classes.chip} onDelete={() => this.handleDelete(name)} />)}\r\n          </div>\r\n        </Mui.AppBar>\r\n\r\n        <Mui.Dialog open={this.state.showAddPlayerDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogContent>\r\n            <Mui.TextField\r\n              fullWidth={true}\r\n              required={true}\r\n              autoFocus={true}\r\n              value={this.state.newName}\r\n              onChange={this.handleNewNameChange}\r\n              onKeyPress={this.handleKeyPress}\r\n              label='Player or Team Name'\r\n              ref={this.dialogInputRef}\r\n            />\r\n            {(this.state.error.length !== 0) ? <Mui.FormHelperText error={true}>{this.state.error}</Mui.FormHelperText> : null}\r\n          </Mui.DialogContent>\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              disabled={this.state.error.length !== 0 || this.state.newName.length === 0}\r\n              onClick={this.handleAddName}\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleKeyPress(event: React.KeyboardEvent<HTMLInputElement>): void {\r\n    if (event.key === 'Enter') {\r\n      if (this.state.error.length === 0) {\r\n        this.handleAddName();\r\n      }\r\n\r\n      event.preventDefault();\r\n    }\r\n\r\n  }\r\n\r\n  @bind\r\n  private handleNewNameChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n    const newName: string = event.target.value.trim();\r\n\r\n    let error: string = '';\r\n    const existingProfile: string | undefined = this.props.names.find((profile) => profile.toLowerCase() === newName.toLowerCase());\r\n    if (existingProfile) {\r\n      error = 'Player or team already exists';\r\n    }\r\n\r\n    this.setState({\r\n      error,\r\n      newName: event.target.value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleAddName(): void {\r\n    const newName: string = this.state.newName.trim();\r\n\r\n    if (newName.length > 0) {\r\n      this.props.addName(newName);\r\n      this.setState({\r\n        newName: '',\r\n      });\r\n\r\n      if (this.dialogInputRef.current) {\r\n        this.dialogInputRef.current.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showAddPlayerDialog: false,\r\n      newName: '',\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleAdd(): void {\r\n    this.setState({\r\n      showAddPlayerDialog: true,\r\n    });\r\n\r\n    if (this.dialogInputRef.current) {\r\n      this.dialogInputRef.current.focus();\r\n    }\r\n  }\r\n\r\n  @bind\r\n  private handleDelete(name: string): void {\r\n    this.props.removeName(name);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IFooterProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IFooterActions => ({\r\n  addName: (name: string) => dispatch(system.addName(name)),\r\n  removeName: (name: string) => dispatch(system.removeName(name)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Footer));\r\n","import * as types from './Types';\r\n\r\nexport function changeTheme(newTheme: types.ThemeOptions): types.SystemActionTypes {\r\n  return {\r\n    newTheme,\r\n    type: types.SYSTEM_CHANGE_THEME,\r\n  };\r\n}\r\n\r\nexport function addName(name: string): types.SystemActionTypes {\r\n  return {\r\n    name,\r\n    type: types.SYSTEM_ADD_NAME,\r\n  };\r\n}\r\n\r\nexport function removeName(name: string): types.SystemActionTypes {\r\n  return {\r\n    name,\r\n    type: types.SYSTEM_REMOVE_NAME,\r\n  };\r\n}\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport Footer from '../Footer';\r\n\r\nclass Home extends React.Component<{}, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Typography>\r\n          This is the home page where we provide useful details.\r\n        </Mui.Typography>\r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as split from '../../Store/Split';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 360,\r\n    minWidth: 360,\r\n    padding: theme.spacing(1),\r\n  },\r\n  avatar: {\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    height: 30,\r\n    width: 30,\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  selectedAvatar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText,\r\n  },\r\n  row: {\r\n    marginTop: theme.spacing(0.25),\r\n    marginBottom: theme.spacing(0.25),\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, split.ISplitScore>;\r\n}\r\n\r\ninterface IScoreCardActions {\r\n  addValue(name: string, rank: split.SplitRanks): void;\r\n  removeValue(name: string, rank: split.SplitRanks): void;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  IScoreCardActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nconst ValueMap: Record<split.SplitRanks, number[]> = {\r\n  A: [0, 30, 70, 120, 180, 200],\r\n  K: [0, 20, 50, 90, 140, 200],\r\n  Q: [0, 20, 50, 90, 140, 200],\r\n  J: [0, 20, 50, 90, 140, 200],\r\n  10: [0, 10, 30, 60, 100, 200],\r\n  9: [0, 10, 30, 60, 100, 200],\r\n  8: [0, 10, 30, 60, 100, 200],\r\n  7: [0, 10, 30, 60, 100, 200],\r\n  6: [0, 10, 30, 60, 100, 200],\r\n  5: [0, 10, 30, 60, 100, 200],\r\n  4: [0, 10, 30, 60, 100, 200],\r\n  3: [0, 10, 30, 60, 100, 200],\r\n  2: [0, 5, 20, 40, 70, 200],\r\n\r\n  Negative: [],\r\n};\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, {}> {\r\n  public render(): JSX.Element {\r\n    const myScore: split.ISplitScore = this.props.scores[this.props.name];\r\n\r\n    return (\r\n      <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n        <Mui.Grid container={true}>\r\n          <Mui.Grid item={true} xs={6}>\r\n            <Mui.Typography variant='h5'>\r\n              {this.props.name}\r\n            </Mui.Typography>\r\n          </Mui.Grid>\r\n          <Mui.Grid item={true} xs={6} className={this.props.classes.right}>\r\n            <Mui.Typography variant='h5'>\r\n              {this.calculateScore(myScore)}\r\n            </Mui.Typography>\r\n          </Mui.Grid>\r\n        </Mui.Grid>\r\n        <Mui.Divider variant='middle' />\r\n        {this.createRow(myScore, split.SplitRanks.A)}\r\n        {this.createRow(myScore, split.SplitRanks.K)}\r\n        {this.createRow(myScore, split.SplitRanks.Q)}\r\n        {this.createRow(myScore, split.SplitRanks.J)}\r\n        {this.createRow(myScore, split.SplitRanks.Ten)}\r\n        {this.createRow(myScore, split.SplitRanks.Nine)}\r\n        {this.createRow(myScore, split.SplitRanks.Eight)}\r\n        {this.createRow(myScore, split.SplitRanks.Seven)}\r\n        {this.createRow(myScore, split.SplitRanks.Six)}\r\n        {this.createRow(myScore, split.SplitRanks.Five)}\r\n        {this.createRow(myScore, split.SplitRanks.Four)}\r\n        {this.createRow(myScore, split.SplitRanks.Three)}\r\n        {this.createRow(myScore, split.SplitRanks.Two)}\r\n        <Mui.Grid container={true} justify='center' alignItems='center' className={this.props.classes.row}>\r\n          <Mui.Grid item={true} xs={4}>\r\n            <Mui.Button variant='outlined' onClick={() => this.handleIncrease(split.SplitRanks.Negative)}>\r\n              -5\r\n            </Mui.Button>\r\n          </Mui.Grid>\r\n          <Mui.Grid item={true} xs={4} className={this.props.classes.center}>\r\n            <Mui.Typography variant='h5'>{this.getRankValues(myScore, split.SplitRanks.Negative)}</Mui.Typography>\r\n          </Mui.Grid>\r\n          <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n            <Mui.Button variant='outlined' onClick={() => this.handleDecrease(split.SplitRanks.Negative)}>\r\n              +5\r\n        </Mui.Button>\r\n          </Mui.Grid>\r\n        </Mui.Grid>\r\n      </Mui.Paper>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private getRankValues(myScore: split.ISplitScore, rank: split.SplitRanks): number {\r\n    const index = myScore ? myScore.values[rank] : 0;\r\n\r\n    if (rank === split.SplitRanks.Negative) {\r\n      return -5 * index;\r\n    }\r\n\r\n    return ValueMap[rank][index];\r\n  }\r\n\r\n  @bind\r\n  private calculateScore(myScore: split.ISplitScore): number {\r\n    return this.getRankValues(myScore, split.SplitRanks.Negative) +\r\n      this.getRankValues(myScore, split.SplitRanks.A) +\r\n      this.getRankValues(myScore, split.SplitRanks.K) +\r\n      this.getRankValues(myScore, split.SplitRanks.Q) +\r\n      this.getRankValues(myScore, split.SplitRanks.J) +\r\n      this.getRankValues(myScore, split.SplitRanks.Ten) +\r\n      this.getRankValues(myScore, split.SplitRanks.Nine) +\r\n      this.getRankValues(myScore, split.SplitRanks.Eight) +\r\n      this.getRankValues(myScore, split.SplitRanks.Seven) +\r\n      this.getRankValues(myScore, split.SplitRanks.Six) +\r\n      this.getRankValues(myScore, split.SplitRanks.Five) +\r\n      this.getRankValues(myScore, split.SplitRanks.Four) +\r\n      this.getRankValues(myScore, split.SplitRanks.Three) +\r\n      this.getRankValues(myScore, split.SplitRanks.Two);\r\n  }\r\n\r\n  @bind\r\n  private handleIncrease(rank: split.SplitRanks): void {\r\n    this.props.addValue(this.props.name, rank);\r\n  }\r\n\r\n  @bind\r\n  private handleDecrease(rank: split.SplitRanks): void {\r\n    this.props.removeValue(this.props.name, rank);\r\n  }\r\n\r\n  @bind\r\n  private createRow(myScore: split.ISplitScore, rank: split.SplitRanks): JSX.Element {\r\n    const selectedIndex = myScore ? myScore.values[rank] : 0;\r\n\r\n    const avatars: JSX.Element[] = [];\r\n    for (let index = 0; index < 6; index++) {\r\n      let avatarClass = this.props.classes.avatar;\r\n      if (index === selectedIndex) {\r\n        avatarClass = `${avatarClass} ${this.props.classes.selectedAvatar}`;\r\n      }\r\n\r\n      avatars.push(<Mui.Avatar key={`${rank.toString()}-${index}`} className={avatarClass}>{ValueMap[rank][index]}</Mui.Avatar>);\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Grid container={true} justify='center' alignItems='center' className={this.props.classes.row}>\r\n          <Mui.Button variant='outlined' onClick={() => this.handleIncrease(rank)} style={{ marginRight: 10 }}>\r\n            {rank.toString()}\r\n          </Mui.Button>\r\n          {avatars}\r\n        </Mui.Grid>\r\n        <Mui.Divider />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.split.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreCardActions => ({\r\n  addValue: (name: string, rank: split.SplitRanks) => dispatch(split.addValue(name, rank)),\r\n  removeValue: (name: string, rank: split.SplitRanks) => dispatch(split.removeValue(name, rank)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as types from './Types';\r\n\r\nexport function addValue(name: string, rank: types.SplitRanks): types.SplitActionTypes {\r\n  return {\r\n    name,\r\n    rank,\r\n    type: types.SPLIT_ADD_VALUE,\r\n  };\r\n}\r\n\r\nexport function removeValue(name: string, rank: types.SplitRanks): types.SplitActionTypes {\r\n  return {\r\n    name,\r\n    rank,\r\n    type: types.SPLIT_REMOVE_VALUE,\r\n  };\r\n}\r\n\r\nexport function resetAll(): types.SplitActionTypes {\r\n  return {\r\n    type: types.SPLIT_RESET_ALL,\r\n  };\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as split from '../../Store/Split';\r\nimport ScoreCard from './ScoreCard';\r\nimport { bind } from 'decko';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  splitWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface ISplitProps {\r\n  names: string[];\r\n}\r\n\r\ninterface ISplitActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllSplitProps =\r\n  ISplitProps &\r\n  ISplitActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass Split extends React.Component<IAllSplitProps, {}> {\r\n  public render(): JSX.Element {\r\n    if (this.props.names.length === 0) {\r\n      return (\r\n        <Mui.Typography>\r\n          Go back to Home and add some players first!\r\n        </Mui.Typography>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n        <div className={this.props.classes.splitWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.props.reset();\r\n  }\r\n}\r\nconst mapStateToProps = (state: AppState): ISplitProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): ISplitActions => ({\r\n  reset: () => dispatch(split.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(Split));\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\n\r\nclass About extends React.Component<{}, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <Mui.Typography>\r\n        This site was created by Shane DeSeranno, Donald Gill, and Lara Ramey to aid in scoring games.\r\n      </Mui.Typography>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import * as Mui from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  marginTop: {\r\n    marginTop: 10,\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    verticalAlign: 'middle',\r\n  },\r\n});\r\n\r\ninterface ISafetyRowProps {\r\n  name: string;\r\n  played: boolean;\r\n  coupFourre: boolean;\r\n  togglePlayed(): void;\r\n  toggleCoupFourre(): void;\r\n}\r\n\r\ntype IAllSafetyRowProps =\r\n  ISafetyRowProps &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass SafetyRow extends React.Component<IAllSafetyRowProps, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Grid item={true} xs={6} className={this.props.classes.right}>\r\n          <Mui.Typography className={this.props.classes.marginTop}>{this.props.name}:</Mui.Typography>\r\n        </Mui.Grid>\r\n        <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Checkbox checked={this.props.played} onChange={this.props.togglePlayed} /></Mui.Grid>\r\n        <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Checkbox disabled={!this.props.played} checked={this.props.coupFourre} onChange={this.props.toggleCoupFourre} /></Mui.Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(localStyles)(SafetyRow);\r\n","import * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as milleBornes from '../../Store/MilleBornes';\r\nimport SafetyRow from './SafetyRow';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  marginTop: {\r\n    marginTop: 10,\r\n  },\r\n  right: {\r\n    textAlign: 'right',\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    verticalAlign: 'middle',\r\n  },\r\n  scoreButton: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  scoreCardPaper: {\r\n    margin: theme.spacing(1),\r\n    width: 170,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\ninterface IScoreCardProps {\r\n  name: string;\r\n}\r\n\r\ninterface IScoreCardMappedProps {\r\n  scores: Record<string, number>;\r\n}\r\n\r\ninterface IScoreCardActions {\r\n  addScore(name: string, value: number): void;\r\n}\r\n\r\ntype IAllScoreCardProps =\r\n  IScoreCardProps &\r\n  IScoreCardMappedProps &\r\n  IScoreCardActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\ninterface IScoreCardState {\r\n  showScoreDialog: boolean;\r\n  distance: number;\r\n  rightOfWayPlayed: boolean;\r\n  rightOfWayPlayedCF: boolean;\r\n  drivingAcePlayed: boolean;\r\n  drivingAcePlayedCF: boolean;\r\n  fuelTankPlayed: boolean;\r\n  fuelTankPlayedCF: boolean;\r\n  punctureProofPlayed: boolean;\r\n  punctureProofPlayedCF: boolean;\r\n  delayedAction: boolean;\r\n  safeTrip: boolean;\r\n  extension: boolean;\r\n  shutout: boolean;\r\n}\r\n\r\nclass ScoreCard extends React.Component<IAllScoreCardProps, IScoreCardState> {\r\n  constructor(p: IAllScoreCardProps) {\r\n    super(p);\r\n\r\n    this.state = {\r\n      showScoreDialog: false,\r\n      distance: 0,\r\n      rightOfWayPlayed: false,\r\n      rightOfWayPlayedCF: false,\r\n      drivingAcePlayed: false,\r\n      drivingAcePlayedCF: false,\r\n      fuelTankPlayed: false,\r\n      fuelTankPlayedCF: false,\r\n      punctureProofPlayed: false,\r\n      punctureProofPlayedCF: false,\r\n      delayedAction: false,\r\n      safeTrip: false,\r\n      extension: false,\r\n      shutout: false,\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <React.Fragment>\r\n        <Mui.Paper className={this.props.classes.scoreCardPaper}>\r\n          <Mui.Typography variant='h5'>{this.props.name}: {this.getScore()}</Mui.Typography>\r\n          <Mui.Divider />\r\n          <Mui.Button className={this.props.classes.scoreButton} color='primary' variant='contained' onClick={this.handleScoreRound}>Add Score</Mui.Button>\r\n        </Mui.Paper>\r\n\r\n        <Mui.Dialog open={this.state.showScoreDialog} maxWidth='xs' fullWidth={true} onClose={this.handleDialogClose}>\r\n          <Mui.DialogTitle>\r\n            Scoring for: {this.props.name}\r\n          </Mui.DialogTitle>\r\n\r\n          <Mui.Divider />\r\n\r\n          <Mui.DialogContent>\r\n            <Mui.Typography id='distance-slider' gutterBottom={true}>Distance</Mui.Typography>\r\n            <Mui.Slider\r\n              aria-labelledby='distance-slider'\r\n              valueLabelDisplay='on'\r\n              step={25}\r\n              min={0}\r\n              max={1000}\r\n              marks={true}\r\n              value={this.state.distance}\r\n              onChange={this.handleDistanceChanged}\r\n            />\r\n\r\n            <Mui.Grid container={true}>\r\n              <Mui.Grid item={true} xs={6} className={this.props.classes.right}></Mui.Grid>\r\n              <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Typography>Played</Mui.Typography></Mui.Grid>\r\n              <Mui.Grid item={true} xs={3} className={this.props.classes.center}><Mui.Typography>Coup-fourré</Mui.Typography></Mui.Grid>\r\n\r\n              <SafetyRow name='Right of Way' played={this.state.rightOfWayPlayed} coupFourre={this.state.rightOfWayPlayedCF} togglePlayed={this.handleToggleRightOfWay} toggleCoupFourre={this.handleToggleRightOfWayCF} />\r\n              <SafetyRow name='Driving Ace' played={this.state.drivingAcePlayed} coupFourre={this.state.drivingAcePlayedCF} togglePlayed={this.handleToggleDrivingAce} toggleCoupFourre={this.handleToggleDrivingAceCF} />\r\n              <SafetyRow name='Fuel Tank' played={this.state.fuelTankPlayed} coupFourre={this.state.fuelTankPlayedCF} togglePlayed={this.handleToggleFuelTank} toggleCoupFourre={this.handleToggleFuelTankCF} />\r\n              <SafetyRow name='Puncture Proof' played={this.state.punctureProofPlayed} coupFourre={this.state.punctureProofPlayedCF} togglePlayed={this.handleTogglePunctureProof} toggleCoupFourre={this.handleTogglePunctureProofCF} />\r\n\r\n              <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Delayed Action:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox disabled={this.state.distance < 1000} checked={this.state.delayedAction} onChange={this.handleToggleDelayedAction} /></Mui.Grid>\r\n\r\n              <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Safe Trip:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox disabled={this.state.distance < 1000} checked={this.state.safeTrip} onChange={this.handleToggleSafeTrip} /></Mui.Grid>\r\n\r\n              {/* <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Extension:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox checked={this.state.extension} onChange={this.handleToggleExtension} /></Mui.Grid> */}\r\n\r\n              <Mui.Grid item={true} xs={4} className={this.props.classes.right}>\r\n                <Mui.Typography className={this.props.classes.marginTop}>Shutout:</Mui.Typography>\r\n              </Mui.Grid>\r\n              <Mui.Grid item={true} xs={2} className={this.props.classes.center}><Mui.Checkbox disabled={this.state.distance < 1000} checked={this.state.shutout} onChange={this.handleToggleShutout} /></Mui.Grid>\r\n            </Mui.Grid>\r\n          </Mui.DialogContent>\r\n          <Mui.DialogActions>\r\n            <Mui.Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={this.handleDialogClose}\r\n            >\r\n              Cancel\r\n            </Mui.Button>\r\n\r\n            <Mui.Button\r\n              onClick={this.handleUpdateScore}\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Add\r\n            </Mui.Button>\r\n          </Mui.DialogActions>\r\n        </Mui.Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleDistanceChanged(event: React.ChangeEvent<{}>, value: number | number[]): void {\r\n    if (Array.isArray(value)) {\r\n      value = value[value.length - 1];\r\n    }\r\n\r\n    this.setState({\r\n      distance: value,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleDelayedAction(): void {\r\n    this.setState({\r\n      delayedAction: !this.state.delayedAction,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleShutout(): void {\r\n    this.setState({\r\n      shutout: !this.state.shutout,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleSafeTrip(): void {\r\n    this.setState({\r\n      safeTrip: !this.state.safeTrip,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleRightOfWay(): void {\r\n    this.setState({\r\n      rightOfWayPlayed: !this.state.rightOfWayPlayed,\r\n      rightOfWayPlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleRightOfWayCF(): void {\r\n    this.setState({\r\n      rightOfWayPlayedCF: !this.state.rightOfWayPlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleDrivingAce(): void {\r\n    this.setState({\r\n      drivingAcePlayed: !this.state.drivingAcePlayed,\r\n      drivingAcePlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleDrivingAceCF(): void {\r\n    this.setState({\r\n      drivingAcePlayedCF: !this.state.drivingAcePlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleFuelTank(): void {\r\n    this.setState({\r\n      fuelTankPlayed: !this.state.fuelTankPlayed,\r\n      fuelTankPlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleToggleFuelTankCF(): void {\r\n    this.setState({\r\n      fuelTankPlayedCF: !this.state.fuelTankPlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleTogglePunctureProof(): void {\r\n    this.setState({\r\n      punctureProofPlayed: !this.state.punctureProofPlayed,\r\n      punctureProofPlayedCF: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleTogglePunctureProofCF(): void {\r\n    this.setState({\r\n      punctureProofPlayedCF: !this.state.punctureProofPlayedCF,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleDialogClose(): void {\r\n    this.setState({\r\n      showScoreDialog: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private handleUpdateScore(): void {\r\n    let score: number = 0;\r\n\r\n    score += this.state.distance;\r\n\r\n    if (this.state.drivingAcePlayed) {\r\n      score += 100;\r\n      if (this.state.drivingAcePlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.fuelTankPlayed) {\r\n      score += 100;\r\n      if (this.state.fuelTankPlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.punctureProofPlayed) {\r\n      score += 100;\r\n      if (this.state.punctureProofPlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.rightOfWayPlayed) {\r\n      score += 100;\r\n      if (this.state.rightOfWayPlayedCF) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    if (this.state.drivingAcePlayed && this.state.fuelTankPlayed && this.state.punctureProofPlayed && this.state.rightOfWayPlayed) {\r\n      score += 300;\r\n    }\r\n\r\n    if (this.state.distance === 1000) {\r\n      score += 400;\r\n\r\n      if (this.state.shutout) {\r\n        score += 500;\r\n      }\r\n\r\n      if (this.state.safeTrip) {\r\n        score += 300;\r\n      }\r\n\r\n      if (this.state.extension) {\r\n        score += 200;\r\n      }\r\n\r\n      if (this.state.delayedAction) {\r\n        score += 300;\r\n      }\r\n    }\r\n\r\n    this.props.addScore(this.props.name, score);\r\n    this.setState({\r\n      showScoreDialog: false,\r\n      distance: 0,\r\n      rightOfWayPlayed: false,\r\n      rightOfWayPlayedCF: false,\r\n      drivingAcePlayed: false,\r\n      drivingAcePlayedCF: false,\r\n      fuelTankPlayed: false,\r\n      fuelTankPlayedCF: false,\r\n      punctureProofPlayed: false,\r\n      punctureProofPlayedCF: false,\r\n      delayedAction: false,\r\n      safeTrip: false,\r\n      extension: false,\r\n      shutout: false,\r\n    });\r\n  }\r\n\r\n  @bind\r\n  private getScore(): number {\r\n    const score = this.props.scores[this.props.name];\r\n    return score ? score : 0;\r\n  }\r\n\r\n  @bind\r\n  private handleScoreRound(): void {\r\n    this.setState({\r\n      showScoreDialog: true,\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IScoreCardMappedProps => ({\r\n  scores: state.milleBornes.scores,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IScoreCardActions => ({\r\n  addScore: (name: string, value: number) => dispatch(milleBornes.addScore(name, value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(ScoreCard));\r\n","import * as types from './Types';\r\n\r\nexport function resetAll(): types.MilleBornesActionTypes {\r\n  return {\r\n    type: types.MILLE_BORNES_RESET_ALL,\r\n  };\r\n}\r\n\r\nexport function addScore(name: string, value: number): types.MilleBornesActionTypes {\r\n  return {\r\n    name,\r\n    value,\r\n    type: types.MILLE_BORNES_ADD_SCORE,\r\n  };\r\n}\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport { bind } from 'decko';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport * as milleBornes from '../../Store/MilleBornes';\r\nimport ScoreCard from './ScoreCard';\r\n\r\nconst localStyles = (theme: Mui.Theme) => Mui.createStyles({\r\n  milleBornesWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\ninterface IMilleBornesProps {\r\n  names: string[];\r\n}\r\n\r\ninterface IMilleBornesActions {\r\n  reset(): void;\r\n}\r\n\r\ntype IAllMilleBornesProps =\r\n  IMilleBornesProps &\r\n  IMilleBornesActions &\r\n  Mui.WithStyles<typeof localStyles>;\r\n\r\nclass MilleBornes extends React.Component<IAllMilleBornesProps, {}> {\r\n  public render(): JSX.Element {\r\n    if (this.props.names.length === 0) {\r\n      return (\r\n        <Mui.Typography>\r\n          Go back to Home and add some players first!\r\n        </Mui.Typography>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.milleBornesWrapper}>\r\n          {this.props.names.map((name) => <ScoreCard key={name} name={name} />)}\r\n        </div>\r\n        <Mui.Button color='primary' variant='contained' onClick={this.handleReset}>Reset All</Mui.Button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  @bind\r\n  private handleReset(): void {\r\n    this.props.reset();\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IMilleBornesProps => ({\r\n  names: state.system.names,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IMilleBornesActions => ({\r\n  reset: () => dispatch(milleBornes.resetAll()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mui.withStyles(localStyles)(MilleBornes));\r\n","import * as React from 'react';\r\nimport * as Mui from '@material-ui/core';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from '../Home';\r\nimport Split from '../Split';\r\nimport About from '../About/About';\r\nimport MilleBornes from '../MilleBornes';\r\n\r\nclass Main extends React.Component<{}, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <Mui.Box m={2}>\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route path='/split' component={Split} />\r\n          <Route path='/millebornes' component={MilleBornes} />\r\n          <Route path='/about' component={About} />\r\n        </Switch>\r\n      </Mui.Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import * as React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { AppState } from '../../Store';\r\nimport { Themes } from '../../Theme';\r\nimport * as system from '../../Store/System';\r\nimport Header from '../Header';\r\nimport Main from '../Main';\r\n\r\ninterface IAppProps {\r\n  selectedTheme: system.ThemeOptions;\r\n}\r\n\r\nclass App extends React.Component<IAppProps, {}> {\r\n  public render(): JSX.Element {\r\n    const currentTheme = Themes.getTheme(this.props.selectedTheme);\r\n\r\n    return (\r\n      <ThemeProvider theme={currentTheme}>\r\n        <CssBaseline />\r\n        <Header />\r\n        <Main />\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): IAppProps => ({\r\n  selectedTheme: state.system.selectedTheme,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): {} => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './Store';\r\nimport App from './Components/App';\r\n\r\nReactDOM.render((\r\n  <HashRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </HashRouter>\r\n), document.getElementById('root'));\r\n"],"sourceRoot":""}